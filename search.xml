<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2021/04/25/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo<i class="fas fa-external-link-alt"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation<i class="fas fa-external-link-alt"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting<i class="fas fa-external-link-alt"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub<i class="fas fa-external-link-alt"></i></a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing<i class="fas fa-external-link-alt"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server<i class="fas fa-external-link-alt"></i></a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating<i class="fas fa-external-link-alt"></i></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment<i class="fas fa-external-link-alt"></i></a></p>
]]></content>
  </entry>
  <entry>
    <title>Gitee+PicGo图床搭建</title>
    <url>/2021/08/10/Gitee+PicGo%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="Gitee-PicGo图床搭建"><a href="#Gitee-PicGo图床搭建" class="headerlink" title="Gitee+PicGo图床搭建"></a>Gitee+PicGo图床搭建</h1><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ol>
<li><a class="link"   href="https://github.com/Molunerfinn/PicGo/releases" >PicGo<i class="fas fa-external-link-alt"></i></a>(请确保你安装了 Node.js， 并且版本 &gt;= 8)</li>
<li><a class="link"   href="https://www.typora.io/" >Typora<i class="fas fa-external-link-alt"></i></a></li>
</ol>
<p><a class="link"   href="https://picgo.github.io/PicGo-Doc/zh/guide/getting-started.html" >PicGo使用文档<i class="fas fa-external-link-alt"></i></a></p>
<p>安装上面两个软件</p>
<h2 id="PicGo配置Gitee"><a href="#PicGo配置Gitee" class="headerlink" title="PicGo配置Gitee"></a>PicGo配置Gitee</h2><ol>
<li>打开安装好的PicGo</li>
</ol>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210424000121069.png" alt="image-20210424000121069"></p>
<p>2.选择插件设置，搜索gitee</p>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210424000506412.png" alt="image-20210424000506412"></p>
<p>3.选择gitee-uploader插件，安装</p>
<p>4.建立<a class="link"   href="https://gitee.com/" >gitee<i class="fas fa-external-link-alt"></i></a>图床库</p>
<p>如果没gitee账号，注册一个</p>
<ul>
<li>新建仓库</li>
</ul>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210424001147170.png" alt="image-20210424001147170"></p>
<ul>
<li>仓库创建过程，最后点击创建</li>
</ul>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210424001501132.png" alt="image-20210424001501132"></p>
<p>5.生成Gitee的token</p>
<ul>
<li>打开设置</li>
</ul>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210424001927167.png" alt="image-20210424001927167"></p>
<ul>
<li>选择私人令牌</li>
</ul>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210424002003827.png" alt="image-20210424002003827"></p>
<ul>
<li><p>点击生成新令牌，把<strong>projects</strong>这一项勾上，其他的不用勾，然后提交，会生成一个token，复制到笔记中，记录下来</p>
<blockquote>
<p>注意：这个令牌只会明文显示一次，建议在配置插件的时候再来生成令牌，复制保存起来</p>
</blockquote>
</li>
</ul>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210424002151914.png" alt="image-20210424002151914"></p>
<ol start="6">
<li>配置PicGo</li>
</ol>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210424002655410.png" alt="image-20210424002655410"></p>
<ul>
<li><p>repo：用户名/仓库名称，比如仓库carrywl/image-hosting，找不到的可以直接复制仓库的url</p>
</li>
<li><p>branch：分支，这里写上master</p>
</li>
<li><p>token：填入生成的私人令牌</p>
</li>
<li><p>path：存储图片的路径，一般写上img</p>
</li>
<li><p>customPath：提交消息，这一项和下一项customURL都不用填。在提交到码云后，会显示提交消息，插件默认提交的是 <code>Upload 图片名 by picGo - 时间</code></p>
</li>
</ul>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><ol>
<li>打开Typora</li>
<li>文件==偏好设置==图像</li>
<li>在上传图像设置PicGo</li>
</ol>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210424004444021.png" alt="image-20210424004444021"></p>
<ol start="4">
<li>点击验证图片上传</li>
</ol>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210424003656340.png" alt="image-20210424003656340"></p>
<p>截图粘贴到Typora时，图片会被默认存到C盘，可以定时清理：C:\Users\你电脑的用户名\AppData\Roaming\Typora\typora-user-images</p>
<h2 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h2><p>设置好粘贴图片自动上传，报错，不能上传到图床</p>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210810163655125.png" alt="image-20210810163655125"></p>
<ol>
<li>文件-&gt;偏好设置-&gt;图像-&gt;验证图片上传选项</li>
</ol>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210810163801886.png" alt="image-20210810163801886"></p>
<ol start="2">
<li>查看端口</li>
</ol>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210810163915465.png" alt="image-20210810163915465"></p>
<ol start="3">
<li>打开配置文件</li>
</ol>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210810164017648.png" alt="image-20210810164017648"></p>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210810164052007.png" alt="image-20210810164052007"></p>
<ol start="4">
<li>设置Server</li>
</ol>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210810164128952.png" alt="image-20210810164128952"></p>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210810164150659.png" alt="image-20210810164150659"></p>
<ol start="5">
<li>设置Server 、文件配置、验证上传图片三个地方的端口要保持一致</li>
</ol>
<blockquote>
<p>参考文章：<a class="link"   href="https://blog.csdn.net/disILLL/article/details/103962241" >https://blog.csdn.net/disILLL/article/details/103962241<i class="fas fa-external-link-alt"></i></a></p>
</blockquote>
]]></content>
      <categories>
        <category>图床</category>
      </categories>
      <tags>
        <tag>图床</tag>
        <tag>Gitee</tag>
      </tags>
  </entry>
  <entry>
    <title>Java基础</title>
    <url>/2021/08/16/Java%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h1 id="Java基础"><a href="#Java基础" class="headerlink" title="Java基础"></a>Java基础</h1><p>gitee地址：<a class="link"   href="https://gitee.com/carrywl/java-basic.git" >https://gitee.com/carrywl/java-basic.git<i class="fas fa-external-link-alt"></i></a></p>
<p>八大基本类型 byte,short,char==int==long==float==double boolean</p>
<h2 id="Scanner对象"><a href="#Scanner对象" class="headerlink" title="Scanner对象"></a>Scanner对象</h2><p>next和nextLine区别：</p>
<p>next：</p>
<ul>
<li>一定要读取到有效字符后才可以结束输入。</li>
<li>对输入有效字符之前遇到的空白，next会自动将其去掉</li>
<li>只有输入有效字符后才将其后面输入的空白作为分隔符或结束符</li>
<li><strong>next不能得到带有空格的字符串</strong></li>
</ul>
<p>nextLine:</p>
<ul>
<li>以Enter为结束符</li>
<li>可以获得空白</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">    Scanner scanner1 = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;next请输入:&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(scanner.hasNext())&#123;</span><br><span class="line">        String str = scanner.next();</span><br><span class="line">        System.out.println(<span class="string">&quot;next接受:&quot;</span>+str);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;nextLine请输入:&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(scanner1.hasNext())&#123;</span><br><span class="line">        String str = scanner1.nextLine();</span><br><span class="line">        System.out.println(<span class="string">&quot;nextLine接受:&quot;</span>+str);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//凡是属于IO流的如果不关闭就会占用资源</span></span><br><span class="line">    scanner.close();</span><br><span class="line">    scanner1.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210502224706949.png" alt="image-20210502224706949"></p>
<h2 id="可变参数"><a href="#可变参数" class="headerlink" title="可变参数"></a>可变参数</h2><ul>
<li>在指定参数类型后加一个省略号</li>
<li>一个方法只能声明一个可变参数，而且必须放到最后位置</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">       printMax(<span class="number">34</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">56.5</span>);</span><br><span class="line">       printMax(<span class="keyword">new</span> <span class="keyword">double</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printMax</span><span class="params">(<span class="keyword">double</span>... num)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">if</span> (num.length == <span class="number">0</span>)&#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;No argument passed&quot;</span>);</span><br><span class="line">           <span class="keyword">return</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">double</span> result = num[<span class="number">0</span>];</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; num.length;i++)&#123;</span><br><span class="line">           <span class="keyword">if</span> (num[i] &gt; result)&#123;</span><br><span class="line">               result = num[i];</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       System.out.println(<span class="string">&quot;The max value is &quot;</span>+result);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<h2 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//阶乘</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">       System.out.println(f(<span class="number">5</span>));</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">       <span class="keyword">if</span> (n==<span class="number">1</span>)&#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">       &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">           <span class="keyword">return</span> n*f(n-<span class="number">1</span>);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<h2 id="计算器练习"><a href="#计算器练习" class="headerlink" title="计算器练习"></a>计算器练习</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 计算器，要求实现加减乘除功能，并且能够循环接收新的数据，通过用户交互实现</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Calculator</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 写4个方法:加减乘除</span></span><br><span class="line"><span class="comment">     * 利用循环+ switch进行用户交互</span></span><br><span class="line"><span class="comment">     * 传递需要操作的两个数</span></span><br><span class="line"><span class="comment">     * 输出结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">while</span> (scanner.hasNextDouble())&#123;</span><br><span class="line">            <span class="keyword">double</span> num1 = scanner.nextDouble();;</span><br><span class="line">            String mark = scanner.next();</span><br><span class="line">            <span class="keyword">double</span> num2 = scanner.nextDouble();</span><br><span class="line">            <span class="keyword">switch</span>(mark)&#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;+&quot;</span>:</span><br><span class="line">                    add(num1,num2);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;-&quot;</span>:</span><br><span class="line">                    minus(num1,num2);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;*&quot;</span>:</span><br><span class="line">                    multiply(num1,num2);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;/&quot;</span>:</span><br><span class="line">                    except(num1,num2);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    System.out.println(<span class="string">&quot;请正确输入&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;输出任意字母退出&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">double</span> num1,<span class="keyword">double</span> num2)</span></span>&#123;</span><br><span class="line">        System.out.println(num1+num2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">minus</span><span class="params">(<span class="keyword">double</span> num1,<span class="keyword">double</span> num2)</span></span>&#123;</span><br><span class="line">        System.out.println(num1-num2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">multiply</span><span class="params">(<span class="keyword">double</span> num1,<span class="keyword">double</span> num2)</span></span>&#123;</span><br><span class="line">        System.out.println(num1*num2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">except</span><span class="params">(<span class="keyword">double</span> num1,<span class="keyword">double</span> num2)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (num2 == <span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;分母不可为0&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(num1/num2);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210516223527021.png" alt="image-20210516223527021"></p>
<h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><ol>
<li>比较数组中，两个相邻的元素，如果第一个数比第二个数大，我们就交换他们的位置</li>
<li>每一次比较，都会产生出一个最大，或者最小的数字</li>
<li>下一轮则可以少一次循环</li>
<li>依次循环，直到结束</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] sort(<span class="keyword">int</span>[] array)&#123;</span><br><span class="line">    <span class="keyword">int</span> temp = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt; array.length-<span class="number">1</span>; i++)&#123;</span><br><span class="line">        <span class="comment">//内层循环，比较两个数，如果第一个比第二个树大，那么交换位置</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; array.length-<span class="number">1</span>-i; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (array[j+<span class="number">1</span>] &gt; array[j])&#123;</span><br><span class="line">                temp = array[j];</span><br><span class="line">                array[j] = array[j+<span class="number">1</span>];</span><br><span class="line">                array[j+<span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> array;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2><p>本质：以类的方式组织代码，以对象的组织（封装）数据。</p>
<p>三大特性：封装、继承、多态</p>
<ul>
<li>super注意点：</li>
</ul>
<ol>
<li>super调用父类的构造方法，必须在构造方法的第一个</li>
<li>super必须只能出现在子类的方法或者构造方法中</li>
<li>super和this不能同时调用构造方法</li>
</ol>
<ul>
<li><p>super和this不同：</p>
<p>代表的对象不同：</p>
<p>​        this:本身调用者这个对象</p>
<p>​        super:代表父类对象的应用    </p>
<p>前提：</p>
<p>​        this:没有继承也可以使用</p>
<p>​        super:只能在继承的条件下使用</p>
<p>构造方法：</p>
<p>​        this():本来的构造</p>
<p>​        super():父类的构造</p>
</li>
</ul>
<h2 id="IO操作"><a href="#IO操作" class="headerlink" title="IO操作"></a>IO操作</h2><h3 id="读取文件内容"><a href="#读取文件内容" class="headerlink" title="读取文件内容"></a>读取文件内容</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getOperationHistoryByFile</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    FileReader fileReader = <span class="keyword">null</span>;</span><br><span class="line">    BufferedReader bufferedReader = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        fileReader = <span class="keyword">new</span> FileReader(<span class="string">&quot;history.log&quot;</span>);</span><br><span class="line">        bufferedReader = <span class="keyword">new</span> BufferedReader(fileReader);</span><br><span class="line">        String str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">while</span>( (str = bufferedReader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.println(str);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (bufferedReader != <span class="keyword">null</span>)&#123;</span><br><span class="line">            bufferedReader.close();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (fileReader != <span class="keyword">null</span>)&#123;</span><br><span class="line">            fileReader.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210804193423354.png" alt="image-20210804193423354"></p>
<h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><h3 id="log4j-slf4"><a href="#log4j-slf4" class="headerlink" title="log4j+slf4"></a>log4j+slf4</h3><ul>
<li><p>依赖：</p>
<ul>
<li>slf4j-api</li>
<li>log4j-core</li>
<li>log4j-api</li>
<li>log4j-slf4j-impl</li>
<li>commons-logging</li>
</ul>
</li>
<li><p>配置文件log4j2.xml：</p>
</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- log4j2 配置文件 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 日志级别 trace&lt;warn&lt;info&lt;warn&lt;error&lt;fatal --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">status</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 自定义属性 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Properties</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 日志格式</span></span><br><span class="line"><span class="comment">            %F:输出日志消息产生时所在的文件名称</span></span><br><span class="line"><span class="comment">            %L:输出代码中的行号</span></span><br><span class="line"><span class="comment">            %p:输出日志信息的优先级，即DEBUG，INFO，WARN，ERROR，FATAL</span></span><br><span class="line"><span class="comment">            %5p:日志级别输出右对齐，左边以空格填充</span></span><br><span class="line"><span class="comment">            %m:输出代码中指定的具体日志信息</span></span><br><span class="line"><span class="comment">            %n:输出一个回车换行符，Windows平台为&quot;rn&quot;，Unix平台为&quot;n&quot;</span></span><br><span class="line"><span class="comment">            %t:输出产生该日志事件的线程名</span></span><br><span class="line"><span class="comment">            %d:输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，如：%d&#123;yyyy/MM/dd HH:mm:ss,SSS&#125;</span></span><br><span class="line"><span class="comment">            %r:输出自应用程序启动到输出该log信息耗费的毫秒数</span></span><br><span class="line"><span class="comment">            %c:输出日志信息所属的类目，通常就是所在类的全名</span></span><br><span class="line"><span class="comment">            %M:输出产生日志信息的方法名</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Property</span> <span class="attr">name</span>=<span class="string">&quot;pattern&quot;</span>&gt;</span>%d&#123;yyyy-MM-dd HH:mm:ss,SSS&#125; (%F:%L) %5p %c %m%n<span class="tag">&lt;/<span class="name">Property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 日志文件路径 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Property</span> <span class="attr">name</span>=<span class="string">&quot;filePath&quot;</span>&gt;</span>logs/<span class="tag">&lt;/<span class="name">Property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- warn级别日志文件名称 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Property</span> <span class="attr">name</span>=<span class="string">&quot;warnFileName&quot;</span>&gt;</span>$&#123;filePath&#125;/warn.log<span class="tag">&lt;/<span class="name">Property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- info级别日志文件名称 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Property</span> <span class="attr">name</span>=<span class="string">&quot;infoFileName&quot;</span>&gt;</span>$&#123;filePath&#125;/info.log<span class="tag">&lt;/<span class="name">Property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- error级别日志文件名称 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Property</span> <span class="attr">name</span>=<span class="string">&quot;errorFileName&quot;</span>&gt;</span>$&#123;filePath&#125;/error.log<span class="tag">&lt;/<span class="name">Property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 定义输出器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appenders</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 控制台输出 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Console</span> <span class="attr">name</span>=<span class="string">&quot;console&quot;</span> <span class="attr">target</span>=<span class="string">&quot;SYSTEM_OUT&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 日志格式 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;$&#123;pattern&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Console</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- warn级别日志文件输出 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RollingFile</span> <span class="attr">name</span>=<span class="string">&quot;warn_appender&quot;</span> <span class="attr">fileName</span>=<span class="string">&quot;$&#123;warnFileName&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">filePattern</span>=<span class="string">&quot;$&#123;filePath&#125;/%d&#123;yyyy-MM-dd&#125;/warn_%i.log&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 过滤器 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Filters</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 限制日志级别在warn及以上在error以下 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">&quot;warn&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">&quot;error&quot;</span> <span class="attr">onMatch</span>=<span class="string">&quot;DENY&quot;</span> <span class="attr">onMismatch</span>=<span class="string">&quot;NEUTRAL&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Filters</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 日志格式 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;$&#123;pattern&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 策略 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Policies</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 每隔一天转存 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span> <span class="attr">interval</span>=<span class="string">&quot;1&quot;</span> <span class="attr">modulate</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 文件大小 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">SizeBasedTriggeringPolicy</span> <span class="attr">size</span>=<span class="string">&quot;100 MB&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Policies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">RollingFile</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- info级别日志文件输出 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RollingFile</span> <span class="attr">name</span>=<span class="string">&quot;info_appender&quot;</span> <span class="attr">fileName</span>=<span class="string">&quot;$&#123;infoFileName&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">filePattern</span>=<span class="string">&quot;$&#123;filePath&#125;/%d&#123;yyyy-MM-dd&#125;/info_%i.log&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 过滤器 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Filters</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 限制日志级别在info及以上在error以下 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">&quot;info&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">&quot;warn&quot;</span> <span class="attr">onMatch</span>=<span class="string">&quot;DENY&quot;</span> <span class="attr">onMismatch</span>=<span class="string">&quot;NEUTRAL&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Filters</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 日志格式 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;$&#123;pattern&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 策略 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Policies</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 每隔一天转存 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span> <span class="attr">interval</span>=<span class="string">&quot;1&quot;</span> <span class="attr">modulate</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 文件大小 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">SizeBasedTriggeringPolicy</span> <span class="attr">size</span>=<span class="string">&quot;100 MB&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Policies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">RollingFile</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- error级别日志文件输出 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">RollingFile</span> <span class="attr">name</span>=<span class="string">&quot;error_appender&quot;</span> <span class="attr">fileName</span>=<span class="string">&quot;$&#123;errorFileName&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">filePattern</span>=<span class="string">&quot;$&#123;filePath&#125;/%d&#123;yyyy-MM-dd&#125;/error_%i.log&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 过滤器 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Filters</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 限制日志级别在error及以上 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ThresholdFilter</span> <span class="attr">level</span>=<span class="string">&quot;error&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Filters</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 日志格式 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span> <span class="attr">pattern</span>=<span class="string">&quot;$&#123;pattern&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Policies</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 每隔一天转存 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">TimeBasedTriggeringPolicy</span> <span class="attr">interval</span>=<span class="string">&quot;1&quot;</span> <span class="attr">modulate</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 文件大小 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">SizeBasedTriggeringPolicy</span> <span class="attr">size</span>=<span class="string">&quot;100 MB&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Policies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">RollingFile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appenders</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 定义logger --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">loggers</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 定义根logger --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 日志级别设备为info 具体日志级别由appender限制 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Root</span> <span class="attr">level</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 输出控制台 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;console&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 输出warn级别日志文件 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;warn_appender&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 输出info级别日志文件 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;info_appender&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 输出error级别日志文件 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">AppenderRef</span> <span class="attr">ref</span>=<span class="string">&quot;error_appender&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Root</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">loggers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>使用：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.wl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExperimentApplication</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">transient</span> <span class="keyword">static</span> Logger logger = LoggerFactory.getLogger(ExperimentApplication.class);</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		logger.info(<span class="string">&quot;begin to start&quot;</span>);</span><br><span class="line">		logger.info(<span class="string">&quot;started&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>JAVA</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker</title>
    <url>/2021/08/13/Docker/</url>
    <content><![CDATA[<h1 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h1><h2 id="Linux环境安装"><a href="#Linux环境安装" class="headerlink" title="Linux环境安装"></a>Linux环境安装</h2><p>如果之前安装过，需要卸载，否则跳过这一步</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum remove docker \</span><br><span class="line">                  docker-client \</span><br><span class="line">                  docker-client-latest \</span><br><span class="line">                  docker-common \</span><br><span class="line">                  docker-latest \</span><br><span class="line">                  docker-latest-logrotate \</span><br><span class="line">                  docker-logrotate \</span><br><span class="line">                  docker-engine</span><br></pre></td></tr></table></figure>

<p>如果之前没用安装过</p>
<ol>
<li>安装工具</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install -y yum-utils</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>配置下载</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>安装docker引擎</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>启动docker</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>查看docker版本</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker -v</span><br></pre></td></tr></table></figure>

<ol start="6">
<li>查看docker镜像</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure>

<ol start="7">
<li>设置开机自启</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl enable docker</span><br></pre></td></tr></table></figure>

<blockquote>
<p> 参考链接：<a class="link"   href="https://docs.docker.com/engine/install/centos/" >https://docs.docker.com/engine/install/centos/<i class="fas fa-external-link-alt"></i></a></p>
</blockquote>
<h2 id="镜像加速"><a href="#镜像加速" class="headerlink" title="镜像加速"></a>镜像加速</h2><ol>
<li><p>登录阿里云 -&gt; 控制台 -&gt; 容器镜像服务 -&gt; 镜像加速器</p>
</li>
<li><p>选择CentOS</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://on787l5d.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure></li>
</ol>
<blockquote>
<p>参考链接：<a class="link"   href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors" >https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors<i class="fas fa-external-link-alt"></i></a></p>
</blockquote>
<h2 id="安装MySQL5-7"><a href="#安装MySQL5-7" class="headerlink" title="安装MySQL5.7"></a>安装MySQL5.7</h2><p><a class="link"   href="https://registry.hub.docker.com/" >dockerhub<i class="fas fa-external-link-alt"></i></a></p>
<ol>
<li><p>搜索MySQL，选择Official Images(官方镜像)</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">下载5.7的MySQL</span></span><br><span class="line">docker pull mysql:5.7</span><br></pre></td></tr></table></figure></li>
<li><p>检查是否安装成功</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure></li>
<li><p>创建实例并启动</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -p 3306:3306 --name mysql \</span><br><span class="line">-v /mydata/mysql/conf:/etc/mysql \</span><br><span class="line">-v /mydata/mysql/log:/var/log/mysql \</span><br><span class="line">-v /mydata/mysql/data:/var/lib/mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123456 \</span><br><span class="line">-d mysql:5.7</span><br><span class="line"></span><br><span class="line">-v /mydata/mysql/log:/var/log/mysql 映射日志文件</span><br><span class="line">-v /opt/mysql/data/:/var/lib/mysql 映射数据目录</span><br><span class="line">-v /mydata/mysql/conf:/etc/mysql 映射配置文件</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123456 映射mysql root用户密码</span><br><span class="line">-d mysql:5.7 以后台方式启动</span><br></pre></td></tr></table></figure></li>
<li><p>使用docker ps查看在运行的容器</p>
<p>若没有，可以用docker ps -a显示所有的容器，包括未运行的</p>
<p>若MySQL显示状态exit，则用 **docker logs -f 容器名称 **查看日志</p>
<p>我的报错：之前安装过8.0，8.0配置文件没清除</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Table flags are 0 in the data dictionary but the flags in file .&#x2F;ibdata1 are 0x4800!</span><br></pre></td></tr></table></figure>

<p>解决方法：删除之前的配置文件，然后重新创建实例</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#删除之前的配置文件</span><br><span class="line">rm -rf &#x2F;mydata</span><br></pre></td></tr></table></figure></li>
</ol>
<p>成功：</p>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210812231844723.png" alt="image-20210812231844723"></p>
<ol start="5">
<li><p>mysql配置 vi /mydata/mysql/conf/my.cnf</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[client]</span><br><span class="line">default-character-set=utf8</span><br><span class="line">[mysql]</span><br><span class="line">default-character-set=utf8</span><br><span class="line">[mysqld]</span><br><span class="line">init_connect=&#x27;SET collation_connection = utf8_unicode_ci&#x27;</span><br><span class="line">init_connect=&#x27;SET NAMES utf8&#x27;</span><br><span class="line">character-set-server=utf8</span><br><span class="line">collation-server=utf8_unicode_ci</span><br><span class="line">skip-character-set-client-handshake</span><br><span class="line">skip-name-resolve</span><br></pre></td></tr></table></figure></li>
<li><p>重启</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker restart mysql</span><br></pre></td></tr></table></figure></li>
<li><p>设置docker启动时，自动启动mysql</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker update mysql --restart&#x3D;always</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="安装Redis"><a href="#安装Redis" class="headerlink" title="安装Redis"></a>安装Redis</h2><ol>
<li>下载最新的redis</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker pull redis</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>创建实例并启动</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir -p &#x2F;mydata&#x2F;redis&#x2F;conf</span><br><span class="line"></span><br><span class="line">touch &#x2F;mydata&#x2F;redis&#x2F;conf&#x2F;redis.conf</span><br><span class="line"></span><br><span class="line">docker run -p 6379:6379 --name redis -v &#x2F;mydata&#x2F;redis&#x2F;data:&#x2F;data \</span><br><span class="line">-v &#x2F;mydata&#x2F;redis&#x2F;conf&#x2F;redis.conf:&#x2F;etc&#x2F;redis&#x2F;redis.conf \</span><br><span class="line">-d redis redis-server &#x2F;etc&#x2F;redis&#x2F;redis.conf</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>连接到docker的redis</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker exec -it redis redis-cli</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>持久化配置 vi /mydata/redis/conf/redis.conf</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">appendonly yes</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>重启</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker restart redis</span><br></pre></td></tr></table></figure>

<ol start="6">
<li>设置启动docker时，自动启动redis</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker update redis --restart&#x3D;always</span><br></pre></td></tr></table></figure>



<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ul>
<li>查看docker容器</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">查看在运行的容器</span></span><br><span class="line">docker ps</span><br><span class="line"><span class="meta">#</span><span class="bash">显示所有的容器，包括未运行的</span></span><br><span class="line">docker ps -a</span><br></pre></td></tr></table></figure>

<ul>
<li>进入nginx内部</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">容器ID 也就是CONTAINER ID 可以通过docker ps来查看</span></span><br><span class="line">docker exec -it 容器ID|names bash</span><br></pre></td></tr></table></figure>

<ul>
<li>将本地的文件放入docker容器</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker cp 文件路径 容器ID:docker容器地址</span><br></pre></td></tr></table></figure>

<ul>
<li>启动一个nginx容器</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -d -p 8080:80 --name nginx-8080 nginx</span><br></pre></td></tr></table></figure>

<p>-p：设置端口映射，8080:80表示将本地的8080端口映射到容器内部的80端口</p>
<p>-d：表示设置容器在后台运行</p>
<p>–name：表示设置容器名称</p>
<ul>
<li>关闭一个nginx容器</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">names代表设置容器名称</span></span><br><span class="line">docker stop names|容器ID</span><br></pre></td></tr></table></figure>

<ul>
<li>启动一个已经停止的nginx容器</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker start names|容器ID</span><br></pre></td></tr></table></figure>

<ul>
<li>重启容器</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker restart names|容器ID</span><br></pre></td></tr></table></figure>

<ul>
<li>构建镜像</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker build -t 镜像名称 .</span><br></pre></td></tr></table></figure>

<ul>
<li>查看日志</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">-f : 查看实时日志</span></span><br><span class="line">docker logs -f 容器名称</span><br></pre></td></tr></table></figure>

<ul>
<li>删除容器</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker rm 容器ID</span><br></pre></td></tr></table></figure>

<ul>
<li>删除镜像</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker rmi 镜像ID</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot</title>
    <url>/2021/05/18/Spring%20Boot/</url>
    <content><![CDATA[<h1 id="Spring-Boot"><a href="#Spring-Boot" class="headerlink" title="Spring Boot"></a>Spring Boot</h1><ul>
<li><p>打包指令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mvn clean package -Dmaven.test.skip=true</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>Spring Boot</category>
      </categories>
      <tags>
        <tag>Spring Boot</tag>
      </tags>
  </entry>
  <entry>
    <title>Java多线程</title>
    <url>/2021/06/26/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h1><h2 id="线程的创建"><a href="#线程的创建" class="headerlink" title="线程的创建"></a>线程的创建</h2><ol>
<li>继承Thread类</li>
</ol>
<p>继承Thread类，重写run()方法，调用start开启线程</p>
<p>不建议使用：避免OOP单继承局限性</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestThread01</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;我在写代码。。。&quot;</span>+i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建一个线程对象</span></span><br><span class="line">        TestThread01 testThread01 = <span class="keyword">new</span> TestThread01();</span><br><span class="line">        <span class="comment">//调用start开启线程</span></span><br><span class="line">        testThread01.start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;我在看代码。。。&quot;</span>+i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210530145537199.png" alt="image-20210530145537199"></p>
<p>注意：线程开启不一定立即执行，由CPU调度执行</p>
<ol start="2">
<li>实现Runnable接口</li>
</ol>
<p>实现runnable接口，重写run方法，执行线程需要runnable接口实现类，调用start方法</p>
<p>推荐使用：避免单继承局限性，灵活方便，方便同一个对象被多个线程使用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestThread03</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;start开启。。。&quot;</span>+i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建runnable接口的实现类对象</span></span><br><span class="line">        TestThread03 testThread03 = <span class="keyword">new</span> TestThread03();</span><br><span class="line">        <span class="comment">//创建线程对象，通过线程对象来开启线程，代理</span></span><br><span class="line">        Thread thread = <span class="keyword">new</span> Thread(testThread03);</span><br><span class="line">        thread.start();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;主线程。。。&quot;</span>+i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>实现Callable接口</li>
</ol>
<p>优点：可以定义返回值；可以抛出异常</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestCallable</span> <span class="keyword">implements</span> <span class="title">Callable</span>&lt;<span class="title">Boolean</span>&gt; </span>&#123;</span><br><span class="line">    <span class="comment">//网络图片地址</span></span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line">    <span class="comment">//保存文件名称</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TestCallable</span><span class="params">(String url,String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.url = url;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">call</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        WebDownloaderCallable webDownloaderRunnable = <span class="keyword">new</span> WebDownloaderCallable();</span><br><span class="line">        webDownloaderRunnable.downloader(url,name);</span><br><span class="line">        System.out.println(<span class="string">&quot;下载文件名为:&quot;</span>+name);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ExecutionException, InterruptedException </span>&#123;</span><br><span class="line">        TestCallable t1 = <span class="keyword">new</span> TestCallable(<span class="string">&quot;https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/avatar.jpeg&quot;</span>,<span class="string">&quot;1.jpg&quot;</span>);</span><br><span class="line">        TestCallable t2 = <span class="keyword">new</span> TestCallable(<span class="string">&quot;https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/weChat-Code.jpg&quot;</span>,<span class="string">&quot;2.jpg&quot;</span>);</span><br><span class="line">        TestCallable t3 = <span class="keyword">new</span> TestCallable(<span class="string">&quot;https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/QQ图片20200809153256.jpg&quot;</span>,<span class="string">&quot;3.jpg&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建执行服务</span></span><br><span class="line">        ExecutorService ser = Executors.newFixedThreadPool(<span class="number">3</span>);</span><br><span class="line">        <span class="comment">//提交执行</span></span><br><span class="line">        Future&lt;Boolean&gt; r1 = ser.submit(t1);</span><br><span class="line">        Future&lt;Boolean&gt; r2 = ser.submit(t2);</span><br><span class="line">        Future&lt;Boolean&gt; r3 = ser.submit(t3);</span><br><span class="line">        <span class="comment">//获取结果</span></span><br><span class="line">        <span class="keyword">boolean</span> rs1 = r1.get();</span><br><span class="line">        <span class="keyword">boolean</span> rs2 = r2.get();</span><br><span class="line">        <span class="keyword">boolean</span> rs3 = r3.get();</span><br><span class="line">        <span class="comment">//关闭服务</span></span><br><span class="line">        ser.shutdownNow();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 下载器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WebDownloaderCallable</span></span>&#123;</span><br><span class="line">    <span class="comment">//下载方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">downloader</span><span class="params">(String url,String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            FileUtils.copyURLToFile(<span class="keyword">new</span> URL(url),<span class="keyword">new</span> File(name));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.out.println(<span class="string">&quot;IO异常,downloader方法出现问题&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="静态代理"><a href="#静态代理" class="headerlink" title="静态代理"></a>静态代理</h2><p>总结：</p>
<ol>
<li>真实对象和代理对象都要实现同一个接口interface</li>
<li>代理对象要代理真实角色</li>
</ol>
<p>好处：</p>
<ol>
<li>代理对象可以做很多真实对象做不了的事情</li>
<li>真实对象专注做自己的事情</li>
</ol>
<p>线程与静态代理对比：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> Thread(()-&gt;System.out.println(<span class="string">&quot;要结婚了！！！&quot;</span>);).start();</span><br><span class="line"><span class="keyword">new</span> WeddingCompany(<span class="keyword">new</span> You()).HappyMarry();</span><br></pre></td></tr></table></figure>

<h2 id="Lambda表达式"><a href="#Lambda表达式" class="headerlink" title="Lambda表达式"></a>Lambda表达式</h2><p>总结：</p>
<ul>
<li>Lambda表达式只能有一行代码的情况下才能简化成为一行，如果有多行，那么就用代码块包裹</li>
<li>前提是接口为函数式接口，只有一个方法</li>
<li>多个参数也可以去除参数类型，必须加括号</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestLambda01</span> </span>&#123;</span><br><span class="line">    <span class="comment">//静态内部类</span></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Like2</span> <span class="keyword">implements</span> <span class="title">Ilike</span></span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Lambda</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;静态内部类--Lambda2&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Ilike like = <span class="keyword">new</span> Like();</span><br><span class="line">        like.Lambda();</span><br><span class="line"></span><br><span class="line">        like = <span class="keyword">new</span> Like2();</span><br><span class="line">        like.Lambda();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//局部内部类</span></span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">Like3</span> <span class="keyword">implements</span> <span class="title">Ilike</span></span>&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Lambda</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;局部内部类--Lambda3&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        like = <span class="keyword">new</span> Like3();</span><br><span class="line">        like.Lambda();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//匿名内部类 没有名称 必须借助接口或者父类</span></span><br><span class="line">        like = <span class="keyword">new</span> Ilike() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Lambda</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;匿名内部类--Lambda4&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        like.Lambda();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//Lambda</span></span><br><span class="line">        like = ()-&gt;&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Lambda5&quot;</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        like.Lambda();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Ilike</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Lambda</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//实现类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Like</span> <span class="keyword">implements</span> <span class="title">Ilike</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Lambda</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Lambda1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="线程状态"><a href="#线程状态" class="headerlink" title="线程状态"></a>线程状态</h2><p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210601213700674.png" alt="image-20210601213700674"></p>
<p>线程停止：</p>
<p>建议要自己设置一个标志位，来停止线程</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestThreadStop</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span>  flag = <span class="keyword">true</span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i  = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (flag) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;run...&quot;</span>+ i++);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">stop</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.flag = <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        TestThreadStop testThreadState = <span class="keyword">new</span> TestThreadStop();</span><br><span class="line">        <span class="keyword">new</span> Thread(testThreadState).start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;main...&quot;</span>+i);</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">900</span>)&#123;</span><br><span class="line">                testThreadState.stop();</span><br><span class="line">                System.out.println(<span class="string">&quot;线程停止&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>线程插队：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestThreadJoin</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">50</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;VIP来了&quot;</span>+i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        TestThreadJoin testThreadJoin = <span class="keyword">new</span> TestThreadJoin();</span><br><span class="line">        Thread thread  = <span class="keyword">new</span> Thread(testThreadJoin);</span><br><span class="line">        thread.start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">50</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    thread.join();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;main...&quot;</span>+i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>线程休眠：</p>
<p><strong>每个对象都有一把锁，sleep不会释放🔒</strong></p>
<p>观察线程状态：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestThreadState</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Thread thread = <span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;休眠结束&quot;</span>);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        Thread.State state = thread.getState();</span><br><span class="line">        <span class="comment">//NEW</span></span><br><span class="line">        System.out.println(state);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//启动线程</span></span><br><span class="line">        thread.start();</span><br><span class="line">        state = thread.getState();</span><br><span class="line">        <span class="comment">//RUNNABLE</span></span><br><span class="line">        System.out.println(state);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (state != Thread.State.TERMINATED)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">100</span>);</span><br><span class="line">                state = thread.getState();</span><br><span class="line">                System.out.println(state);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="线程优先级"><a href="#线程优先级" class="headerlink" title="线程优先级"></a>线程优先级</h2><p>优先级低只是说明获得调度的概率低，并不是优先级低就不会被调用了。这些都看CPU调度。</p>
<h2 id="守护进程"><a href="#守护进程" class="headerlink" title="守护进程"></a>守护进程</h2><ul>
<li>线程分为<strong>用户进程</strong> 和<strong>守护进程</strong></li>
<li>虚拟机必须确保用户线程执行完毕</li>
<li>虚拟机不用等待守护线程执行完毕</li>
<li>如，后台记录操作日志，监控内存，垃圾回收等待</li>
</ul>
<h2 id="同步方法和同步块"><a href="#同步方法和同步块" class="headerlink" title="同步方法和同步块"></a>同步方法和同步块</h2><p>同步方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">method</span><span class="params">(<span class="keyword">int</span> args)</span></span>&#123;&#125;	</span><br></pre></td></tr></table></figure>

<p>synchronized控制对“对象”访问，每个对象对应一把锁，每个synchronized都必须获得调用该方法的对象的锁才可以执行，否则会线程阻塞，方法一旦执行，就独占该锁，直到该方法返回才释放锁，后面被阻塞的线程才能获得这个锁，继续执行。</p>
<p><strong>缺点</strong>：若将一个大的方法申明为synchronized将会影响效率</p>
<p>同步块：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">synchronized</span> (obj)&#123;</span><br><span class="line">    <span class="comment">//obj是同步监视器，可以是任何对象，但是推荐使用共享资源作为同步监视器</span></span><br><span class="line">    <span class="comment">//同步方法中无需指定同步监视器，因为同步方法的同步监视器就是this，就是这个对象本身，或者是class</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>同步监视器的执行过程：</p>
<ol>
<li>第一个线程访问，锁定同步监视器，执行其中代码</li>
<li>第二个线程访问，发现同步监视器被锁定，无法访问</li>
<li>第一个线程访问完毕，解锁同步监视器</li>
<li>第二个线程访问，发现同步监视器没有锁，然后锁定并访问</li>
</ol>
<h2 id="死锁"><a href="#死锁" class="headerlink" title="死锁"></a>死锁</h2><p>产生死锁的必要条件：</p>
<ol>
<li>互斥：一个资源每次只能被一个进程使用</li>
<li>请求和保持：一个进程因请求资源而阻塞，对已获得的资源保持不放</li>
<li>不剥夺：进程已获得资源，在未使用完之前，不能强行剥夺</li>
<li>循环等待：若干进程之间形成一种头尾相接的循环等待资源关系</li>
</ol>
]]></content>
      <categories>
        <category>JAVA</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>线程</tag>
      </tags>
  </entry>
  <entry>
    <title>网络编程</title>
    <url>/2021/07/01/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="网络编程"><a href="#网络编程" class="headerlink" title="网络编程"></a>网络编程</h1><h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">查看所有端口</span></span><br><span class="line">netstat -ano</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">查找具体某个端口号</span></span><br><span class="line">netstat -ano|findstr &quot;1900&quot;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">查看指定端口的进程</span></span><br><span class="line">tasklist|findstr &quot;5200&quot;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>JAVA</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx</title>
    <url>/2021/07/24/Nginx/</url>
    <content><![CDATA[<h1 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h1><ul>
<li><p>反向代理</p>
</li>
<li><p>负载均衡</p>
</li>
<li><p>动静分离</p>
</li>
</ul>
<h2 id="Linux安装"><a href="#Linux安装" class="headerlink" title="Linux安装"></a>Linux安装</h2><ol>
<li><p><strong>安装gcc</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install gcc-c++</span><br></pre></td></tr></table></figure></li>
<li><p><strong>PCRE pcre-devel 安装</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y pcre pcre-devel</span><br></pre></td></tr></table></figure></li>
<li><p><strong>zlib安装</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y zlib zlib-devel</span><br></pre></td></tr></table></figure></li>
<li><p><strong>OpenSSL 安装</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y openssl openssl-devel</span><br></pre></td></tr></table></figure></li>
<li><p>手动下载.tar.gz安装包，地址：<a class="link"   href="https://nginx.org/en/download.html" >https://nginx.org/en/download.html<i class="fas fa-external-link-alt"></i></a></p>
</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">看本机是否已经装过nginx</span></span><br><span class="line">whereis nginx</span><br><span class="line"></span><br><span class="line">-- 安装包上传到linux的usr/local目录下</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">解压</span></span><br><span class="line">tar -zxvf nginx-1.18.0.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">切换到nginx目录,自动配置</span></span><br><span class="line">./configure</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">安装</span> </span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>

<p>注：./configure执行成功</p>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210726172108304.png" alt="configure报错"></p>
<h2 id="Nginx常用命令"><a href="#Nginx常用命令" class="headerlink" title="Nginx常用命令"></a>Nginx常用命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /usr/local/nginx/sbin/</span><br><span class="line"><span class="meta">#</span><span class="bash">启动</span></span><br><span class="line">./nginx</span><br><span class="line"><span class="meta">#</span><span class="bash">停止</span></span><br><span class="line">./nginx -s stop</span><br><span class="line"><span class="meta">#</span><span class="bash">安全退出</span></span><br><span class="line">./nginx -s quit</span><br><span class="line"><span class="meta">#</span><span class="bash">重新加载配置文件</span></span><br><span class="line">./nginx -s reload</span><br><span class="line"><span class="meta">#</span><span class="bash">查看nginx进程</span></span><br><span class="line">ps aux|grep nginx</span><br></pre></td></tr></table></figure>



<p>连接失败，检查端口</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 开启</span></span><br><span class="line">service firewalld start</span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启</span></span><br><span class="line">service firewalld restart</span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭</span></span><br><span class="line">service firewalld stop</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看防火墙规则</span></span><br><span class="line">firewall-cmd --list-all</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查询端口是否开放</span></span><br><span class="line">firewall-cmd --query-port=80/tcp</span><br><span class="line"><span class="meta">#</span><span class="bash"> 开放80端口</span></span><br><span class="line">firewall-cmd --permanent --add-port=80/tcp</span><br><span class="line"><span class="meta">#</span><span class="bash"> 移除端口</span></span><br><span class="line">firewall-cmd --permanent --remove-port=8080/tcp</span><br><span class="line"><span class="meta">#</span><span class="bash">重启防火墙(修改配置后要重启防火墙)</span></span><br><span class="line">firewall-cmd --reload</span><br><span class="line"><span class="meta">#</span><span class="bash"> 参数解释</span></span><br><span class="line">1、firwall-cmd：是Linux提供的操作firewall的一个工具；</span><br><span class="line">2、--permanent：表示设置为持久；</span><br><span class="line">3、--add-port：标识添加的端口；</span><br></pre></td></tr></table></figure>



<h2 id="nginx开机自启动"><a href="#nginx开机自启动" class="headerlink" title="nginx开机自启动"></a>nginx开机自启动</h2><ol>
<li>创建nginx.service文件，并编辑</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;nginx.service</span><br></pre></td></tr></table></figure>

<p>内容：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">服务的说明</span></span><br><span class="line">[Unit]</span><br><span class="line"><span class="meta">#</span><span class="bash">描述服务</span></span><br><span class="line">Description=nginx</span><br><span class="line"><span class="meta">#</span><span class="bash">描述服务类别</span></span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">服务运行参数的设置</span></span><br><span class="line">[Service]</span><br><span class="line"><span class="meta">#</span><span class="bash">后台运行的形式</span></span><br><span class="line">Type=forking</span><br><span class="line"><span class="meta">#</span><span class="bash">运行命令</span></span><br><span class="line">ExecStart=/usr/local/nginx/sbin/nginx</span><br><span class="line"><span class="meta">#</span><span class="bash">重启命令</span></span><br><span class="line">ExecReload=/usr/local/nginx/sbin/nginx -s reload</span><br><span class="line"><span class="meta">#</span><span class="bash">停止命令</span></span><br><span class="line">ExecStop=/usr/local/nginx/sbin/nginx -s quit</span><br><span class="line"><span class="meta">#</span><span class="bash">表示给服务分配独立的临时空间</span></span><br><span class="line">PrivateTmp=true</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">运行级别下服务安装的相关设置</span></span><br><span class="line">[Install]</span><br><span class="line"><span class="meta">#</span><span class="bash">多用户，即系统运行级别为3</span></span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>加入开机自启动</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl enable nginx</span><br></pre></td></tr></table></figure>

<p>辅助命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#取消开机自动</span><br><span class="line">systemctl disable nginx</span><br><span class="line"> </span><br><span class="line">#启动</span><br><span class="line">systemctl start nginx.service</span><br><span class="line"> </span><br><span class="line">#停止</span><br><span class="line">systemctl stop nginx.service</span><br><span class="line"></span><br><span class="line">#重新启动服务</span><br><span class="line">systemctl restart nginx.service　       </span><br><span class="line">#查看所有已启动的服务</span><br><span class="line">systemctl list-units --type&#x3D;service</span><br><span class="line"></span><br><span class="line">#查看服务当前状态</span><br><span class="line">systemctl status nginx.service          </span><br></pre></td></tr></table></figure>



<blockquote>
<p>参考文章：<a class="link"   href="https://www.cnblogs.com/jepson6669/p/9131217.html" >https://www.cnblogs.com/jepson6669/p/9131217.html<i class="fas fa-external-link-alt"></i></a></p>
</blockquote>
]]></content>
      <categories>
        <category>Nginx</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux指令</title>
    <url>/2021/08/25/Linux%E6%8C%87%E4%BB%A4/</url>
    <content><![CDATA[<h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><h2 id="文件管理指令"><a href="#文件管理指令" class="headerlink" title="文件管理指令"></a>文件管理指令</h2><h3 id="文件查看cat"><a href="#文件查看cat" class="headerlink" title="文件查看cat"></a>文件查看cat</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">查看曾经的命令操作痕迹</span></span><br><span class="line">cat ~/.bash_history</span><br></pre></td></tr></table></figure>

<h3 id="查找find"><a href="#查找find" class="headerlink" title="查找find"></a>查找find</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">查找所有被修改超过50天以及少于100天的文件</span></span><br><span class="line">find / -mtime +50 -mtime -100</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">查找24小时内被修改的JSP文件</span></span><br><span class="line">find / -mtime 0 -name &quot;*.jsp&quot;</span><br></pre></td></tr></table></figure>

<h3 id="创建文件touch"><a href="#创建文件touch" class="headerlink" title="创建文件touch"></a>创建文件touch</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">创建文件</span></span><br><span class="line">touch [文件名]  </span><br><span class="line"><span class="meta">#</span><span class="bash">多个文件创建</span></span><br><span class="line">touch [文件名1] [文件名2]....</span><br></pre></td></tr></table></figure>

<h3 id="移动mv"><a href="#移动mv" class="headerlink" title="移动mv"></a>移动mv</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">将文件 aaa 更名为 bbb</span></span><br><span class="line">mv aaa bbb </span><br></pre></td></tr></table></figure>

<h3 id="删除rm"><a href="#删除rm" class="headerlink" title="删除rm"></a>删除rm</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">删除file1文件</span></span><br><span class="line">rm -f file1 </span><br><span class="line"><span class="meta">#</span><span class="bash">删除dir1目录</span></span><br><span class="line">rmdir dir1</span><br><span class="line"><span class="meta">#</span><span class="bash">删除dir1目录和其内容</span></span><br><span class="line">rm -rf dir1</span><br></pre></td></tr></table></figure>

<h3 id="创建目录mkdir"><a href="#创建目录mkdir" class="headerlink" title="创建目录mkdir"></a>创建目录mkdir</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir 目录名</span><br><span class="line"><span class="meta">#</span><span class="bash">创建目录树</span></span><br><span class="line">mkdir -p /tmp/dir1/dir2</span><br></pre></td></tr></table></figure>

<h3 id="文件目录列表ls"><a href="#文件目录列表ls" class="headerlink" title="文件目录列表ls"></a>文件目录列表ls</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">查看隐藏文件</span></span><br><span class="line">ls -a</span><br><span class="line"><span class="meta">#</span><span class="bash">查看文件和目录的详情列表</span></span><br><span class="line">ls -l</span><br><span class="line"><span class="meta">#</span><span class="bash">将文件依建立时间之先后次序列出</span></span><br><span class="line">ls -t</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">查看/tmp下文件个数</span></span><br><span class="line">ls -a /tmp | wc -l</span><br><span class="line"><span class="meta">#</span><span class="bash">查看/tmp下文件个数 + 1(总用量)</span></span><br><span class="line">ls -al /tmp | wc -l</span><br><span class="line"><span class="meta">#</span><span class="bash">将目录列表存到fileList.txt中</span></span><br><span class="line">ls -a /tmp &gt;fileList.txt</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210803143618372.png" alt="image-20210803143618372"></p>
<ul>
<li>各列含义</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">drwxr-xr-x</span><br><span class="line">第一个字符代表文件类型</span><br><span class="line">“-”:普通文件</span><br><span class="line"></span><br><span class="line">“d”:目录，字母&quot;d&quot;，是dirtectory(目录)的缩写</span><br><span class="line"></span><br><span class="line">“l”:链接文件。类似于windows下的快捷方式</span><br><span class="line"></span><br><span class="line">“b”:块设备文件(block)，一般置于&#x2F;dev目录下，设备文件是普通文件和程序访问硬件设备的入口，是很特殊的文件。没有文件大小，只有一个主设备号和一个辅设备号。一次传输数据为一整块的被称为块设备，如硬盘、光盘等。最小数据传输单位为一个数据块(通常一个数据块的大小为512字节)</span><br><span class="line"></span><br><span class="line">“c”:字符设备文件(character)，一般置于&#x2F;dev目录下，一次传输一个字节的设备被称为字符设备，如键盘、字符终端等，传输数据的最小单位为一个字节。</span><br><span class="line"></span><br><span class="line">“p”:命令管道文件。与shell编程有关的文件。</span><br><span class="line"></span><br><span class="line">“s”:sock文件。与shell编程有关的文件。</span><br><span class="line"></span><br><span class="line">后面9个字母表示该文件或目录的权限位</span><br><span class="line">r表是读 (Read) 、w表示写 (Write) 、x表示执行 (eXecute)</span><br><span class="line">前三个表示文件拥有者的权限，中间三个表示文件所属组拥有的权限，最后三个表示其他用户拥有的权限</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">第二个字段：</span><br><span class="line">如果一个文件不是目录，此时这一字段表示这个文件所具有的硬链接数。</span><br><span class="line">如果是一个目录，则第2字段表示该目录所含子目录的个数。</span><br><span class="line">如果是一个空目录，这个目录的第二字段就是2，表示该目录下有两个子目录。</span><br><span class="line"></span><br><span class="line">第三个字段：</span><br><span class="line">文件（目录）拥有者</span><br><span class="line"></span><br><span class="line">第四个字段：</span><br><span class="line">文件（目录）拥有者所在的组</span><br><span class="line"></span><br><span class="line">第五个字段：</span><br><span class="line">文件所占用的空间(以字节为单位)</span><br><span class="line"></span><br><span class="line">第六个字段：</span><br><span class="line">文件（目录）最近访问（修改）时间</span><br><span class="line"></span><br><span class="line">第七个字段：</span><br><span class="line">文件名</span><br></pre></td></tr></table></figure>





<blockquote>
<p>参考链接：<a class="link"   href="https://blog.csdn.net/sjzs5590/article/details/8254527" >https://blog.csdn.net/sjzs5590/article/details/8254527<i class="fas fa-external-link-alt"></i></a></p>
</blockquote>
<h2 id="打包解压"><a href="#打包解压" class="headerlink" title="打包解压"></a>打包解压</h2><h3 id="unzip"><a href="#unzip" class="headerlink" title="unzip"></a>unzip</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">把文件解压到指定的目录下</span></span><br><span class="line">unzip -d /temp test.zip</span><br></pre></td></tr></table></figure>



<h2 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">查看所有进程</span></span><br><span class="line">ps -aux</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">查看nginx进程 排除grep进程</span></span><br><span class="line">ps -ef|grep nginx|grep -v grep</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">查看nginx进程最后一列 排除grep进程</span> </span><br><span class="line">ps -ef|grep nginx|grep -v grep| awk &#x27;&#123;print $NF&#125;&#x27;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">查看nginx进程第2列 排除grep进程</span> </span><br><span class="line">ps -ef|grep nginx|grep -v grep| awk &#x27;&#123;print $2&#125;&#x27;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">查看nginx进程第9列包含 <span class="string">&quot;master&quot;</span>，并打印最后一列 排除grep进程</span></span><br><span class="line">ps -ef|grep nginx|grep -v grep| awk &#x27;$9 ~ /master/ &#123;print $NF&#125;&#x27;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210730143136866.png" alt="image-20210730143136866"></p>
<ul>
<li>各列含义</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">用户名</span></span><br><span class="line">USER </span><br><span class="line"><span class="meta">#</span><span class="bash">进程ID</span></span><br><span class="line">PID</span><br><span class="line"><span class="meta">#</span><span class="bash">进程占用的CPU百分比</span></span><br><span class="line"><span class="meta">%</span><span class="bash">CPU</span></span><br><span class="line"><span class="meta">#</span><span class="bash">占用内存的百分比</span></span><br><span class="line"><span class="meta">%</span><span class="bash">MEM</span></span><br><span class="line"><span class="meta">#</span><span class="bash">该进程使用的虚拟內存量（KB）</span></span><br><span class="line">VSZ</span><br><span class="line"><span class="meta">#</span><span class="bash">该进程占用的固定內存量（KB）（驻留中页的数量）</span></span><br><span class="line">RSS</span><br><span class="line"><span class="meta">#</span><span class="bash">进程的状态</span></span><br><span class="line">STAT</span><br><span class="line"><span class="meta">#</span><span class="bash">该进程被触发启动时间</span></span><br><span class="line">START</span><br><span class="line"><span class="meta">#</span><span class="bash">该进程实际使用CPU运行的时间</span></span><br><span class="line">TIME</span><br></pre></td></tr></table></figure>

<ul>
<li>STAT状态位常见的状态字符</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:无法中断的休眠状态（通常 IO 的进程）；</span><br><span class="line">R:正在运行可中在队列中可过行的；</span><br><span class="line">S:处于休眠状态；</span><br><span class="line">T:停止或被追踪；</span><br><span class="line">X:死掉的进程 （基本很少见）；</span><br><span class="line">Z:僵尸进程；</span><br><span class="line">&lt;:优先级高的进程</span><br><span class="line">N:优先级较低的进程</span><br><span class="line">L:有些页被锁进内存；</span><br><span class="line">s:进程的领导者（在它之下有子进程）；</span><br><span class="line">l:多线程，克隆线程（使用 CLONE_THREAD, 类似 NPTL pthreads）；</span><br><span class="line">\+:位于后台的进程组</span><br></pre></td></tr></table></figure>



<h2 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h2><h3 id="crontab"><a href="#crontab" class="headerlink" title="crontab"></a>crontab</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#定时任务重启 默认是开启的 </span><br><span class="line">service crond restart</span><br></pre></td></tr></table></figure>



<h4 id="新增"><a href="#新增" class="headerlink" title="新增"></a>新增</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">增加定时任务，会打开一个任务文件，将需要添加的任务添加到任务文件中</span></span><br><span class="line">crontab -e</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">时间格式</span></span><br><span class="line">f1 f2 f3 f4 f5 program</span><br></pre></td></tr></table></figure>

<ul>
<li> f1 是表示分钟，f2 表示小时，f3 表示一个月份中的第几日，f4 表示月份，f5 表示一个星期中的第几天。program 表示要执行的程序。</li>
<li>当 f1 为 * 时表示每分钟都要执行 program，f2 为 * 时表示每小时都要执行程序，依次类推</li>
<li>当 f1 为 a-b 时表示从第 a 分钟到第 b 分钟这段时间内要执行，f2 为 a-b 时表示从第 a 到第 b 小时都要执行，依次类推</li>
<li>当 f1 为 */n 时表示每 n 分钟个时间间隔执行一次，f2 为 */n 表示每 n 小时个时间间隔执行一次，依次类推</li>
<li>当 f1 为 a, b, c,… 时表示第 a, b, c,… 分钟要执行，f2 为 a, b, c,… 时表示第 a, b, c…个小时要执行，依次类推</li>
</ul>
<p>示例：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">每月每天的午夜 0 点 20 分, 2 点 20 分, 4 点 20 分....执行 <span class="built_in">echo</span> <span class="string">&quot;haha&quot;</span></span></span><br><span class="line">20 0-23/2 * * * echo &quot;haha&quot;</span><br></pre></td></tr></table></figure>

<h4 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">crontab -l</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">日志</span></span><br><span class="line">tail -f /var/log/cron</span><br></pre></td></tr></table></figure>

<h4 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">从/var/spool/cron目录中删除某个用户的crontab文件，如果不指定用户，则默认删除当前用户的crontab文件</span></span><br><span class="line">crontab -r</span><br></pre></td></tr></table></figure>



<h2 id="查找命令"><a href="#查找命令" class="headerlink" title="查找命令"></a>查找命令</h2><h3 id="文件内查找egrep"><a href="#文件内查找egrep" class="headerlink" title="文件内查找egrep"></a>文件内查找egrep</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#去除 nginx.conf.default 文件中 # 和 空号 的内容</span><br><span class="line">egrep -v &quot;#|^$&quot; nginx.conf.default</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210826142246766.png" alt="image-20210826142246766"></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Elasticsearch</title>
    <url>/2021/08/08/Elasticsearch/</url>
    <content><![CDATA[<h1 id="Elasticsearch"><a href="#Elasticsearch" class="headerlink" title="Elasticsearch"></a>Elasticsearch</h1><h2 id="Linux环境安装JDK"><a href="#Linux环境安装JDK" class="headerlink" title="Linux环境安装JDK"></a>Linux环境安装JDK</h2><ol>
<li><a class="link"   href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html" >下载地址<i class="fas fa-external-link-alt"></i></a>，上传到/usr/local下，解压</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -zxvf jdk-8u301-linux-x64.tar.gz</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>配置环境变量</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure>

<p>注：-bash: vim: 未找到命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">安装</span></span><br><span class="line">yum -y install vim*</span><br></pre></td></tr></table></figure>

<p>按i进入编辑，在profile文件尾部添加如下内容</p>
<p>export JAVA_HOME=/usr/local/jdk1.8.0_301  #jdk安装目录</p>
<p>export JRE_HOME=${JAVA_HOME}/jre</p>
<p>export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib:$CLASSPATH</p>
<p>export JAVA_PATH=${JAVA_HOME}/bin:${JRE_HOME}/bin</p>
<p>export PATH=$PATH:${JAVA_PATH}</p>
<p>通过命令<strong>source /etc/profile</strong>让profile文件立即生效</p>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210727151210278.png" alt="image-20210727151210278"></p>
<hr>
<h2 id="Linux环境安装Elasticsearch"><a href="#Linux环境安装Elasticsearch" class="headerlink" title="Linux环境安装Elasticsearch"></a>Linux环境安装Elasticsearch</h2><p>前提环境：jdk8以上</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">上传/usr/<span class="built_in">local</span>/下，解压</span></span><br><span class="line">tar -zvxf elasticsearch-7.13.4-linux-x86_64.tar.gz</span><br><span class="line"><span class="meta">#</span><span class="bash">切换到bin</span></span><br><span class="line">cd /usr/local/elasticsearch-7.13.4/bin/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">elasticsearch不能以root权限来运行</span></span><br><span class="line">adduser wanglei</span><br><span class="line">passwd ******</span><br><span class="line"><span class="meta">#</span><span class="bash">授权</span></span><br><span class="line">chown -R wanglei /usr/local/elasticsearch-7.13.4</span><br></pre></td></tr></table></figure>



<p>修改/usr/local/elasticsearch-7.13.4/conf/elasticsearch.yml配置network.host</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#目的：以便使用本地虚拟机外的本地网络通过ip访问</span><br><span class="line">network.host: 0.0.0.0;</span><br><span class="line">#切换用户</span><br><span class="line">su wanglei</span><br><span class="line">#启动</span><br><span class="line">.&#x2F;elasticsearch</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210728153052546.png" alt="image-20210728153052546"></p>
<p>注：启动失败</p>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210727163751938.png" alt="image-20210727163751938"></p>
<ul>
<li>问题：bootstrap check failure [1] of [3]: max number of threads [3795] for user [wanglei] is too low, increase to at least [4096]</li>
</ul>
<p>解决方法：</p>
<p>修改配置文件/etc/security/limits.conf，增加配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">*     soft    nproc     4096</span><br><span class="line">*     hard    nproc     4096</span><br></pre></td></tr></table></figure>

<p>修改完成后查看是否生效</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ulimit -Hu</span><br><span class="line">ulimit -Su</span><br></pre></td></tr></table></figure>

<ul>
<li>问题：bootstrap check failure [2] of [3]: max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</li>
</ul>
<p>解决方法：</p>
<p>修改/etc/sysctl.conf文件，增加配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vm.max_map_count&#x3D;262144</span><br><span class="line">#执行生效</span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure>

<ul>
<li>问题：bootstrap check failure [3] of [3]: the default discovery settings are unsuitable for production use; at least one of [discovery.seed_hosts, discovery.seed_providers, cluster.initial_master_nodes] must be configured</li>
</ul>
<p>解决方法：</p>
<p>修改/usr/local/elasticsearch-7.13.4/conf/elasticsearch.yml，保留一个节点</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cluster.initial_master_nodes: [&quot;node-1&quot;]</span><br></pre></td></tr></table></figure>



<blockquote>
<p>参考文章：1. <a class="link"   href="https://www.cnblogs.com/zhi-leaf/p/8484337.html" >https://www.cnblogs.com/zhi-leaf/p/8484337.html<i class="fas fa-external-link-alt"></i></a></p>
<p>​                   2. <a class="link"   href="https://blog.csdn.net/happyzxs/article/details/89156068" >https://blog.csdn.net/happyzxs/article/details/89156068<i class="fas fa-external-link-alt"></i></a></p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">查看elastic</span></span><br><span class="line">ps -ef | grep elastic</span><br><span class="line"><span class="meta">#</span><span class="bash">后台运行</span></span><br><span class="line">./elasticsearch -d</span><br><span class="line"><span class="meta">#</span><span class="bash">关闭</span></span><br><span class="line">kill -9 pid</span><br></pre></td></tr></table></figure>

<h2 id="Linux环境安装Nodejs"><a href="#Linux环境安装Nodejs" class="headerlink" title="Linux环境安装Nodejs"></a>Linux环境安装Nodejs</h2><ol>
<li><a class="link"   href="https://nodejs.org/en/download/" >下载地址<i class="fas fa-external-link-alt"></i></a>，解压</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tar -xvf node-v14.17.3-linux-x64.tar.xz</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>检查文件目录是否完整：检查node，npm，npx是否存在</li>
</ol>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210727225955344.png" alt="image-20210727225955344"></p>
<ol start="3">
<li>创建软连接</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ln -s &#x2F;usr&#x2F;local&#x2F;node-v14.17.3-linux-x64&#x2F;bin&#x2F;npm &#x2F;usr&#x2F;local&#x2F;bin</span><br><span class="line"></span><br><span class="line">ln -s &#x2F;usr&#x2F;local&#x2F;node-v14.17.3-linux-x64&#x2F;bin&#x2F;node &#x2F;usr&#x2F;local&#x2F;bin</span><br></pre></td></tr></table></figure>

<p>注：/usr/local/node-v14.17.3-linux-x64/bin/npm|node此地址为安装的nodejs的文件的绝对地址下的npm或node所在位置，根据每个人的情况不同。</p>
<ol start="4">
<li>检查是否安装成功  node -v</li>
</ol>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210727230506312.png" alt="image-20210727230506312"></p>
<ol start="5">
<li>修改 /etc/profile</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export NODE_HOME=/usr/local/node-v14.17.3-linux-x64/</span><br><span class="line">export PATH=$PATH:$NODE_HOME/bin</span><br><span class="line">export NODE_PATH=$NODE_HOME/lib/node_modules</span><br></pre></td></tr></table></figure>

<ol start="6">
<li>通过命令<strong>source /etc/profile</strong>让profile文件立即生效</li>
</ol>
<blockquote>
<p>参考文章：<a class="link"   href="https://www.cnblogs.com/cirry/p/13599472.html" >https://www.cnblogs.com/cirry/p/13599472.html<i class="fas fa-external-link-alt"></i></a></p>
</blockquote>
<h2 id="Linux环境安装Elasticsearch-head"><a href="#Linux环境安装Elasticsearch-head" class="headerlink" title="Linux环境安装Elasticsearch-head"></a>Linux环境安装Elasticsearch-head</h2><p>前提环境：Nodejs</p>
<ol>
<li><a class="link"   href="https://github.com/mobz/elasticsearch-head" >下载地址<i class="fas fa-external-link-alt"></i></a>，上传，解压</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">unzip elasticsearch-head-master.zip</span><br><span class="line">#改名</span><br><span class="line">mv elasticsearch-head-master elasticsearch-head</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>进入安装</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;elasticsearch-head</span><br><span class="line"></span><br><span class="line">npm install -g grunt-cli</span><br><span class="line">npm install -g grunt</span><br><span class="line"></span><br><span class="line">#&#x2F;检测是否安装成功</span><br><span class="line">grunt -version</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>修改文件Gruntfile.js，添加hostname</li>
</ol>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210728153200645.png" alt="image-20210728153200645"></p>
<ol start="4">
<li>跨域配置：</li>
</ol>
<p>修改”/usr/local/elasticsearch-7.13.4/config/elasticsearch.yml”</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http.cors.enabled: true</span><br><span class="line">http.cors.allow-origin: &quot;*&quot;</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>启动</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#运行</span><br><span class="line">grunt server</span><br><span class="line">#后台运行</span><br><span class="line">nohup npm run start &amp;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210728153008077.png" alt="image-20210728153008077"></p>
<p>报错：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Local Npm module &quot;grunt-contrib-copy&quot; not found. Is it installed?</span><br><span class="line">Local Npm module &quot;grunt-contrib-concat&quot; not found. Is it installed?</span><br><span class="line">Local Npm module &quot;grunt-contrib-uglify&quot; not found. Is it installed?</span><br><span class="line">Local Npm module &quot;grunt-css&quot; not found. Is it installed?</span><br></pre></td></tr></table></figure>

<p>解决方法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure>



<blockquote>
<p>参考文章：<a class="link"   href="https://blog.csdn.net/u014231523/article/details/96589154" >https://blog.csdn.net/u014231523/article/details/96589154<i class="fas fa-external-link-alt"></i></a></p>
</blockquote>
<h2 id="Linux环境安装Kibana"><a href="#Linux环境安装Kibana" class="headerlink" title="Linux环境安装Kibana"></a>Linux环境安装Kibana</h2><p>前提环境：Nodejs</p>
<p>Kibana要和Elasticsearch版本一致</p>
<ol>
<li>解压</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tar -zvxf kibana-7.13.4-linux-x86_64.tar.gz</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>修改配置/usr/local/kibana-7.13.4-linux-x86_64/config/kibana.yml</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server.port: 5601 </span><br><span class="line"></span><br><span class="line">server.host: &quot;0.0.0.0&quot; </span><br><span class="line"></span><br><span class="line">elasticsearch.hosts: [&quot;http:&#x2F;&#x2F;localhost:9200&quot;] </span><br><span class="line"></span><br><span class="line">kibana.index: &quot;.kibana&quot;</span><br><span class="line"></span><br><span class="line">#汉化</span><br><span class="line">i18n.locale: &quot;zh-CN&quot;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>授权 </li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chown -R wanglei &#x2F;usr&#x2F;local&#x2F;kibana</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>启动</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">su wanglei</span><br><span class="line">cd &#x2F;usr&#x2F;local&#x2F;kibana-7.13.4-linux-x86_64&#x2F;bin&#x2F;</span><br><span class="line">.&#x2F;kibana </span><br><span class="line"></span><br><span class="line">#后台运行</span><br><span class="line">.&#x2F;kibana &amp;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>参考文章：<a class="link"   href="https://blog.csdn.net/qq_35551748/article/details/106960652" >https://blog.csdn.net/qq_35551748/article/details/106960652<i class="fas fa-external-link-alt"></i></a></p>
</blockquote>
<h2 id="ik分词器"><a href="#ik分词器" class="headerlink" title="ik分词器"></a>ik分词器</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><a class="link"   href="https://github.com/medcl/elasticsearch-analysis-ik/releases" >下载地址<i class="fas fa-external-link-alt"></i></a></p>
<ol>
<li>上传到/usr/local/elasticsearch-7.13.4/plugins/，解压</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">创建目录</span></span><br><span class="line">mkdir ik</span><br><span class="line"><span class="meta">#</span><span class="bash">解压</span></span><br><span class="line">unzip -d /usr/local/elasticsearch-7.13.4/plugins/ik elasticsearch-analysis-ik-7.13.4.zip</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>启动elasticsearch，检查是否安装成功</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./elasticsearch-plugin list</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210730160225090.png" alt="image-20210730160225090"></p>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><ul>
<li>kibana测试</li>
</ul>
<p>ik_smart最少切分：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;ik_smart&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;分词器&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210730161622254.png" alt="image-20210730161622254"></p>
<p>ik_max_word最细粒度划分：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;ik_max_word&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;分词器&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210730162228411.png" alt="image-20210730162228411"></p>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ol>
<li>创建自己的词库字典，加入自己词组</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vi wanglei.dic</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>切换到/usr/local/elasticsearch-7.13.4/plugins/ik/config</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vi IKAnalyzer.cfg.xml</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210730165330629.png" alt="image-20210730165330629"></p>
<ol start="3">
<li>重启ElasticSearch</li>
</ol>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210730165659220.png" alt="image-20210730165659220"></p>
<h2 id="Rest风格说明"><a href="#Rest风格说明" class="headerlink" title="Rest风格说明"></a>Rest风格说明</h2><table>
<thead>
<tr>
<th>method</th>
<th>URL</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>PUT</td>
<td>localhost:9200/索引名称/类型名称/文档ID</td>
<td>创建文档（指定文档ID）</td>
</tr>
<tr>
<td>POST</td>
<td>localhost:9200/索引名称/类型名称</td>
<td>创建文档（随机文档ID）</td>
</tr>
<tr>
<td>POST</td>
<td>localhost:9200/索引名称/类型名称/文档ID/_update</td>
<td>修改文档</td>
</tr>
<tr>
<td>DELETE</td>
<td>localhost:9200/索引名称/类型名称/文档ID</td>
<td>删除文档</td>
</tr>
<tr>
<td>GET</td>
<td>localhost:9200/索引名称/类型名称/文档ID</td>
<td>查询文档通过文档ID</td>
</tr>
<tr>
<td>POST</td>
<td>localhost:9200/索引名称/类型名称/_search</td>
<td>查询所有数据</td>
</tr>
</tbody></table>
<h3 id="创建一个索引"><a href="#创建一个索引" class="headerlink" title="创建一个索引"></a>创建一个索引</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PUT &#x2F;test1&#x2F;type&#x2F;1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;王磊&quot;,</span><br><span class="line">  &quot;age&quot;: 23</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210730171000866.png" alt="image-20210730171000866"></p>
<p>类型：</p>
<ul>
<li>字符串类型<ul>
<li>text</li>
<li>keyword</li>
</ul>
</li>
<li>数值类型<ul>
<li>long</li>
<li>integer</li>
<li>short</li>
<li>byte</li>
<li>double</li>
<li>float</li>
<li>half_float</li>
<li>scaled_float</li>
</ul>
</li>
<li>日期类型：date</li>
<li>布尔：boolean</li>
<li>二进制类型：binary</li>
</ul>
<p>……….</p>
<h3 id="指定类型"><a href="#指定类型" class="headerlink" title="指定类型"></a>指定类型</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PUT &#x2F;test2</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;properties&quot;: &#123;</span><br><span class="line">      &quot;name&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;text&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;age&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;long&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;birthday&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;date&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="获取索引基本信息"><a href="#获取索引基本信息" class="headerlink" title="获取索引基本信息"></a>获取索引基本信息</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET test2</span><br></pre></td></tr></table></figure>

<p>扩展：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;查看elasticsearch信息</span><br><span class="line">GET _cat</span><br></pre></td></tr></table></figure>

<h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">POST &#x2F;test3&#x2F;_doc&#x2F;1&#x2F;_update</span><br><span class="line">&#123;</span><br><span class="line">  &quot;doc&quot;:&#123;</span><br><span class="line">    &quot;name&quot;: &quot;修改王磊&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="删除索引"><a href="#删除索引" class="headerlink" title="删除索引"></a>删除索引</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DELETE test2</span><br></pre></td></tr></table></figure>



<h2 id="文档基本操作"><a href="#文档基本操作" class="headerlink" title="文档基本操作"></a>文档基本操作</h2><h3 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PUT &#x2F;wanglei&#x2F;user&#x2F;1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;王磊&quot;,</span><br><span class="line">  &quot;age&quot;: 23,</span><br><span class="line">  &quot;desc&quot;: &quot;一顿操作猛如虎，一看工资2500&quot;,</span><br><span class="line">  &quot;tags&quot;: [&quot;技术&quot;,&quot;直男&quot;,&quot;温暖&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET &#x2F;wanglei&#x2F;user&#x2F;1</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210730174250789.png" alt="image-20210730174250789"></p>
<h3 id="更新数据PUT"><a href="#更新数据PUT" class="headerlink" title="更新数据PUT"></a>更新数据PUT</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PUT &#x2F;wanglei&#x2F;user&#x2F;3</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;唐三&quot;,</span><br><span class="line">  &quot;age&quot;: 20,</span><br><span class="line">  &quot;desc&quot;: &quot;挂王&quot;,</span><br><span class="line">  &quot;tags&quot;: [&quot;跳舞&quot;,&quot;原神&quot;,&quot;玩&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210730174441578.png" alt="image-20210730174441578"></p>
<h3 id="更新数据POST"><a href="#更新数据POST" class="headerlink" title="更新数据POST"></a>更新数据POST</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">POST &#x2F;wanglei&#x2F;user&#x2F;2&#x2F;_update</span><br><span class="line">&#123;</span><br><span class="line">  &quot;doc&quot;:&#123;</span><br><span class="line">    &quot;name&quot;: &quot;小舞&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET &#x2F;wanglei&#x2F;user&#x2F;_search?q&#x3D;name:唐三</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210730180256110.png" alt="image-20210730180256110"></p>
<h3 id="复杂查询"><a href="#复杂查询" class="headerlink" title="复杂查询"></a>复杂查询</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET wanglei&#x2F;user&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;desc&quot;: &quot;一顿&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="1-结果过滤"><a href="#1-结果过滤" class="headerlink" title="1. 结果过滤"></a>1. 结果过滤</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET wanglei&#x2F;user&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;desc&quot;: &quot;一顿&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;_source&quot;: [&quot;name&quot;,&quot;desc&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210801145234442.png" alt="image-20210801145234442"></p>
<h4 id="2-排序"><a href="#2-排序" class="headerlink" title="2. 排序"></a>2. 排序</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET wanglei&#x2F;user&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;desc&quot;: &quot;一顿&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;_source&quot;: [&quot;name&quot;,&quot;age&quot;,&quot;desc&quot;],</span><br><span class="line">  &quot;sort&quot;: &#123;</span><br><span class="line">    &quot;age&quot;: &#123;</span><br><span class="line">      &quot;order&quot;: &quot;asc&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="3-分页查询"><a href="#3-分页查询" class="headerlink" title="3. 分页查询"></a>3. 分页查询</h4><p>from:从第几个数据开始</p>
<p>size:单页面数据量</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET wanglei&#x2F;user&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;desc&quot;: &quot;一顿&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;_source&quot;: [&quot;name&quot;,&quot;age&quot;,&quot;desc&quot;],</span><br><span class="line">  &quot;sort&quot;: &#123;</span><br><span class="line">    &quot;age&quot;: &#123;</span><br><span class="line">      </span><br><span class="line">      &quot;order&quot;: &quot;asc&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;from&quot;: 0,</span><br><span class="line">  &quot;size&quot;: 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="4-多条件查询"><a href="#4-多条件查询" class="headerlink" title="4. 多条件查询"></a>4. 多条件查询</h4><ul>
<li>must—&gt;and</li>
</ul>
<p>查询描述为“一顿”并且年龄23的数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET wanglei&#x2F;user&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;must&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;match&quot;: &#123;</span><br><span class="line">            &quot;desc&quot;: &quot;一顿&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;match&quot;: &#123;</span><br><span class="line">            &quot;age&quot;: &quot;23&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>should—&gt;or</li>
</ul>
<p>查询描述为“一顿”或者年龄23的数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET wanglei&#x2F;user&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;should&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;match&quot;: &#123;</span><br><span class="line">            &quot;desc&quot;: &quot;一顿&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;match&quot;: &#123;</span><br><span class="line">            &quot;age&quot;: &quot;23&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>must_not相当于不等于</li>
</ul>
<p>查询描述不为“一顿”的数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET wanglei&#x2F;user&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;must_not&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;match&quot;: &#123;</span><br><span class="line">            &quot;desc&quot;: &quot;一顿&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>过滤器</li>
</ul>
<p>查询描述为“一顿”的数据并且进行过滤，过滤条件是年龄大于等于23</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET wanglei&#x2F;user&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;must&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;match&quot;: &#123;</span><br><span class="line">            &quot;desc&quot;: &quot;一顿&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      &quot;filter&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;range&quot;: &#123;</span><br><span class="line">            &quot;age&quot;: &#123;</span><br><span class="line">              &quot;gte&quot;: 23</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>多条件可以使用空格隔开</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET wanglei&#x2F;user&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;tags&quot;: &quot;男 玩&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="5-精确查询"><a href="#5-精确查询" class="headerlink" title="5. 精确查询"></a>5. 精确查询</h4><p>term遇到keyword类型的字段，不会进行分词解析</p>
<p>keyword类型不会被分词器解析</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PUT testdb</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;properties&quot;: &#123;</span><br><span class="line">      &quot;name&quot;:&#123;</span><br><span class="line">        &quot;type&quot;: &quot;text&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;desc&quot;:&#123;</span><br><span class="line">        &quot;type&quot;: &quot;keyword&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">PUT testdb&#x2F;_doc&#x2F;1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;王磊es&quot;,</span><br><span class="line">  &quot;desc&quot;: &quot;王磊desc&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PUT testdb&#x2F;_doc&#x2F;2</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;王磊es2&quot;,</span><br><span class="line">  &quot;desc&quot;: &quot;王磊desc2&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;keyword&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;王磊es&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;standard&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;王磊es&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET testdb&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;term&quot;: &#123;</span><br><span class="line">      &quot;name&quot;: &quot;王&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET testdb&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;term&quot;: &#123;</span><br><span class="line">      &quot;desc&quot;: &quot;王磊desc&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="6-精确查询多个值"><a href="#6-精确查询多个值" class="headerlink" title="6.  精确查询多个值"></a>6.  精确查询多个值</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET testdb&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;should&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;term&quot;: &#123;</span><br><span class="line">            &quot;desc&quot;: &quot;王磊desc&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;term&quot;: &#123;</span><br><span class="line">            &quot;desc&quot;: &quot;王磊desc2&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="7-高亮查询"><a href="#7-高亮查询" class="headerlink" title="7. 高亮查询"></a>7. 高亮查询</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET wanglei&#x2F;user&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;desc&quot;: &quot;一顿&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;highlight&quot;: &#123;</span><br><span class="line">    &quot;fields&quot;: &#123;</span><br><span class="line">      &quot;desc&quot;: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210801171400994.png" alt="image-20210801171400994"></p>
<ul>
<li>自定义高亮</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET wanglei&#x2F;user&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;desc&quot;: &quot;一顿&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;highlight&quot;: &#123;</span><br><span class="line">    &quot;pre_tags&quot;: &quot;&lt;p style&#x3D;&#39;class&#x3D;&#39;key&#39; color: red&#39;&gt;&quot;, </span><br><span class="line">    &quot;post_tags&quot;: &quot;&lt;&#x2F;p&gt;&quot;, </span><br><span class="line">    &quot;fields&quot;: &#123;</span><br><span class="line">      &quot;desc&quot;: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210801171600828.png" alt="image-20210801171600828"></p>
<h2 id="Spring-Boot集成ES"><a href="#Spring-Boot集成ES" class="headerlink" title="Spring Boot集成ES"></a>Spring Boot集成ES</h2><p><a class="link"   href="https://gitee.com/carrywl/elastic-search-api" >gitee地址<i class="fas fa-external-link-alt"></i></a></p>
<p>推荐方式：自动整合</p>
<ol>
<li>jar包，版本要和elasticsearch版本一致</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">	&lt;groupId&gt;org.elasticsearch.client&lt;&#x2F;groupId&gt;</span><br><span class="line">	&lt;artifactId&gt;elasticsearch-rest-high-level-client&lt;&#x2F;artifactId&gt;</span><br><span class="line">	&lt;version&gt;7.13.4&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">	&lt;groupId&gt;org.elasticsearch&lt;&#x2F;groupId&gt;</span><br><span class="line">	&lt;artifactId&gt;elasticsearch&lt;&#x2F;artifactId&gt;</span><br><span class="line">	&lt;version&gt;7.13.4&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">	&lt;groupId&gt;org.elasticsearch.client&lt;&#x2F;groupId&gt;</span><br><span class="line">	&lt;artifactId&gt;elasticsearch-rest-client&lt;&#x2F;artifactId&gt;</span><br><span class="line">	&lt;version&gt;7.13.4&lt;&#x2F;version&gt;</span><br><span class="line">	&lt;exclusions&gt;</span><br><span class="line">		&lt;exclusion&gt;</span><br><span class="line">			&lt;groupId&gt;commons-logging&lt;&#x2F;groupId&gt;</span><br><span class="line">			&lt;artifactId&gt;commons-logging&lt;&#x2F;artifactId&gt;</span><br><span class="line">		&lt;&#x2F;exclusion&gt;</span><br><span class="line">	&lt;&#x2F;exclusions&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>配置application.properties</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#springboot整合es</span><br><span class="line">spring.elasticsearch.rest.uris[0]&#x3D;http:&#x2F;&#x2F;192.168.84.138:9200</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>测试</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestElasticsearchAutoConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RestHighLevelClient restHighLevelClient;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;restHighLevelClient = &quot;</span> + restHighLevelClient);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><p>爬取资源tika</p>
<h2 id="api"><a href="#api" class="headerlink" title="api"></a>api</h2><h3 id="Not-In"><a href="#Not-In" class="headerlink" title="Not In"></a>Not In</h3><p>查询不在这个范围的数据</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">精确查询<span class="built_in">command</span>不分词不等于[<span class="string">&quot;vim /etc/profile&quot;</span>,<span class="string">&quot;java -version&quot;</span>,<span class="string">&quot;cp file1 file2&quot;</span>,<span class="string">&quot;firewall-cmd --permanent --add-port=9200/tcp&quot;</span>,<span class="string">&quot;root:x:0:0:root:/root:/bin/bash&quot;</span>]</span></span><br><span class="line"></span><br><span class="line">GET test/type/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;must_not&quot;:&#123;</span><br><span class="line">        &quot;terms&quot;:&#123;</span><br><span class="line">          &quot;command.keyword&quot;: </span><br><span class="line">            [&quot;vim /etc/profile&quot;,&quot;java -version&quot;,&quot;cp file1 file2&quot;,&quot;firewall-cmd --permanent --add-port=9200/tcp&quot;,&quot;root:x:0:0:root:/root:/bin/bash&quot;]</span><br><span class="line">        </span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;  </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/20210808020717.png" alt="列表"></p>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/20210808020749.png" alt="查询结果"></p>
]]></content>
      <categories>
        <category>Elasticsearch</category>
      </categories>
      <tags>
        <tag>Elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title>JAVA-NIO</title>
    <url>/2021/08/03/JAVA-NIO/</url>
    <content><![CDATA[<h1 id="JAVA-NIO"><a href="#JAVA-NIO" class="headerlink" title="JAVA-NIO"></a>JAVA-NIO</h1><p><a class="link"   href="https://gitee.com/carrywl/java-basic/tree/master/src/main/java/com/wl/nio" >代码仓库<i class="fas fa-external-link-alt"></i></a></p>
<h2 id="IO和NIO区别："><a href="#IO和NIO区别：" class="headerlink" title="IO和NIO区别："></a>IO和NIO区别：</h2><p>第一点：</p>
<ul>
<li>IO面向流：单向</li>
<li>NIO面向缓冲区：双向</li>
</ul>
<p>第二点：</p>
<ul>
<li>IO是阻塞IO</li>
<li>NIO是非阻塞IO</li>
</ul>
<p>第三点：</p>
<ul>
<li>NIO有选择器</li>
</ul>
<p>NIO的通道负责传输，缓冲区负责存储</p>
<h2 id="缓冲区"><a href="#缓冲区" class="headerlink" title="缓冲区"></a>缓冲区</h2><p>一：缓冲区就是数组，用于存储不同类型的数据。</p>
<p>根据类型不同（boolean除外），提供相应类型的缓冲区</p>
<ul>
<li>BytebBuffer</li>
<li>CharBuffer</li>
<li>ShortBuffer</li>
<li>IntBuffer</li>
<li>LongBuffer</li>
<li>FloatBuffer</li>
<li>DoubleBuffer</li>
</ul>
<p>一般都通过allocate()获取缓冲区</p>
<p>二：缓冲区存取数据的两个核心方法：</p>
<ul>
<li><p>push:存入数据到缓冲区</p>
</li>
<li><p>get:获取的缓冲区的数据</p>
</li>
</ul>
<p>三：缓冲区的四个核心属性：</p>
<ul>
<li>capactity:容量，表示缓冲区中最大存储数据的容量，一旦声明就不能改变。</li>
<li>limit:界限，表示缓冲区可以操作数据的大小。（limit后数据不能进行读写）</li>
<li>position:位置，表示缓冲区中正在操作数据的位置。</li>
<li>mark:标记，表示记录当前postion位置，可以通过reset()恢复到mark位置</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0&lt;&#x3D;mark&lt;&#x3D;position&lt;&#x3D;limit&lt;&#x3D;capacity</span><br></pre></td></tr></table></figure>

<h3 id="直接缓冲区和非直接缓冲区"><a href="#直接缓冲区和非直接缓冲区" class="headerlink" title="直接缓冲区和非直接缓冲区"></a>直接缓冲区和非直接缓冲区</h3><p>非直接缓冲区：通过allocate()分配的缓冲区，将建立在JVM的内存中</p>
<p>直接缓冲区：通过allocateDirect()分配直接缓冲区，将建立在物理内存中，可以提高效率，但是消耗资源，有时候不稳定</p>
<h2 id="通道"><a href="#通道" class="headerlink" title="通道"></a>通道</h2><p>用于源节点与目标节点的连接</p>
<p>在Java NIO中负责缓冲区数据的传输</p>
<p>一：通道的主要实现类</p>
<p>java.nio.channels.Channel接口：</p>
<ul>
<li>FileChannel    本地</li>
<li>SocketChannel    TCP</li>
<li>ServerSocketChannel     TCP</li>
<li>DatagramChannel    UDP</li>
</ul>
<p>二：获取通道</p>
<ol>
<li>Java针对支持通道的类提供了getChannel</li>
</ol>
<ul>
<li><p>本地IO:</p>
<ul>
<li><p>FileInputStream/FileOutStream</p>
</li>
<li><p>RandomAccessFile</p>
</li>
</ul>
</li>
<li><p>网络IO:</p>
<ul>
<li>Socket</li>
<li>ServerSocket</li>
<li>DatagramSocket</li>
</ul>
</li>
</ul>
<ol start="2">
<li>在jdk7中的NIO.2针对各个通道提供了静态方法open()</li>
<li>在jdk7中的NIO.2的Files工具类的newByteChannel()</li>
</ol>
<p>三：通道之间的数据传输</p>
<ul>
<li>transferFrom</li>
<li>transferTo</li>
</ul>
<h2 id="分散与聚集"><a href="#分散与聚集" class="headerlink" title="分散与聚集"></a>分散与聚集</h2><p>分散（Scatter）读取：将通道中的数据分散到多个缓冲区中</p>
<p>聚集（Gather）写入：将多个缓冲区的数据聚集到通道中</p>
<h2 id="字符集Charset"><a href="#字符集Charset" class="headerlink" title="字符集Charset"></a>字符集Charset</h2><p>编码：字符串 -&gt; 字节数组</p>
<p>解码：字节数组 -&gt; 字符串 </p>
<h2 id="网络通信"><a href="#网络通信" class="headerlink" title="网络通信"></a>网络通信</h2><p>三个核心：</p>
<ul>
<li><p>通道(Channel)：负责连接</p>
<ul>
<li><p>java.nio.channels.Channel接口：</p>
<ul>
<li><p>SelectableChannel</p>
<ul>
<li>SocketChannel</li>
<li>ServerSocketChannel</li>
<li>DatagramChannel</li>
</ul>
<ul>
<li>Pipe.SinkChannel</li>
<li>Pipe.SourceChannel</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>缓冲区(Buffer)：负责数据的存取</p>
</li>
<li><p>选择器(Selector)：是SelectableChannel的多路复用器。用于监控SelectableChannel的IO状况</p>
</li>
</ul>
<h2 id="获取路径下的文件列表"><a href="#获取路径下的文件列表" class="headerlink" title="获取路径下的文件列表"></a>获取路径下的文件列表</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getFileByPath</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">	String folder = <span class="string">&quot;F:\\ideaWorkSpace&quot;</span>;</span><br><span class="line">    Path path = Paths.get(folder);</span><br><span class="line">    SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line">    DirectoryStream&lt;Path&gt; dirStream = Files.newDirectoryStream(path);</span><br><span class="line">    <span class="keyword">for</span> (Path processPath : dirStream) &#123;</span><br><span class="line">        File file = processPath.toFile();</span><br><span class="line">        System.out.println(<span class="string">&quot;文件最后修改时间:&quot;</span> + sdf.format(file.lastModified()));</span><br><span class="line">        System.out.println(<span class="string">&quot;文件名:&quot;</span> + file.getName());</span><br><span class="line">     &#125;</span><br><span class="line">     dirStream.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210803220727621.png" alt="image-20210803220727621"></p>
]]></content>
      <categories>
        <category>JAVA</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>NIO</tag>
      </tags>
  </entry>
  <entry>
    <title>IDEA</title>
    <url>/2021/07/30/IDEA/</url>
    <content><![CDATA[<h1 id="IDEA"><a href="#IDEA" class="headerlink" title="IDEA"></a>IDEA</h1><h2 id="问题1：在单元测试不能从控制台输入"><a href="#问题1：在单元测试不能从控制台输入" class="headerlink" title="问题1：在单元测试不能从控制台输入"></a>问题1：在单元测试不能从控制台输入</h2><p>解决：</p>
<ol>
<li>打开idea64.exe.vmoptions</li>
</ol>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210730103334931.png" alt="image-20210730103334931"></p>
<ol start="2">
<li>加上**-Deditable.java.test.console=true**</li>
</ol>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210730103432943.png" alt="image-20210730103432943"></p>
<p>3.重启idea，成功</p>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210730103509829.png" alt="image-20210730103509829"></p>
]]></content>
      <categories>
        <category>IDEA</category>
      </categories>
      <tags>
        <tag>IDEA</tag>
      </tags>
  </entry>
  <entry>
    <title>Maven</title>
    <url>/2021/08/25/Maven/</url>
    <content><![CDATA[<h1 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h1><h2 id="Linux环境安装"><a href="#Linux环境安装" class="headerlink" title="Linux环境安装"></a>Linux环境安装</h2><p><a class="link"   href="http://maven.apache.org/download.cgi#" >下载地址<i class="fas fa-external-link-alt"></i></a></p>
<ol>
<li>上传/usr./local，解压</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tar -zvxf apache-maven-3.8.1-bin.tar.gz</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>配置环境变量</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vi &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export MAVEN_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;apache-maven-3.8.1</span><br><span class="line">export PATH&#x3D;$MAVEN_HOME&#x2F;bin:$PATH</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>生效</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>查看版本</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mvn -v</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210804095901423.png" alt="image-20210804095901423"></p>
<h2 id="Linux测试Maven项目"><a href="#Linux测试Maven项目" class="headerlink" title="Linux测试Maven项目"></a>Linux测试Maven项目</h2><ol>
<li><p>创建一个SpringBoot项目</p>
</li>
<li><p>建立一个测试类**Test.java，</p>
</li>
<li><p>里面的具体测试方法命名为 void **Test()</p>
</li>
</ol>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/20210807232653.png"></p>
<ol start="4">
<li>将整个项目文件传到Linux，在<strong>项目目录</strong>执行测试命令  </li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#运行 LinuxTest类的 passwdTest方法</span><br><span class="line">mvn test -Dtest&#x3D;LinuxTest#passwdTest</span><br></pre></td></tr></table></figure>



<p>注：</p>
<ol>
<li>测试报告默认生成 target/surefire-reports 目录下，生成 txt， 和 xml 格式的。</li>
</ol>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/20210807233056.png"></p>
<blockquote>
<p>参考🔗：<a class="link"   href="https://blog.csdn.net/yonggang7/article/details/79780487" >https://blog.csdn.net/yonggang7/article/details/79780487<i class="fas fa-external-link-alt"></i></a></p>
</blockquote>
]]></content>
      <categories>
        <category>Maven</category>
      </categories>
      <tags>
        <tag>Maven</tag>
      </tags>
  </entry>
  <entry>
    <title>Optional in Java</title>
    <url>/2021/08/10/Optional-in-Java/</url>
    <content><![CDATA[<h1 id="Optional-in-Java"><a href="#Optional-in-Java" class="headerlink" title="Optional in Java"></a>Optional in Java</h1><p>这个类型的对象可能包含值，也可能为空。</p>
<p>of()</p>
<p>如果你把 null 值作为参数传递进去，of() 方法会抛出 NullPointerException</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 返回具有指定当前非空值的 &#123;<span class="doctag">@code</span> Optional&#125;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &lt;T&gt; the class of the value</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> value the value to be present, which must be non-null</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> an &#123;<span class="doctag">@code</span> Optional&#125; with the value present</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> NullPointerException if value is null</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">Optional&lt;T&gt; <span class="title">of</span><span class="params">(T value)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Optional&lt;&gt;(value);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>ofNullable()</p>
<p>如果对象即可能是 null 也可能是非 null，你就应该使用 ofNullable()</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns an &#123;<span class="doctag">@code</span> Optional&#125; describing the specified value, if non-null,</span></span><br><span class="line"><span class="comment"> * otherwise returns an empty &#123;<span class="doctag">@code</span> Optional&#125;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &lt;T&gt; the class of the value</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> value the possibly-null value to describe</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> an &#123;<span class="doctag">@code</span> Optional&#125; with a present value if the specified value</span></span><br><span class="line"><span class="comment"> * is non-null, otherwise an empty &#123;<span class="doctag">@code</span> Optional&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">Optional&lt;T&gt; <span class="title">ofNullable</span><span class="params">(T value)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> value == <span class="keyword">null</span> ? empty() : of(value);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>get()</p>
<p>可以使用get从 Optional 实例中取回实际值对象</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">whenCreateOfNullableOptional_thenOk</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    String name = <span class="string">&quot;John&quot;</span>;</span><br><span class="line">    Optional&lt;String&gt; opt = Optional.ofNullable(name);</span><br><span class="line">    System.out.println(<span class="string">&quot;name = &quot;</span> + name);</span><br><span class="line">    assertEquals(<span class="string">&quot;John&quot;</span>, opt.get());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这个方法会在值为 null 的时候抛出异常。要避免异常，要使用<strong>isPresent</strong>验证是否有值</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">whenCheckIfPresent_thenOk</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User(<span class="string">&quot;wanglei&quot;</span>, <span class="number">23</span>);</span><br><span class="line">    Optional&lt;User&gt; opt = Optional.ofNullable(user);</span><br><span class="line">    assertTrue(opt.isPresent());</span><br><span class="line">    assertEquals(user.getAge(), opt.get().getAge());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>还可以使用ifPresent</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">opt.ifPresent( u -&gt; assertEquals(user.getAge(), u.getAge()));</span><br></pre></td></tr></table></figure>



<h2 id="返回默认值"><a href="#返回默认值" class="headerlink" title="返回默认值"></a><strong>返回默认值</strong></h2><p>orElse()</p>
<p>如果有值则返回该值，如果对象的初始值不是 null，那么默认值会被忽略</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">whenEmptyValue_thenReturnDefault</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    User user = <span class="keyword">null</span>;</span><br><span class="line">    User user2 = <span class="keyword">new</span> User(<span class="string">&quot;wanglei&quot;</span>, <span class="number">23</span>);</span><br><span class="line">    User result = Optional.ofNullable(user).orElse(user2);</span><br><span class="line">    assertEquals(user2.getAge(), result.getAge());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里 user 对象是空的，所以返回了作为默认值的 user2。</p>
<p>orElseGet()</p>
<p>如果有值则返回该值，否则调用 <code>other</code>并返回该调用的结果。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">User result &#x3D; Optional.ofNullable(user).orElseGet( () -&gt; user2);</span><br></pre></td></tr></table></figure>

<p>orElseGet()和orElse()不同：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">givenPresentValue_whenCompare_thenOk</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User(<span class="string">&quot;wanglei&quot;</span>, <span class="number">23</span>);</span><br><span class="line">    logger.info(<span class="string">&quot;Using orElse&quot;</span>);</span><br><span class="line">    User result = Optional.ofNullable(user).orElse(createNewUser());</span><br><span class="line">    logger.info(<span class="string">&quot;Using orElseGet&quot;</span>);</span><br><span class="line">    User result2 = Optional.ofNullable(user).orElseGet(() -&gt; createNewUser());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> User <span class="title">createNewUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    logger.debug(<span class="string">&quot;Creating New User&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> User(<span class="string">&quot;duxiaozhu&quot;</span>, <span class="number">23</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>两个 Optional  对象都包含非空值，两个方法都会返回对应的非空值。不过，orElse() 方法仍然创建了 User对象。与之相反，orElseGet() 方法不创建 User对象。</p>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210810163511222.png" alt="image-20210810163511222"></p>
<h2 id="返回异常"><a href="#返回异常" class="headerlink" title="返回异常"></a>返回异常</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test(expected = IllegalArgumentException.class)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">whenThrowException_thenOk</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    User user = <span class="keyword">null</span>;</span><br><span class="line">    User result = Optional.ofNullable(user)</span><br><span class="line">            .orElseThrow(() -&gt; <span class="keyword">new</span> IllegalArgumentException());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果 user 值为 null，会抛出 IllegalArgumentException</p>
<blockquote>
<p>参考链接：<a class="link"   href="https://www.oschina.net/translate/understanding-accepting-and-leveraging-optional-in" >https://www.oschina.net/translate/understanding-accepting-and-leveraging-optional-in<i class="fas fa-external-link-alt"></i></a></p>
</blockquote>
]]></content>
      <categories>
        <category>JAVA</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>空指针异常</tag>
      </tags>
  </entry>
  <entry>
    <title>谷粒商城</title>
    <url>/2021/08/12/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/</url>
    <content><![CDATA[<h1 id="谷粒商城"><a href="#谷粒商城" class="headerlink" title="谷粒商城"></a>谷粒商城</h1><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ol>
<li><a class="link"   href="https://www.virtualbox.org/" >virtual box<i class="fas fa-external-link-alt"></i></a></li>
<li><a class="link"   href="https://www.vagrantup.com/" >vagrant<i class="fas fa-external-link-alt"></i></a></li>
</ol>
<p>虚拟镜像地址：<a class="link"   href="https://app.vagrantup.com/boxes/search" >https://app.vagrantup.com/boxes/search<i class="fas fa-external-link-alt"></i></a></p>
<ol start="3">
<li>选择一个路径，cmd初始化centos/7，初始化成功后你会在路径下看到一个Vagrantfile文件</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vagrant init centos/7</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>准备环境</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vagrant up</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>连接虚拟机</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vargrant ssh</span><br></pre></td></tr></table></figure>

<p>vargrant 是ssh username</p>
<ol start="6">
<li><p>网络配置，找到Vagrantfile文件，解开注释</p>
<p>ip选定：</p>
<p>cmd  -&gt; ipconfig -&gt;以太网适配器Virtual Box…</p>
<p>例如：ip为192.168.58.1，那么可以设置虚拟机的IP为192.168.58.10</p>
</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">config.vm.network &quot;private_network&quot;,ip: &quot;192.168.58.10&quot;</span><br></pre></td></tr></table></figure>

<ol start="7">
<li>重启虚拟机</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vagrant reload</span><br></pre></td></tr></table></figure>

<h2 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h2><h3 id="Git环境"><a href="#Git环境" class="headerlink" title="Git环境"></a>Git环境</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#配置用户名</span><br><span class="line">git config --global user.name &quot;wanglei&quot;</span><br><span class="line">#配置邮箱</span><br><span class="line">git config --global user.email &quot;2239264903@qq.com&quot;</span><br><span class="line">#为你的git注册邮箱生成密钥</span><br><span class="line">ssh-keygen -t rsa -C &quot;2239264903@qq.com&quot;</span><br><span class="line">#查看密钥</span><br><span class="line">cat ~&#x2F;.ssh&#x2F;id_rsa.pub</span><br></pre></td></tr></table></figure>

<ol>
<li>在gitee中配置ssh</li>
</ol>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/1598493744(1).jpg" alt="1598493744(1)"></p>
<ol start="2">
<li>测试git配置是否成功</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh -T git@gitee.com</span><br></pre></td></tr></table></figure>

<h2 id="renren-fast"><a href="#renren-fast" class="headerlink" title="renren-fast"></a>renren-fast</h2><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><h4 id="1-POM报错"><a href="#1-POM报错" class="headerlink" title="1. POM报错"></a>1. POM报错</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#39;parent.relativePath&#39; of POM io.renren:renren-fast:3.0.0 (F:\javaStudy\gulimall\renren-fast\pom.xml) points at com.atguigu.gulimall:gulimall instead of org.springframework.boot:spring-boot-starter-parent, please verify your project structure</span><br></pre></td></tr></table></figure>

<p>解决方法：</p>
<p>加上<relativePath></relativePath></p>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210813164932560.png" alt="image-20210813164932560"></p>
<h4 id="2-properties中文乱码"><a href="#2-properties中文乱码" class="headerlink" title="2. **.properties中文乱码"></a>2. **.properties中文乱码</h4><p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210823154029650.png" alt="image-20210823154029650"></p>
<h2 id="renren-fast-vue"><a href="#renren-fast-vue" class="headerlink" title="renren-fast-vue"></a>renren-fast-vue</h2><h3 id="问题-1"><a href="#问题-1" class="headerlink" title="问题"></a>问题</h3><h4 id="1-npm-install-安装失败"><a href="#1-npm-install-安装失败" class="headerlink" title="1. npm install 安装失败"></a>1. npm install 安装失败</h4><p>前端项目使用npm install报错的问题，首先确保安装了<strong>python3.0</strong>以上版本，并配置全局变量</p>
<p>其次大部分错误是报node-sass4.9.0安装失败</p>
<p>解决方法：</p>
<ol>
<li>先将之前安装失败的缓存清除</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm uninstall node-sass</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>执行</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#执行成功看看有没有报错</span><br><span class="line">npm i node-sass --sass_binary_site&#x3D;https:&#x2F;&#x2F;npm.taobao.org&#x2F;mirrors&#x2F;node-sass&#x2F;</span><br><span class="line">#重新安装</span><br><span class="line">npm install</span><br><span class="line">#没报错就是安装成功，然后使用</span><br><span class="line">npm run dev </span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>JAVA</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>分布式</tag>
      </tags>
  </entry>
  <entry>
    <title>软件设计师</title>
    <url>/2021/10/12/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/</url>
    <content><![CDATA[<h1 id="软件设计师"><a href="#软件设计师" class="headerlink" title="软件设计师"></a>软件设计师</h1><h2 id="1-计算机组成与体系结构"><a href="#1-计算机组成与体系结构" class="headerlink" title="1.计算机组成与体系结构"></a>1.计算机组成与体系结构</h2><h3 id="1-1数据表示"><a href="#1-1数据表示" class="headerlink" title="1.1数据表示"></a>1.1数据表示</h3><h4 id="1-1-1进制转换"><a href="#1-1-1进制转换" class="headerlink" title="1.1.1进制转换"></a>1.1.1进制转换</h4><p>二级制转十进制：<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.186ex" xmlns="http://www.w3.org/2000/svg" width="36.388ex" height="2.203ex" role="img" focusable="false" viewBox="0 -891.7 16083.6 973.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(1000,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1500,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(2000,0)"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(2500,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(2778,0)"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(3278,0)"></path></g><g data-mml-node="mo" transform="translate(4055.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(5111.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(5833.8,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="msup" transform="translate(6834,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mn" transform="translate(533,413) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g><g data-mml-node="mo" transform="translate(7992.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(8993,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(9715.2,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="msup" transform="translate(10715.4,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mn" transform="translate(533,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(11874.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(12874.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(13596.7,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="msup" transform="translate(14596.9,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(778,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></g></svg></mjx-container><br>十进制转二进制:</p>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20211012220404950.png" alt="image-20211012220404950"></p>
<p>二进制转八进制:（三个一组）</p>
<p>10001110—&gt;216</p>
<p>二进制转十六进制:（四个一组）</p>
<p>10001110—&gt;8E</p>
<h4 id="1-1-2原反补移码"><a href="#1-1-2原反补移码" class="headerlink" title="1.1.2原反补移码"></a>1.1.2原反补移码</h4><p>负数原码变反码：符号位不变，后面所有数字取反</p>
<p>负数的补码是由反码的基础上+1</p>
<p>移码是在补码首位做取反</p>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">数值1</th>
<th align="center">数值-1</th>
<th align="center">1-1</th>
</tr>
</thead>
<tbody><tr>
<td align="center">原码</td>
<td align="center">0000 0001</td>
<td align="center">1000 0001</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">反码</td>
<td align="center">0000 0001</td>
<td align="center">1111 1110</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">补码</td>
<td align="center">0000 0001</td>
<td align="center">1111 1111</td>
<td align="center">0000 0000</td>
</tr>
<tr>
<td align="center">移码</td>
<td align="center">1000 0001</td>
<td align="center">0111 1111</td>
<td align="center"></td>
</tr>
</tbody></table>
<ul>
<li>数值表示范围</li>
</ul>
<p>原码和反码：<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="21.997ex" height="2.565ex" role="img" focusable="false" viewBox="0 -883.9 9722.8 1133.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(778,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(1167,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1378,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3300.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(4300.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(4800.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(5189.4,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">至</text></g><g data-mml-node="msup" transform="translate(6089.4,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1378,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(8222.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(9222.8,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container><br>补码：<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.452ex" xmlns="http://www.w3.org/2000/svg" width="16.34ex" height="2.452ex" role="img" focusable="false" viewBox="0 -883.9 7222.3 1083.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(778,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1378,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mi" transform="translate(2688.9,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">至</text></g><g data-mml-node="msup" transform="translate(3588.9,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1378,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5722.1,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(6722.3,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container></p>
<h4 id="1-1-3浮点数的运算"><a href="#1-1-3浮点数的运算" class="headerlink" title="1.1.3浮点数的运算"></a>1.1.3浮点数的运算</h4><p>先对阶（小阶对大阶），然后尾数计算，最后结果格式化</p>
<h3 id="1-2计算机结构"><a href="#1-2计算机结构" class="headerlink" title="1.2计算机结构"></a>1.2计算机结构</h3><p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20211012223757176.png" alt="image-20211012223757176"></p>
<p>算术逻辑单元：能实现多组算术运算和逻辑运算的组合逻辑电路。</p>
<p>累加寄存器AC：当<a class="link" href="https://baike.baidu.com/item/%E8%BF%90%E7%AE%97%E5%99%A8/2667320">运算器<i class="fas fa-external-link-alt"></i></a>的算术逻辑单元(ALU)执行算术或<a class="link" href="https://baike.baidu.com/item/%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97/7224729">逻辑运算<i class="fas fa-external-link-alt"></i></a>时，为ALU提供一个工作区。累加寄存器暂时存放ALU运算的结果信息。能进行加、减、读出、<a class="link" href="https://baike.baidu.com/item/%E7%A7%BB%E4%BD%8D/4491197">移位<i class="fas fa-external-link-alt"></i></a>、<a class="link" href="https://baike.baidu.com/item/%E5%BE%AA%E7%8E%AF%E7%A7%BB%E4%BD%8D/12723347">循环移位<i class="fas fa-external-link-alt"></i></a>和求补等操作。是运算器的主要部分。</p>
<p>数据缓冲寄存器（Data Register,DR）用来暂时存放由<a class="link" href="https://baike.baidu.com/item/%E5%86%85%E5%AD%98%E5%82%A8%E5%99%A8/834392">内存储器<i class="fas fa-external-link-alt"></i></a>读出的一条指令或一个<a class="link" href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%AD%97/8877755">数据字<i class="fas fa-external-link-alt"></i></a>；反之，当向内存存入一条指令或一个数据字时，也暂时将它们存放在数据缓冲寄存器中。</p>
<p>状态条件寄存器保存由算术指令和逻辑指令运行或测试的结果建立的各种<a class="link" href="https://baike.baidu.com/item/%E6%9D%A1%E4%BB%B6%E7%A0%81/4262211">条件码<i class="fas fa-external-link-alt"></i></a>内容，如运算结果进位标志（C），运算结果溢出标志（V），运算结果为零标志（Z），运算结果为负标志（N），中断标志（I），方向标志（D）和单步标识等。</p>
<h3 id="1-3Flynn分类法"><a href="#1-3Flynn分类法" class="headerlink" title="1.3Flynn分类法"></a>1.3Flynn分类法</h3><h2 id="数据结构与算法基础"><a href="#数据结构与算法基础" class="headerlink" title="数据结构与算法基础"></a>数据结构与算法基础</h2><ul>
<li>若将某有序树 T 转换为二叉树 T1，则 T 中结点的后（根）序序列就是 T1 中结点的（中序）遍历序列。</li>
</ul>
<p>将树转换为二叉树后，树的先根序列等于对应二叉树的先序序列，树的后根序列等于对应二叉树的中序序列。</p>
<ul>
<li>若对一个链表最常用的操作是在末尾插入结点和删除尾结点，则采用仅设尾指针的单向循环链表（不含头结点）时，**插入操作的时间复杂度为O(1)，删除操作的时间复杂度为O(n) **</li>
</ul>
<ul>
<li>平衡二叉树又称为AVL树，它或者是一棵空树<ul>
<li>它的左子树和右子树都是平衡二叉树，且<strong>左子树和右子树的深度之差的绝对值不超过1</strong>。</li>
</ul>
</li>
</ul>
<h2 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h2><ul>
<li>Outlook Express有以下一些优点<ul>
<li>可以脱机处理邮件，有效利用联机时间，降低了上网费用</li>
<li>发送和接收安全邮件</li>
</ul>
</li>
</ul>
<ul>
<li>在ASP的内置对象中。能修改cookie中的值的是response，它还可以创建cookie，而request可以访问cookie中的参数</li>
</ul>
<ul>
<li>快速排序采用的是<strong>分治法</strong>，其基本思想是将原问题分解成若干个规模更小但结构与原问题相似的子问题。通过递归地解决这些子问题，然后再将这些子问题的解组合成原问题的解，其时间复杂度为<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="10.074ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4452.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path></g><g data-mml-node="mo" transform="translate(778,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1167,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1767,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(2065,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="msub" transform="translate(2550,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mn" transform="translate(510,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(3463.6,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(4063.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></li>
</ul>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul>
<li>MP3是目前最流行的数字音乐压缩编码格式之一，其命名中“MP”是指（MPEG-1 Audio），“3”是指（layer 3 ）</li>
</ul>
]]></content>
      <categories>
        <category>软件设计师</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
        <tag>数据结构与算法基础</tag>
        <tag>计算机组成与体系结构</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建一个属于自己的Blog</title>
    <url>/2021/10/08/%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84Blog/</url>
    <content><![CDATA[<h1 id="搭建一个属于自己的Blog"><a href="#搭建一个属于自己的Blog" class="headerlink" title="搭建一个属于自己的Blog"></a>搭建一个属于自己的Blog</h1><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><h3 id="1-Git"><a href="#1-Git" class="headerlink" title="1.Git"></a>1.<a class="link"   href="http://git-scm.com/" >Git<i class="fas fa-external-link-alt"></i></a></h3><ul>
<li>Windows: Download &amp; install <a class="link"   href="https://git-scm.com/download/win" >git<i class="fas fa-external-link-alt"></i></a>.</li>
<li>Mac: Install it with <a class="link"   href="https://brew.sh/" >Homebrew<i class="fas fa-external-link-alt"></i></a>, <a class="link"   href="http://www.macports.org/" >MacPorts<i class="fas fa-external-link-alt"></i></a> or <a class="link"   href="http://sourceforge.net/projects/git-osx-installer/" >installer<i class="fas fa-external-link-alt"></i></a>.</li>
<li>Linux (Ubuntu, Debian): <code>sudo apt-get install git-core</code></li>
<li>Linux (Fedora, Red Hat, CentOS): <code>sudo yum install git-core</code></li>
</ul>
<h3 id="2-Node-js"><a href="#2-Node-js" class="headerlink" title="2.Node.js"></a>2.<a class="link"   href="http://nodejs.org/" >Node.js<i class="fas fa-external-link-alt"></i></a></h3><p>版本：至少为10.13, 推荐使用 12.0 或更高版本</p>
<p>Node.js 为大多数平台提供官方安装程序  <a class="link"   href="https://nodejs.org/en/download/" >official installer<i class="fas fa-external-link-alt"></i></a> </p>
<h2 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h2><h3 id="1-安装hexo"><a href="#1-安装hexo" class="headerlink" title="1.安装hexo"></a>1.安装hexo</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>

<h3 id="2-初始化博客目录"><a href="#2-初始化博客目录" class="headerlink" title="2.初始化博客目录"></a>2.初始化博客目录</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo init carrywll.gitee.io (carrywll为自己的英文名)</span><br><span class="line">cd carrywll.gitee.io</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

<h3 id="3-生成静态页面"><a href="#3-生成静态页面" class="headerlink" title="3.生成静态页面"></a>3.生成静态页面</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure>

<h3 id="4-运行"><a href="#4-运行" class="headerlink" title="4.运行"></a>4.运行</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p>访问：<a class="link"   href="http://localhost:4000/" >http://localhost:4000<i class="fas fa-external-link-alt"></i></a> 即可</p>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210825143308407.png" alt="image-20210825143308407"></p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>打开 <code>_config.yml</code> 文件，这个文件是用来配置你的网站信息的</p>
<p>具体配置参考：<a class="link"   href="https://hexo.io/docs/configuration.html" >https://hexo.io/docs/configuration.html<i class="fas fa-external-link-alt"></i></a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: Carry</span><br><span class="line">subtitle: &#39;&#39;</span><br><span class="line">description: &#39;王磊的博客&#39;</span><br><span class="line">keywords: Java</span><br><span class="line">author: wanglei</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone: &#39;Asia&#x2F;Shanghai&#39;</span><br></pre></td></tr></table></figure>

<h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><h3 id="1-选取主题"><a href="#1-选取主题" class="headerlink" title="1.选取主题"></a>1.选取主题</h3><p><a class="link"   href="https://link.juejin.cn/?target=https://hexo.io/themes/" >Hexo主题<i class="fas fa-external-link-alt"></i></a>可以在这里选取你喜欢的主题</p>
<h3 id="2-下载主题"><a href="#2-下载主题" class="headerlink" title="2.下载主题"></a>2.下载主题</h3><p>这里选用Keep主题</p>
<h4 id="2-1安装主题"><a href="#2-1安装主题" class="headerlink" title="2.1安装主题"></a>2.1安装主题</h4><p>进入您的 Hexo 博客根目录，克隆或下载 <code>hexo-theme-keep</code> 主题</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-theme-keep</span><br></pre></td></tr></table></figure>

<h4 id="2-3启用主题"><a href="#2-3启用主题" class="headerlink" title="2.3启用主题"></a>2.3启用主题</h4><p>修改 Hexo 站点配置文件 <code>_config.yml</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">theme: keep</span><br></pre></td></tr></table></figure>

<h4 id="2-4配置主题"><a href="#2-4配置主题" class="headerlink" title="2.4配置主题"></a>2.4配置主题</h4><p>在 Hexo 工作目录下新建 <code>source/_data/keep.yml</code>。（若 <code>source/_data</code> 目录不存在，请新建。）</p>
<p>keep.yml内容来自node_modules/hexo-theme-keep/_config.yml，可以自己修改</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">#  Your basic info</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="attr">base_info:</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">Carry</span></span><br><span class="line">  <span class="attr">author:</span> <span class="string">Carry灭霸</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">https://carrywl.gitee.io/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Theme style settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="attr">style:</span></span><br><span class="line">  <span class="comment"># Theme primary color</span></span><br><span class="line">  <span class="attr">primary_color:</span> <span class="string">&#x27;#0066CC&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Avatar (You can use local image or image external link)</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">/images/avatar.svg</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Favicon (You can use local image or image external link)</span></span><br><span class="line">  <span class="attr">favicon:</span> <span class="string">/images/logo.svg</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Article image align position, value: left | center</span></span><br><span class="line">  <span class="attr">article_img_align:</span> <span class="string">center</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Left side width</span></span><br><span class="line">  <span class="attr">left_side_width:</span> <span class="string">260px</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Content area max width</span></span><br><span class="line">  <span class="attr">content_max_width:</span> <span class="string">920px</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Mouse hover</span></span><br><span class="line">  <span class="attr">hover:</span></span><br><span class="line">    <span class="attr">shadow:</span> <span class="literal">false</span>   <span class="comment"># shadow effect when the mouse hover</span></span><br><span class="line">    <span class="attr">scale:</span> <span class="literal">false</span>    <span class="comment"># scale effect when the mouse hover</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># First screen</span></span><br><span class="line">  <span class="attr">first_screen:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">background_img:</span> <span class="string">/images/bg.svg</span>   <span class="comment"># You can use local image or image external link</span></span><br><span class="line">    <span class="attr">description:</span> <span class="string">Persistence</span> <span class="string">is</span> <span class="string">hard,</span> <span class="string">but</span> <span class="string">it</span> <span class="string">must</span> <span class="string">be</span> <span class="string">cool</span> <span class="string">to</span> <span class="string">persevere💪</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Scroll style settings</span></span><br><span class="line">  <span class="attr">scroll:</span></span><br><span class="line">    <span class="attr">progress_bar:</span></span><br><span class="line">      <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">percent:</span></span><br><span class="line">      <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Social contact link</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="attr">social_contact:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">links:</span></span><br><span class="line">    <span class="attr">github:</span>          <span class="string">https://github.com/CarryWll?tab=repositories</span></span><br><span class="line">    <span class="attr">git-square:</span>           <span class="string">https://gitee.com/carrywl/dashboard/projects</span></span><br><span class="line">    <span class="attr">weixin:</span>          <span class="string">https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/weChat-Code.jpg</span></span><br><span class="line">    <span class="attr">qq:</span>              <span class="comment"># your QQ QR-Code URL</span></span><br><span class="line">    <span class="attr">weibo:</span>           <span class="comment"># your WeiBo URL</span></span><br><span class="line">    <span class="attr">zhihu:</span>           <span class="comment"># your ZhiHu URL</span></span><br><span class="line">    <span class="attr">twitter:</span>         <span class="comment"># your twitter URL</span></span><br><span class="line">    <span class="attr">facebook:</span>        <span class="comment"># your facebook URL</span></span><br><span class="line">    <span class="attr">email:</span>           <span class="number">2239264903</span><span class="string">@qq.com</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Navigation menu</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">Home:</span> <span class="string">/</span></span><br><span class="line">  <span class="attr">Archives:</span> <span class="string">/archives</span></span><br><span class="line">  <span class="attr">Categories:</span> <span class="string">/categories</span></span><br><span class="line">  <span class="attr">Tags:</span> <span class="string">/tags</span></span><br><span class="line">  <span class="comment"># Links: /links</span></span><br><span class="line">  <span class="comment"># About: /about</span></span><br><span class="line">  <span class="comment"># Changelog: /changelog</span></span><br><span class="line">  <span class="comment"># ......</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Home page article block display settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="attr">home_article:</span></span><br><span class="line">  <span class="attr">category:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span>     <span class="comment"># show category in home page article block</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">3</span>          <span class="comment"># max number of categories shown in home page article block</span></span><br><span class="line">  <span class="attr">tag:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span>     <span class="comment"># show tags in home page article block</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">5</span>          <span class="comment"># max number of tags shown in home page article block</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Post page Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="attr">post:</span></span><br><span class="line">  <span class="comment"># Post word count</span></span><br><span class="line">  <span class="comment"># Dependencies: hexo-wordcount (npm install hexo-wordcount)</span></span><br><span class="line">  <span class="comment"># See: https://github.com/willin/hexo-wordcount</span></span><br><span class="line">  <span class="attr">word_count:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">wordcount:</span> <span class="literal">false</span>  <span class="comment"># word count, one article</span></span><br><span class="line">    <span class="attr">min2read:</span> <span class="literal">false</span>   <span class="comment"># time to read, one article</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Author label</span></span><br><span class="line">  <span class="attr">author_label:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">auto:</span> <span class="literal">true</span>  <span class="comment"># if true, show Lv1, Lv2, Lv3... , If false, show custom label</span></span><br><span class="line">    <span class="comment"># label array item can be one or more</span></span><br><span class="line">    <span class="attr">custom_label_list:</span> [ <span class="string">&quot;Trainee&quot;</span>, <span class="string">&quot;Engineer&quot;</span>, <span class="string">&quot;Architect&quot;</span>, <span class="string">&quot;CTO&quot;</span>, <span class="string">&quot;BOSS&quot;</span> ]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Code copy</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="attr">code_copy:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">default</span>        <span class="comment"># values: default | mac</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Table of Contents in the Sidebar</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Automatically add list number to toc.</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># If true, all level of TOC in a post will be displayed, rather than the activated part of it.</span></span><br><span class="line">  <span class="attr">expand_all:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># If true, open TOC every time when you enter the article page</span></span><br><span class="line">  <span class="attr">init_open:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Post copyright info</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="attr">copyright_info:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Website count</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="attr">website_count:</span></span><br><span class="line">  <span class="comment"># busuanzi</span></span><br><span class="line">  <span class="comment"># See: http://ibruce.info/2015/04/04/busuanzi/</span></span><br><span class="line">  <span class="attr">busuanzi_count:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">site_uv:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">site_pv:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">page_pv:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Search</span></span><br><span class="line"><span class="comment">## See: https://github.com/theme-next/hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.json</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">striptags</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Local Search</span></span><br><span class="line"><span class="comment"># Dependencies: hexo-generator-searchdb</span></span><br><span class="line"><span class="comment"># See: https://github.com/theme-next/hexo-generator-searchdb</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">true</span>     <span class="comment"># Preload the search data when the page loads</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Comment plugin</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="attr">comment:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">use:</span> <span class="string">valine</span>  <span class="comment"># values: valine | gitalk | twikoo</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Valine</span></span><br><span class="line">  <span class="comment"># See: https://github.com/xCss/Valine</span></span><br><span class="line">  <span class="attr">valine:</span></span><br><span class="line">    <span class="attr">appid:</span> <span class="string">GWXViL9oMzuvk5GoEyorAF5a-gzGzoHsz</span>                <span class="comment"># your leancloud application appid</span></span><br><span class="line">    <span class="attr">appkey:</span> <span class="string">tfCnOVhjkUjT90W8EGLYvf0v</span>               <span class="comment"># your leancloud application appkey</span></span><br><span class="line">    <span class="attr">placeholder:</span> <span class="string">😜</span> <span class="string">尽情吐槽吧~</span>         <span class="comment"># your placeholder</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Gitalk</span></span><br><span class="line">  <span class="comment"># See: https://github.com/gitalk/gitalk</span></span><br><span class="line">  <span class="attr">gitalk:</span></span><br><span class="line">    <span class="attr">github_id:</span>             <span class="comment"># GitHub repo owner</span></span><br><span class="line">    <span class="attr">repository:</span>            <span class="comment"># Repository name to store issues</span></span><br><span class="line">    <span class="attr">client_id:</span>             <span class="comment"># GitHub Application Client ID</span></span><br><span class="line">    <span class="attr">client_secret:</span>         <span class="comment"># GitHub Application Client Secret</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Twikoo</span></span><br><span class="line">  <span class="comment"># See: https://github.com/imaegoo/twikoo</span></span><br><span class="line">  <span class="attr">twikoo:</span></span><br><span class="line">    <span class="attr">env_id:</span>                <span class="comment"># Tencent Cloud environment id</span></span><br><span class="line">    <span class="attr">region:</span>                <span class="comment"># environment region. If select Guangzhou, fill in &quot;ap-guangzhou&quot;.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># RSS</span></span><br><span class="line"><span class="comment"># Dependencies: hexo-generator-feed</span></span><br><span class="line"><span class="comment"># See: https://github.com/hexojs/hexo-generator-feed</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="attr">rss:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Lazyload image</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="attr">lazyload:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># CDN</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="attr">cdn:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># 公式</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="attr">mathjax:</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">none</span>               <span class="comment"># or &#x27;ams&#x27; or &#x27;all&#x27;</span></span><br><span class="line">  <span class="attr">single_dollars:</span> <span class="literal">true</span>     <span class="comment"># enable single dollar signs as in-line math delimiters</span></span><br><span class="line">  <span class="attr">cjk_width:</span> <span class="number">0.9</span>           <span class="comment"># relative CJK char width</span></span><br><span class="line">  <span class="attr">normal_width:</span> <span class="number">0.6</span>        <span class="comment"># relative normal (monospace) width</span></span><br><span class="line">  <span class="attr">append_css:</span> <span class="literal">true</span>         <span class="comment"># add CSS to every page</span></span><br><span class="line">  <span class="attr">every_page:</span> <span class="literal">false</span>        <span class="comment"># if true, every page will be rendered by mathjax regardless the `mathjax` setting in Front-matter of each article</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># PJAX</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="attr">pjax:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Footer settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="attr">since:</span> <span class="number">2021</span>      <span class="comment"># the starting year of your website, Can be null</span></span><br><span class="line">  <span class="attr">icp:</span>             <span class="comment"># ICP record number of your website, Can be null</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Keep version (Please don&#x27;t modify)</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="attr">version:</span> <span class="number">3.4</span><span class="number">.3</span></span><br></pre></td></tr></table></figure>

<h4 id="2-5重启"><a href="#2-5重启" class="headerlink" title="2.5重启"></a>2.5重启</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210827105430564.png" alt="image-20210827105430564"></p>
<p>推荐部署到GitHub，因为每次本地上传完之后，不需要自己手动重启</p>
<h2 id="第一种-部署GitHub"><a href="#第一种-部署GitHub" class="headerlink" title="第一种-部署GitHub"></a>第一种-部署GitHub</h2><h3 id="1-创建仓库"><a href="#1-创建仓库" class="headerlink" title="1.创建仓库"></a>1.创建仓库</h3><p>创建一个carrywll.github.io的 public 仓库，这里的carrywll写你的名字，那么到时我就可以通过 <code>carrywll.github.io</code> 来访问我的网站了。 创建完成之后，那么你就有自己的 Git 地址了。</p>
<h3 id="2-安装-hexo-deployer-git"><a href="#2-安装-hexo-deployer-git" class="headerlink" title="2.安装 hexo-deployer-git"></a>2.安装 hexo-deployer-git</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd carrywll.github.io</span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<h3 id="3-配置你的Git"><a href="#3-配置你的Git" class="headerlink" title="3.配置你的Git"></a>3.配置你的Git</h3><p>配置文件<code>_config.yml</code>，repo为git地址</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">&#x27;git&#x27;</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/CarryWll/carrywll.github.io.git</span> </span><br></pre></td></tr></table></figure>

<h3 id="4-部署"><a href="#4-部署" class="headerlink" title="4.部署"></a>4.部署</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p>然后就可以通过<a class="link"   href="https://carrywll.github.io/%E8%AE%BF%E9%97%AE%E4%BA%86" >https://carrywll.github.io/访问了<i class="fas fa-external-link-alt"></i></a></p>
<h2 id="第二种-部署Gitee"><a href="#第二种-部署Gitee" class="headerlink" title="第二种-部署Gitee"></a>第二种-部署Gitee</h2><p>使用Gitee Pages</p>
<h3 id="1-创建仓库-1"><a href="#1-创建仓库-1" class="headerlink" title="1.创建仓库"></a>1.创建仓库</h3><p>建立一个与自己<strong>个性地址</strong>同名的仓库，比如我的个性地址为<code>carrywl</code>，那么他就可以创建一个名字为<code>carrywl</code>的仓库</p>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210825223645614.png" alt="image-20210825223645614"></p>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210825224145453.png" alt="image-20210825224145453"></p>
<h3 id="2-安装hexo-deployer-git"><a href="#2-安装hexo-deployer-git" class="headerlink" title="2.安装hexo-deployer-git"></a>2.安装hexo-deployer-git</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd carrywll.gitee.io</span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<h3 id="3-配置你的Git-1"><a href="#3-配置你的Git-1" class="headerlink" title="3.配置你的Git"></a>3.配置你的Git</h3><p>配置文件<code>_config.yml</code>，repo为git地址</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: &#39;git&#39;</span><br><span class="line">  repo: https:&#x2F;&#x2F;gitee.com&#x2F;carrywl&#x2F;carrywl.git </span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210825224357994.png" alt="image-20210825224357994"></p>
<h3 id="4-部署-1"><a href="#4-部署-1" class="headerlink" title="4.部署"></a>4.部署</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<h3 id="5-开启Gitee-Pages"><a href="#5-开启Gitee-Pages" class="headerlink" title="5.开启Gitee Pages"></a>5.开启Gitee Pages</h3><p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210825224505715.png" alt="image-20210825224505715"></p>
<p>直接启动就可以</p>
<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20210825224654877.png" alt="image-20210825224654877"></p>
<p>然后就可以通过<a class="link"   href="http://carrywl.gitee.io/%E8%AE%BF%E9%97%AE%E4%BA%86" >http://carrywl.gitee.io/访问了<i class="fas fa-external-link-alt"></i></a></p>
<blockquote>
<p>参考链接： </p>
<ul>
<li><a class="link"   href="https://hexo.io/docs/" >https://hexo.io/docs/<i class="fas fa-external-link-alt"></i></a></li>
<li><a class="link"   href="https://juejin.cn/post/6954942216808693773#heading-1" >https://juejin.cn/post/6954942216808693773#heading-1<i class="fas fa-external-link-alt"></i></a></li>
<li><a class="link"   href="https://github.com/XPoet/hexo-theme-keep" >https://github.com/XPoet/hexo-theme-keep<i class="fas fa-external-link-alt"></i></a></li>
<li><a class="link"   href="https://gitee.com/help/articles/4136#article-header3" >https://gitee.com/help/articles/4136#article-header3<i class="fas fa-external-link-alt"></i></a></li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>Hexo</tag>
        <tag>Keep</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue</title>
    <url>/2021/09/01/Vue/</url>
    <content><![CDATA[<h1 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h1><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><h3 id="1-hello-world"><a href="#1-hello-world" class="headerlink" title="1.hello world"></a>1.hello world</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>初识Vue<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">			初识Vue：</span></span><br><span class="line"><span class="comment">				1.想让Vue工作，就必须创建一个Vue实例，且要传入一个配置对象；</span></span><br><span class="line"><span class="comment">				2.root容器里的代码依然符合html规范，只不过混入了一些特殊的Vue语法；</span></span><br><span class="line"><span class="comment">				3.root容器里的代码被称为【Vue模板】；</span></span><br><span class="line"><span class="comment">				4.Vue实例和容器是一一对应的；</span></span><br><span class="line"><span class="comment">				5.真实开发中只有一个Vue实例，并且会配合着组件一起使用；</span></span><br><span class="line"><span class="comment">				6.&#123;&#123;xxx&#125;&#125;中的xxx要写js表达式，且xxx可以自动读取到data中的所有属性；</span></span><br><span class="line"><span class="comment">				7.一旦data中的数据发生改变，那么页面中用到该数据的地方也会自动更新；</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">				注意区分：js表达式 和 js代码(语句)</span></span><br><span class="line"><span class="comment">						1.表达式：一个表达式会产生一个值，可以放在任何一个需要值的地方：</span></span><br><span class="line"><span class="comment">									(1). a</span></span><br><span class="line"><span class="comment">									(2). a+b</span></span><br><span class="line"><span class="comment">									(3). demo(1)</span></span><br><span class="line"><span class="comment">									(4). x === y ? &#x27;a&#x27; : &#x27;b&#x27;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">						2.js代码(语句)</span></span><br><span class="line"><span class="comment">									(1). if()&#123;&#125;</span></span><br><span class="line"><span class="comment">									(2). for()&#123;&#125;</span></span><br><span class="line"><span class="comment">		--&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!-- 准备好一个容器 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello，&#123;&#123;name.toUpperCase()&#125;&#125;，&#123;&#123;address&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> &gt;</span></span><br><span class="line"><span class="javascript">			Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">			<span class="comment">//创建Vue实例</span></span></span><br><span class="line"><span class="javascript">			<span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">				el:<span class="string">&#x27;#demo&#x27;</span>, <span class="comment">//el用于指定当前Vue实例为哪个容器服务，值通常为css选择器字符串。</span></span></span><br><span class="line"><span class="javascript">				data:&#123; <span class="comment">//data中用于存储数据，数据供el所指定的容器去使用，值我们暂时先写成一个对象。</span></span></span><br><span class="line"><span class="javascript">					name:<span class="string">&#x27;atguigu&#x27;</span>,</span></span><br><span class="line"><span class="javascript">					address:<span class="string">&#x27;北京&#x27;</span></span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;)</span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-模板语法"><a href="#2-模板语法" class="headerlink" title="2.模板语法"></a>2.模板语法</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>模板语法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">				Vue模板语法有2大类：</span></span><br><span class="line"><span class="comment">					1.插值语法：</span></span><br><span class="line"><span class="comment">							功能：用于解析标签体内容。</span></span><br><span class="line"><span class="comment">							写法：&#123;&#123;xxx&#125;&#125;，xxx是js表达式，且可以直接读取到data中的所有属性。</span></span><br><span class="line"><span class="comment">					2.指令语法：</span></span><br><span class="line"><span class="comment">							功能：用于解析标签（包括：标签属性、标签体内容、绑定事件.....）。</span></span><br><span class="line"><span class="comment">							举例：v-bind:href=&quot;xxx&quot; 或  简写为 :href=&quot;xxx&quot;，xxx同样要写js表达式，</span></span><br><span class="line"><span class="comment">									 且可以直接读取到data中的所有属性。</span></span><br><span class="line"><span class="comment">							备注：Vue中有很多的指令，且形式都是：v-????，此处我们只是拿v-bind举个例子。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">		 --&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h1</span>&gt;</span>插值语法<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h3</span>&gt;</span>你好，&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h1</span>&gt;</span>指令语法<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;school.url.toUpperCase()&quot;</span> <span class="attr">x</span>=<span class="string">&quot;hello&quot;</span>&gt;</span>点我去&#123;&#123;school.name&#125;&#125;学习1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">a</span> <span class="attr">:href</span>=<span class="string">&quot;school.url&quot;</span> <span class="attr">x</span>=<span class="string">&quot;hello&quot;</span>&gt;</span>点我去&#123;&#123;school.name&#125;&#125;学习2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">		Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">		<span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">			el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">			data:&#123;</span><br><span class="line"><span class="javascript">				name:<span class="string">&#x27;jack&#x27;</span>,</span></span><br><span class="line">				school:&#123;</span><br><span class="line"><span class="javascript">					name:<span class="string">&#x27;尚硅谷&#x27;</span>,</span></span><br><span class="line"><span class="javascript">					url:<span class="string">&#x27;http://www.atguigu.com&#x27;</span>,</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;)</span><br><span class="line">	<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-数据绑定"><a href="#3-数据绑定" class="headerlink" title="3.数据绑定"></a>3.数据绑定</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>数据绑定<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">			Vue中有2种数据绑定的方式：</span></span><br><span class="line"><span class="comment">					1.单向绑定(v-bind)：数据只能从data流向页面。</span></span><br><span class="line"><span class="comment">					2.双向绑定(v-model)：数据不仅能从data流向页面，还可以从页面流向data。</span></span><br><span class="line"><span class="comment">						备注：</span></span><br><span class="line"><span class="comment">								1.双向绑定一般都应用在表单类元素上（如：input、select等）</span></span><br><span class="line"><span class="comment">								2.v-model:value 可以简写为 v-model，因为v-model默认收集的就是value值。</span></span><br><span class="line"><span class="comment">		 --&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 普通写法 --&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 单向数据绑定：&lt;input type=&quot;text&quot; v-bind:value=&quot;name&quot;&gt;&lt;br/&gt;</span></span><br><span class="line"><span class="comment">			双向数据绑定：&lt;input type=&quot;text&quot; v-model:value=&quot;name&quot;&gt;&lt;br/&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="comment">&lt;!-- 简写 --&gt;</span></span><br><span class="line">			单向数据绑定：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">:value</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">			双向数据绑定：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="comment">&lt;!-- 如下代码是错误的，因为v-model只能应用在表单类元素（输入类元素）上 --&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- &lt;h2 v-model:x=&quot;name&quot;&gt;你好啊&lt;/h2&gt; --&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">		Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">		<span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">			el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">			data:&#123;</span><br><span class="line"><span class="javascript">				name:<span class="string">&#x27;尚硅谷&#x27;</span></span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;)</span><br><span class="line">	<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="4-挂载-mount和data函数式"><a href="#4-挂载-mount和data函数式" class="headerlink" title="4.挂载$mount和data函数式"></a>4.挂载$mount和data函数式</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>el与data的两种写法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">			data与el的2种写法</span></span><br><span class="line"><span class="comment">					1.el有2种写法</span></span><br><span class="line"><span class="comment">									(1).new Vue时候配置el属性。</span></span><br><span class="line"><span class="comment">									(2).先创建Vue实例，随后再通过vm.$mount(&#x27;#root&#x27;)指定el的值。</span></span><br><span class="line"><span class="comment">					2.data有2种写法</span></span><br><span class="line"><span class="comment">									(1).对象式</span></span><br><span class="line"><span class="comment">									(2).函数式</span></span><br><span class="line"><span class="comment">									如何选择：目前哪种写法都可以，以后学习到组件时，data必须使用函数式，否则会报错。</span></span><br><span class="line"><span class="comment">					3.一个重要的原则：</span></span><br><span class="line"><span class="comment">									由Vue管理的函数，一定不要写箭头函数，一旦写了箭头函数，this就不再是Vue实例了。</span></span><br><span class="line"><span class="comment">		--&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h1</span>&gt;</span>你好，&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">		Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">		<span class="comment">//el的两种写法</span></span></span><br><span class="line">		/* const v = new Vue(&#123;</span><br><span class="line"><span class="javascript">			<span class="comment">//el:&#x27;#root&#x27;, //第一种写法</span></span></span><br><span class="line">			data:&#123;</span><br><span class="line"><span class="javascript">				name:<span class="string">&#x27;尚硅谷&#x27;</span></span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;)</span><br><span class="line"><span class="javascript">		<span class="built_in">console</span>.log(v)</span></span><br><span class="line"><span class="javascript">		v.$mount(<span class="string">&#x27;#root&#x27;</span>) <span class="comment">//第二种写法 */</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">		<span class="comment">//data的两种写法</span></span></span><br><span class="line"><span class="javascript">		<span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">			el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="javascript">			<span class="comment">//data的第一种写法：对象式</span></span></span><br><span class="line">			/* data:&#123;</span><br><span class="line"><span class="javascript">				name:<span class="string">&#x27;尚硅谷&#x27;</span></span></span><br><span class="line">			&#125; */</span><br><span class="line"></span><br><span class="line"><span class="javascript">			<span class="comment">//data的第二种写法：函数式</span></span></span><br><span class="line"><span class="javascript">			<span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">				<span class="built_in">console</span>.log(<span class="string">&#x27;@@@&#x27;</span>,<span class="built_in">this</span>) <span class="comment">//此处的this是Vue实例对象</span></span></span><br><span class="line"><span class="javascript">				<span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">					name:<span class="string">&#x27;尚硅谷&#x27;</span></span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;)</span><br><span class="line">	<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="5-理解MVVM"><a href="#5-理解MVVM" class="headerlink" title="5.理解MVVM"></a>5.理解MVVM</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>理解MVVM<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">			MVVM模型</span></span><br><span class="line"><span class="comment">						1. M：模型(Model) ：data中的数据</span></span><br><span class="line"><span class="comment">						2. V：视图(View) ：模板代码</span></span><br><span class="line"><span class="comment">						3. VM：视图模型(ViewModel)：Vue实例</span></span><br><span class="line"><span class="comment">			观察发现：</span></span><br><span class="line"><span class="comment">						1.data中所有的属性，最后都出现在了vm身上。</span></span><br><span class="line"><span class="comment">						2.vm身上所有的属性 及 Vue原型上所有属性，在Vue模板中都可以直接使用。</span></span><br><span class="line"><span class="comment">		--&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h1</span>&gt;</span>学校名称：&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h1</span>&gt;</span>学校地址：&#123;&#123;address&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- &lt;h1&gt;测试一下1：&#123;&#123;1+1&#125;&#125;&lt;/h1&gt;</span></span><br><span class="line"><span class="comment">			&lt;h1&gt;测试一下2：&#123;&#123;$options&#125;&#125;&lt;/h1&gt;</span></span><br><span class="line"><span class="comment">			&lt;h1&gt;测试一下3：&#123;&#123;$emit&#125;&#125;&lt;/h1&gt;</span></span><br><span class="line"><span class="comment">			&lt;h1&gt;测试一下4：&#123;&#123;_c&#125;&#125;&lt;/h1&gt; --&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">		Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">		<span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">			el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">			data:&#123;</span><br><span class="line"><span class="javascript">				name:<span class="string">&#x27;尚硅谷&#x27;</span>,</span></span><br><span class="line"><span class="javascript">				address:<span class="string">&#x27;北京&#x27;</span>,</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;)</span><br><span class="line"><span class="javascript">		<span class="built_in">console</span>.log(vm)</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="6-数据代理"><a href="#6-数据代理" class="headerlink" title="6.数据代理"></a>6.数据代理</h3><h4 id="6-1Object-defineproperty方法"><a href="#6-1Object-defineproperty方法" class="headerlink" title="6.1Object.defineproperty方法"></a>6.1Object.defineproperty方法</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>回顾Object.defineproperty方法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> &gt;</span></span><br><span class="line"><span class="javascript">			<span class="keyword">let</span> number = <span class="number">18</span></span></span><br><span class="line"><span class="javascript">			<span class="keyword">let</span> person = &#123;</span></span><br><span class="line"><span class="javascript">				name:<span class="string">&#x27;张三&#x27;</span>,</span></span><br><span class="line"><span class="javascript">				sex:<span class="string">&#x27;男&#x27;</span>,</span></span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">			<span class="comment">//defineProperty的value默认不可枚举，即不可遍历</span></span></span><br><span class="line"><span class="javascript">			<span class="built_in">Object</span>.defineProperty(person,<span class="string">&#x27;age&#x27;</span>,&#123;</span></span><br><span class="line"><span class="javascript">				<span class="comment">// value:18,</span></span></span><br><span class="line"><span class="javascript">				<span class="comment">// enumerable:true, //控制属性是否可以枚举，默认值是false</span></span></span><br><span class="line"><span class="javascript">				<span class="comment">// writable:true, //控制属性是否可以被修改，默认值是false</span></span></span><br><span class="line"><span class="javascript">				<span class="comment">// configurable:true //控制属性是否可以被删除，默认值是false</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">				<span class="comment">//当有人读取person的age属性时，get函数(getter)就会被调用，且返回值就是age的值</span></span></span><br><span class="line"><span class="javascript">				<span class="function"><span class="title">get</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">					<span class="built_in">console</span>.log(<span class="string">&#x27;有人读取age属性了&#x27;</span>)</span></span><br><span class="line"><span class="javascript">					<span class="keyword">return</span> number</span></span><br><span class="line">				&#125;,</span><br><span class="line"></span><br><span class="line"><span class="javascript">				<span class="comment">//当有人修改person的age属性时，set函数(setter)就会被调用，且会收到修改的具体值</span></span></span><br><span class="line"><span class="javascript">				<span class="function"><span class="title">set</span>(<span class="params">value</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">					<span class="built_in">console</span>.log(<span class="string">&#x27;有人修改了age属性，且值是&#x27;</span>,value)</span></span><br><span class="line">					number = value</span><br><span class="line">				&#125;</span><br><span class="line"></span><br><span class="line">			&#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">			<span class="comment">// console.log(Object.keys(person))</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">			<span class="built_in">console</span>.log(person)</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="6-2数据代理"><a href="#6-2数据代理" class="headerlink" title="6.2数据代理"></a>6.2数据代理</h4><ol>
<li>Vue中的数据代理：</li>
</ol>
<p>​              通过vm对象来代理data对象中属性的操作（读/写）</p>
<ol start="2">
<li>Vue中数据代理的好处：</li>
</ol>
<p>​              更加方便的操作data中的数据</p>
<ol start="3">
<li>基本原理：</li>
</ol>
<p>​              通过Object.defineProperty()把data对象中所有属性添加到vm上。</p>
<p>​              为每一个添加到vm上的属性，都指定一个getter/setter。</p>
<p>​              在getter/setter内部去操作（读/写）data中对应的属性。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>何为数据代理<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 数据代理：通过一个对象代理对另一个对象中属性的操作（读/写）--&gt;</span></span><br><span class="line">		</span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> &gt;</span></span><br><span class="line"><span class="javascript">			<span class="keyword">let</span> obj = &#123;<span class="attr">x</span>:<span class="number">100</span>&#125;</span></span><br><span class="line"><span class="javascript">			<span class="keyword">let</span> obj2 = &#123;<span class="attr">y</span>:<span class="number">200</span>&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">			<span class="comment">//通过obj2代理obj</span></span></span><br><span class="line"><span class="javascript">			<span class="built_in">Object</span>.defineProperty(obj2,<span class="string">&#x27;x&#x27;</span>,&#123;</span></span><br><span class="line"><span class="javascript">				<span class="function"><span class="title">get</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">					<span class="keyword">return</span> obj.x</span></span><br><span class="line">				&#125;,</span><br><span class="line"><span class="javascript">				<span class="function"><span class="title">set</span>(<span class="params">value</span>)</span>&#123;</span></span><br><span class="line">					obj.x = value</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;)</span><br><span class="line">		<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="7-事件处理"><a href="#7-事件处理" class="headerlink" title="7.事件处理"></a>7.事件处理</h3><h4 id="7-1基本使用"><a href="#7-1基本使用" class="headerlink" title="7.1基本使用"></a>7.1基本使用</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>事件的基本使用<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">				事件的基本使用：</span></span><br><span class="line"><span class="comment">							1.使用v-on:xxx 或 @xxx 绑定事件，其中xxx是事件名；</span></span><br><span class="line"><span class="comment">							2.事件的回调需要配置在methods对象中，最终会在vm上；</span></span><br><span class="line"><span class="comment">							3.methods中配置的函数，不要用箭头函数！否则this就不是vm了；</span></span><br><span class="line"><span class="comment">							4.methods中配置的函数，都是被Vue所管理的函数，this的指向是vm 或 组件实例对象；</span></span><br><span class="line"><span class="comment">							5.@click=&quot;demo&quot; 和 @click=&quot;demo($event)&quot; 效果一致，但后者可以传参；</span></span><br><span class="line"><span class="comment">		--&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h2</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;学习<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- &lt;button v-on:click=&quot;showInfo&quot;&gt;点我提示信息&lt;/button&gt; --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showInfo1&quot;</span>&gt;</span>点我提示信息1（不传参）<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showInfo2($event,66)&quot;</span>&gt;</span>点我提示信息2（传参）<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">		Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">		<span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">			el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">			data:&#123;</span><br><span class="line"><span class="javascript">				name:<span class="string">&#x27;尚硅谷&#x27;</span>,</span></span><br><span class="line">			&#125;,</span><br><span class="line">			methods:&#123;</span><br><span class="line"><span class="javascript">				<span class="function"><span class="title">showInfo1</span>(<span class="params">event</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">					<span class="comment">// console.log(event.target.innerText)</span></span></span><br><span class="line"><span class="javascript">					<span class="comment">// console.log(this) //此处的this是vm</span></span></span><br><span class="line"><span class="javascript">					alert(<span class="string">&#x27;同学你好！&#x27;</span>)</span></span><br><span class="line">				&#125;,</span><br><span class="line"><span class="javascript">				<span class="function"><span class="title">showInfo2</span>(<span class="params">event,number</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">					<span class="built_in">console</span>.log(event,number)</span></span><br><span class="line"><span class="javascript">					<span class="comment">// console.log(event.target.innerText)</span></span></span><br><span class="line"><span class="javascript">					<span class="comment">// console.log(this) //此处的this是vm</span></span></span><br><span class="line"><span class="javascript">					alert(<span class="string">&#x27;同学你好！！&#x27;</span>)</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;)</span><br><span class="line">	<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="7-2事件修饰符"><a href="#7-2事件修饰符" class="headerlink" title="7.2事件修饰符"></a>7.2事件修饰符</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>事件修饰符<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">			*&#123;</span><br><span class="line"><span class="css">				<span class="attribute">margin-top</span>: <span class="number">20px</span>;</span></span><br><span class="line">			&#125;</span><br><span class="line">			.demo1&#123;</span><br><span class="line"><span class="css">				<span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line">			&#125;</span><br><span class="line">			.box1&#123;</span><br><span class="line"><span class="css">				<span class="attribute">padding</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line">			&#125;</span><br><span class="line">			.box2&#123;</span><br><span class="line"><span class="css">				<span class="attribute">padding</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">background-color</span>: orange;</span></span><br><span class="line">			&#125;</span><br><span class="line">			.list&#123;</span><br><span class="line"><span class="css">				<span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">background-color</span>: peru;</span></span><br><span class="line"><span class="css">				<span class="attribute">overflow</span>: auto;</span></span><br><span class="line">			&#125;</span><br><span class="line"><span class="css">			<span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="css">				<span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line">			&#125;</span><br><span class="line">		<span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">				Vue中的事件修饰符：</span></span><br><span class="line"><span class="comment">						1.prevent：阻止默认事件（常用）；</span></span><br><span class="line"><span class="comment">						2.stop：阻止事件冒泡（常用）；</span></span><br><span class="line"><span class="comment">						3.once：事件只触发一次（常用）；</span></span><br><span class="line"><span class="comment">						4.capture：使用事件的捕获模式；</span></span><br><span class="line"><span class="comment">						5.self：只有event.target是当前操作的元素时才触发事件；</span></span><br><span class="line"><span class="comment">						6.passive：事件的默认行为立即执行，无需等待事件回调执行完毕；</span></span><br><span class="line"><span class="comment">		--&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h2</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;学习<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 阻止默认事件（常用） --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.atguigu.com&quot;</span> @<span class="attr">click.prevent</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="comment">&lt;!-- 阻止事件冒泡（常用） --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo1&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.stop</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">				<span class="comment">&lt;!-- 修饰符可以连续写 --&gt;</span></span><br><span class="line">				<span class="comment">&lt;!-- &lt;a href=&quot;http://www.atguigu.com&quot; @click.prevent.stop=&quot;showInfo&quot;&gt;点我提示信息&lt;/a&gt; --&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="comment">&lt;!-- 事件只触发一次（常用） --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.once</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="comment">&lt;!-- 使用事件的捕获模式 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span> @<span class="attr">click.capture</span>=<span class="string">&quot;showMsg(1)&quot;</span>&gt;</span></span><br><span class="line">				div1</span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;showMsg(2)&quot;</span>&gt;</span></span><br><span class="line">					div2</span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="comment">&lt;!-- 只有event.target是当前操作的元素时才触发事件； --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo1&quot;</span> @<span class="attr">click.self</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="comment">&lt;!-- passive 事件的默认行为立即执行，无需等待事件回调执行完毕；</span></span><br><span class="line"><span class="comment">				 @wheel滚轮滚动事件</span></span><br><span class="line"><span class="comment">				 @scorll滚动条滚动事件--&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">ul</span> @<span class="attr">wheel.passive</span>=<span class="string">&quot;demo&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">li</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">		Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">		<span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">			el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">			data:&#123;</span><br><span class="line"><span class="javascript">				name:<span class="string">&#x27;尚硅谷&#x27;</span></span></span><br><span class="line">			&#125;,</span><br><span class="line">			methods:&#123;</span><br><span class="line"><span class="javascript">				<span class="function"><span class="title">showInfo</span>(<span class="params">e</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">					alert(<span class="string">&#x27;同学你好！&#x27;</span>)</span></span><br><span class="line"><span class="javascript">					<span class="comment">// console.log(e.target)</span></span></span><br><span class="line">				&#125;,</span><br><span class="line"><span class="javascript">				<span class="function"><span class="title">showMsg</span>(<span class="params">msg</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">					<span class="built_in">console</span>.log(msg)</span></span><br><span class="line">				&#125;,</span><br><span class="line"><span class="javascript">				<span class="function"><span class="title">demo</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">					<span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++) &#123;</span></span><br><span class="line"><span class="javascript">						<span class="built_in">console</span>.log(<span class="string">&#x27;#&#x27;</span>)</span></span><br><span class="line">					&#125;</span><br><span class="line"><span class="javascript">					<span class="built_in">console</span>.log(<span class="string">&#x27;累坏了&#x27;</span>)</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;)</span><br><span class="line">	<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="7-3键盘事件"><a href="#7-3键盘事件" class="headerlink" title="7.3键盘事件"></a>7.3键盘事件</h4><p>Visual Studio Code开启按键提示：</p>
<p>F1输入Screencast Mode切换到开发者模式</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>键盘事件<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">				1.Vue中常用的按键别名：</span></span><br><span class="line"><span class="comment">							回车 =&gt; enter</span></span><br><span class="line"><span class="comment">							删除 =&gt; delete (捕获“删除”和“退格”键)</span></span><br><span class="line"><span class="comment">							退出 =&gt; esc</span></span><br><span class="line"><span class="comment">							空格 =&gt; space</span></span><br><span class="line"><span class="comment">							换行 =&gt; tab (特殊，必须配合keydown去使用)</span></span><br><span class="line"><span class="comment">							上 =&gt; up</span></span><br><span class="line"><span class="comment">							下 =&gt; down</span></span><br><span class="line"><span class="comment">							左 =&gt; left</span></span><br><span class="line"><span class="comment">							右 =&gt; right</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">				2.Vue未提供别名的按键，可以使用按键原始的key值去绑定，但注意要转为kebab-case（短横线命名）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">				3.系统修饰键（用法特殊）：ctrl、alt、shift、meta</span></span><br><span class="line"><span class="comment">							(1).配合keyup使用：按下修饰键的同时，再按下其他键，随后释放其他键，事件才被触发。</span></span><br><span class="line"><span class="comment">							(2).配合keydown使用：正常触发事件。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">				4.也可以使用keyCode去指定具体的按键（不推荐）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">				5.Vue.config.keyCodes.自定义键名 = 键码，可以去定制按键别名</span></span><br><span class="line"><span class="comment">		--&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h2</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;学习<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;按下回车提示输入&quot;</span> @<span class="attr">keydown.huiche</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">		Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="line"><span class="javascript">		Vue.config.keyCodes.huiche = <span class="number">13</span> <span class="comment">//定义了一个别名按键</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">		<span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">			el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">			data:&#123;</span><br><span class="line"><span class="javascript">				name:<span class="string">&#x27;尚硅谷&#x27;</span></span></span><br><span class="line">			&#125;,</span><br><span class="line">			methods: &#123;</span><br><span class="line"><span class="javascript">				<span class="function"><span class="title">showInfo</span>(<span class="params">e</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">					<span class="comment">// console.log(e.key,e.keyCode)</span></span></span><br><span class="line"><span class="javascript">					<span class="built_in">console</span>.log(e.target.value)</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;,</span><br><span class="line">		&#125;)</span><br><span class="line">	<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="8-计算属性"><a href="#8-计算属性" class="headerlink" title="8.计算属性"></a>8.计算属性</h3><h4 id="8-1插值法"><a href="#8-1插值法" class="headerlink" title="8.1插值法"></a>8.1插值法</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>姓名案例_插值语法实现<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">			姓：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">			名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lastName&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">			全名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;firstName&#125;&#125;-&#123;&#123;lastName&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">		Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">		<span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">			el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">			data:&#123;</span><br><span class="line"><span class="javascript">				firstName:<span class="string">&#x27;张&#x27;</span>,</span></span><br><span class="line"><span class="javascript">				lastName:<span class="string">&#x27;三&#x27;</span></span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;)</span><br><span class="line">	<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="8-2methods"><a href="#8-2methods" class="headerlink" title="8.2methods"></a>8.2methods</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>姓名案例_methods实现<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">			姓：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">			名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lastName&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">			全名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;fullName()&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">		Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">		<span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">			el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">			data:&#123;</span><br><span class="line"><span class="javascript">				firstName:<span class="string">&#x27;张&#x27;</span>,</span></span><br><span class="line"><span class="javascript">				lastName:<span class="string">&#x27;三&#x27;</span></span></span><br><span class="line">			&#125;,</span><br><span class="line">			methods: &#123;</span><br><span class="line"><span class="javascript">				<span class="function"><span class="title">fullName</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">					<span class="built_in">console</span>.log(<span class="string">&#x27;@---fullName&#x27;</span>)</span></span><br><span class="line"><span class="javascript">					<span class="keyword">return</span> <span class="built_in">this</span>.firstName + <span class="string">&#x27;-&#x27;</span> + <span class="built_in">this</span>.lastName</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;,</span><br><span class="line">		&#125;)</span><br><span class="line">	<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="8-3计算属性"><a href="#8-3计算属性" class="headerlink" title="8.3计算属性"></a>8.3计算属性</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>姓名案例_计算属性实现<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">			计算属性：</span></span><br><span class="line"><span class="comment">					1.定义：要用的属性不存在，要通过已有属性计算得来。</span></span><br><span class="line"><span class="comment">					2.原理：底层借助了Objcet.defineproperty方法提供的getter和setter。</span></span><br><span class="line"><span class="comment">					3.get函数什么时候执行？</span></span><br><span class="line"><span class="comment">								(1).初次读取时会执行一次。</span></span><br><span class="line"><span class="comment">								(2).当依赖的数据发生改变时会被再次调用。</span></span><br><span class="line"><span class="comment">					4.优势：与methods实现相比，内部有缓存机制（复用），效率更高，调试方便。</span></span><br><span class="line"><span class="comment">					5.备注：</span></span><br><span class="line"><span class="comment">							1.计算属性最终会出现在vm上，直接读取使用即可。</span></span><br><span class="line"><span class="comment">							2.如果计算属性要被修改，那必须写set函数去响应修改，且set中要引起计算时依赖的数据发生改变。</span></span><br><span class="line"><span class="comment">		 --&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">			姓：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">			名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lastName&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">			测试：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;x&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">			全名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 全名：&lt;span&gt;&#123;&#123;fullName&#125;&#125;&lt;/span&gt; &lt;br/&gt;&lt;br/&gt;</span></span><br><span class="line"><span class="comment">			全名：&lt;span&gt;&#123;&#123;fullName&#125;&#125;&lt;/span&gt; &lt;br/&gt;&lt;br/&gt;</span></span><br><span class="line"><span class="comment">			全名：&lt;span&gt;&#123;&#123;fullName&#125;&#125;&lt;/span&gt; --&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">		Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">		<span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">			el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">			data:&#123;</span><br><span class="line"><span class="javascript">				firstName:<span class="string">&#x27;张&#x27;</span>,</span></span><br><span class="line"><span class="javascript">				lastName:<span class="string">&#x27;三&#x27;</span>,</span></span><br><span class="line"><span class="javascript">				x:<span class="string">&#x27;你好&#x27;</span></span></span><br><span class="line">			&#125;,</span><br><span class="line">			methods: &#123;</span><br><span class="line"><span class="javascript">				<span class="function"><span class="title">demo</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line">					</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;,</span><br><span class="line">			computed:&#123;</span><br><span class="line">				fullName:&#123;</span><br><span class="line"><span class="javascript">					<span class="comment">//get有什么作用？当有人读取fullName时，get就会被调用，且返回值就作为fullName的值</span></span></span><br><span class="line"><span class="javascript">					<span class="comment">//get什么时候调用？1.初次读取fullName时。2.所依赖的数据发生变化时。</span></span></span><br><span class="line"><span class="javascript">					<span class="function"><span class="title">get</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">						<span class="built_in">console</span>.log(<span class="string">&#x27;get被调用了&#x27;</span>)</span></span><br><span class="line"><span class="javascript">						<span class="comment">// console.log(this) //此处的this是vm</span></span></span><br><span class="line"><span class="javascript">						<span class="keyword">return</span> <span class="built_in">this</span>.firstName + <span class="string">&#x27;-&#x27;</span> + <span class="built_in">this</span>.lastName</span></span><br><span class="line">					&#125;,</span><br><span class="line"><span class="javascript">					<span class="comment">//set什么时候调用? 当fullName被修改时。</span></span></span><br><span class="line"><span class="javascript">					<span class="function"><span class="title">set</span>(<span class="params">value</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">						<span class="built_in">console</span>.log(<span class="string">&#x27;set&#x27;</span>,value)</span></span><br><span class="line"><span class="javascript">						<span class="keyword">const</span> arr = value.split(<span class="string">&#x27;-&#x27;</span>)</span></span><br><span class="line"><span class="javascript">						<span class="built_in">this</span>.firstName = arr[<span class="number">0</span>]</span></span><br><span class="line"><span class="javascript">						<span class="built_in">this</span>.lastName = arr[<span class="number">1</span>]</span></span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;)</span><br><span class="line">	<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="8-4计算属性简写"><a href="#8-4计算属性简写" class="headerlink" title="8.4计算属性简写"></a>8.4计算属性简写</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>姓名案例_计算属性实现<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">			姓：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">			名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lastName&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">			全名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">		Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">		<span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">			el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">			data:&#123;</span><br><span class="line"><span class="javascript">				firstName:<span class="string">&#x27;张&#x27;</span>,</span></span><br><span class="line"><span class="javascript">				lastName:<span class="string">&#x27;三&#x27;</span>,</span></span><br><span class="line">			&#125;,</span><br><span class="line">			computed:&#123;</span><br><span class="line"><span class="javascript">				<span class="comment">//完整写法</span></span></span><br><span class="line">				/* fullName:&#123;</span><br><span class="line"><span class="javascript">					<span class="function"><span class="title">get</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">						<span class="built_in">console</span>.log(<span class="string">&#x27;get被调用了&#x27;</span>)</span></span><br><span class="line"><span class="javascript">						<span class="keyword">return</span> <span class="built_in">this</span>.firstName + <span class="string">&#x27;-&#x27;</span> + <span class="built_in">this</span>.lastName</span></span><br><span class="line">					&#125;,</span><br><span class="line"><span class="javascript">					<span class="function"><span class="title">set</span>(<span class="params">value</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">						<span class="built_in">console</span>.log(<span class="string">&#x27;set&#x27;</span>,value)</span></span><br><span class="line"><span class="javascript">						<span class="keyword">const</span> arr = value.split(<span class="string">&#x27;-&#x27;</span>)</span></span><br><span class="line"><span class="javascript">						<span class="built_in">this</span>.firstName = arr[<span class="number">0</span>]</span></span><br><span class="line"><span class="javascript">						<span class="built_in">this</span>.lastName = arr[<span class="number">1</span>]</span></span><br><span class="line">					&#125;</span><br><span class="line">				&#125; */</span><br><span class="line"><span class="javascript">				<span class="comment">//简写 只使用读取 不适用修改的时候 才可以简写</span></span></span><br><span class="line"><span class="javascript">				<span class="function"><span class="title">fullName</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">					<span class="built_in">console</span>.log(<span class="string">&#x27;get被调用了&#x27;</span>)</span></span><br><span class="line"><span class="javascript">					<span class="keyword">return</span> <span class="built_in">this</span>.firstName + <span class="string">&#x27;-&#x27;</span> + <span class="built_in">this</span>.lastName</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;)</span><br><span class="line">	<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="9-监视属性"><a href="#9-监视属性" class="headerlink" title="9.监视属性"></a>9.监视属性</h3><h4 id="9-1普通方法"><a href="#9-1普通方法" class="headerlink" title="9.1普通方法"></a>9.1普通方法</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>天气案例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h2</span>&gt;</span>今天天气很&#123;&#123;info&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 绑定事件的时候：@xxx=&quot;yyy&quot; yyy可以写一些简单的语句 --&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- &lt;button @click=&quot;isHot = !isHot&quot;&gt;切换天气&lt;/button&gt; --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeWeather&quot;</span>&gt;</span>切换天气<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">		Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="line">		</span><br><span class="line"><span class="javascript">		<span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">			el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">			data:&#123;</span><br><span class="line"><span class="javascript">				isHot:<span class="literal">true</span>,</span></span><br><span class="line">			&#125;,</span><br><span class="line">			computed:&#123;</span><br><span class="line"><span class="javascript">				<span class="function"><span class="title">info</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">					<span class="keyword">return</span> <span class="built_in">this</span>.isHot ? <span class="string">&#x27;炎热&#x27;</span> : <span class="string">&#x27;凉爽&#x27;</span></span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;,</span><br><span class="line">			methods: &#123;</span><br><span class="line"><span class="javascript">				<span class="function"><span class="title">changeWeather</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">					<span class="built_in">this</span>.isHot = !<span class="built_in">this</span>.isHot</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;,</span><br><span class="line">		&#125;)</span><br><span class="line">	<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="9-2监视属性"><a href="#9-2监视属性" class="headerlink" title="9.2监视属性"></a>9.2监视属性</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>天气案例_监视属性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">				监视属性watch：</span></span><br><span class="line"><span class="comment">					1.当被监视的属性变化时, 回调函数自动调用, 进行相关操作</span></span><br><span class="line"><span class="comment">					2.监视的属性必须存在，才能进行监视！！</span></span><br><span class="line"><span class="comment">					3.监视的两种写法：</span></span><br><span class="line"><span class="comment">							(1).new Vue时传入watch配置</span></span><br><span class="line"><span class="comment">							(2).通过vm.$watch监视</span></span><br><span class="line"><span class="comment">		 --&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h2</span>&gt;</span>今天天气很&#123;&#123;info&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeWeather&quot;</span>&gt;</span>切换天气<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">		Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="line">		</span><br><span class="line"><span class="javascript">		<span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">			el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">			data:&#123;</span><br><span class="line"><span class="javascript">				isHot:<span class="literal">true</span>,</span></span><br><span class="line">			&#125;,</span><br><span class="line">			computed:&#123;</span><br><span class="line"><span class="javascript">				<span class="function"><span class="title">info</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">					<span class="keyword">return</span> <span class="built_in">this</span>.isHot ? <span class="string">&#x27;炎热&#x27;</span> : <span class="string">&#x27;凉爽&#x27;</span></span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;,</span><br><span class="line">			methods: &#123;</span><br><span class="line"><span class="javascript">				<span class="function"><span class="title">changeWeather</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">					<span class="built_in">this</span>.isHot = !<span class="built_in">this</span>.isHot</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;,</span><br><span class="line">			/* watch:&#123;</span><br><span class="line">				isHot:&#123;</span><br><span class="line"><span class="javascript">					immediate:<span class="literal">true</span>, <span class="comment">//初始化时让handler调用一下</span></span></span><br><span class="line"><span class="javascript">					<span class="comment">//handler什么时候调用？当isHot发生改变时。</span></span></span><br><span class="line"><span class="javascript">					<span class="function"><span class="title">handler</span>(<span class="params">newValue,oldValue</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">						<span class="built_in">console</span>.log(<span class="string">&#x27;isHot被修改了&#x27;</span>,newValue,oldValue)</span></span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125; */</span><br><span class="line">		&#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">		vm.$watch(<span class="string">&#x27;isHot&#x27;</span>,&#123;</span></span><br><span class="line"><span class="javascript">			immediate:<span class="literal">true</span>, <span class="comment">//初始化时让handler调用一下</span></span></span><br><span class="line"><span class="javascript">			<span class="comment">//handler什么时候调用？当isHot发生改变时。</span></span></span><br><span class="line"><span class="javascript">			<span class="function"><span class="title">handler</span>(<span class="params">newValue,oldValue</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">				<span class="built_in">console</span>.log(<span class="string">&#x27;isHot被修改了&#x27;</span>,newValue,oldValue)</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;)</span><br><span class="line">	<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="9-3深度监视"><a href="#9-3深度监视" class="headerlink" title="9.3深度监视"></a>9.3深度监视</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>天气案例_深度监视<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">				深度监视：</span></span><br><span class="line"><span class="comment">						(1).Vue中的watch默认不监测对象内部值的改变（一层）。</span></span><br><span class="line"><span class="comment">						(2).配置deep:true可以监测对象内部值改变（多层）。</span></span><br><span class="line"><span class="comment">				备注：</span></span><br><span class="line"><span class="comment">						(1).Vue自身可以监测对象内部值的改变，但Vue提供的watch默认不可以！</span></span><br><span class="line"><span class="comment">						(2).使用watch时根据数据的具体结构，决定是否采用深度监视。</span></span><br><span class="line"><span class="comment">		 --&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h2</span>&gt;</span>今天天气很&#123;&#123;info&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeWeather&quot;</span>&gt;</span>切换天气<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h3</span>&gt;</span>a的值是:&#123;&#123;numbers.a&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;numbers.a++&quot;</span>&gt;</span>点我让a+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h3</span>&gt;</span>b的值是:&#123;&#123;numbers.b&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;numbers.b++&quot;</span>&gt;</span>点我让b+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;numbers = &#123;a:666,b:888&#125;&quot;</span>&gt;</span>彻底替换掉numbers<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">			&#123;&#123;numbers.c.d.e&#125;&#125;</span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">		Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="line">		</span><br><span class="line"><span class="javascript">		<span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">			el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">			data:&#123;</span><br><span class="line"><span class="javascript">				isHot:<span class="literal">true</span>,</span></span><br><span class="line">				numbers:&#123;</span><br><span class="line">					a:1,</span><br><span class="line">					b:1,</span><br><span class="line">					c:&#123;</span><br><span class="line">						d:&#123;</span><br><span class="line">							e:100</span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;,</span><br><span class="line">			computed:&#123;</span><br><span class="line"><span class="javascript">				<span class="function"><span class="title">info</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">					<span class="keyword">return</span> <span class="built_in">this</span>.isHot ? <span class="string">&#x27;炎热&#x27;</span> : <span class="string">&#x27;凉爽&#x27;</span></span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;,</span><br><span class="line">			methods: &#123;</span><br><span class="line"><span class="javascript">				<span class="function"><span class="title">changeWeather</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">					<span class="built_in">this</span>.isHot = !<span class="built_in">this</span>.isHot</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;,</span><br><span class="line">			watch:&#123;</span><br><span class="line">				isHot:&#123;</span><br><span class="line"><span class="javascript">					<span class="comment">// immediate:true, //初始化时让handler调用一下</span></span></span><br><span class="line"><span class="javascript">					<span class="comment">//handler什么时候调用？当isHot发生改变时。</span></span></span><br><span class="line"><span class="javascript">					<span class="function"><span class="title">handler</span>(<span class="params">newValue,oldValue</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">						<span class="built_in">console</span>.log(<span class="string">&#x27;isHot被修改了&#x27;</span>,newValue,oldValue)</span></span><br><span class="line">					&#125;</span><br><span class="line">				&#125;,</span><br><span class="line"><span class="javascript">				<span class="comment">//监视多级结构中某个属性的变化</span></span></span><br><span class="line"><span class="javascript">				<span class="comment">/* &#x27;numbers.a&#x27;:&#123;</span></span></span><br><span class="line"><span class="javascript">					<span class="function"><span class="title">handler</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">						<span class="built_in">console</span>.log(<span class="string">&#x27;a被改变了&#x27;</span>)</span></span><br><span class="line">					&#125;</span><br><span class="line">				&#125; */</span><br><span class="line"><span class="javascript">				<span class="comment">//监视多级结构中所有属性的变化</span></span></span><br><span class="line">				numbers:&#123;</span><br><span class="line"><span class="javascript">					deep:<span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">					<span class="function"><span class="title">handler</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">						<span class="built_in">console</span>.log(<span class="string">&#x27;numbers改变了&#x27;</span>)</span></span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;)</span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="9-4监视简写"><a href="#9-4监视简写" class="headerlink" title="9.4监视简写"></a>9.4监视简写</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>天气案例_监视属性_简写<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h2</span>&gt;</span>今天天气很&#123;&#123;info&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeWeather&quot;</span>&gt;</span>切换天气<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">		Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="line">		</span><br><span class="line"><span class="javascript">		<span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">			el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">			data:&#123;</span><br><span class="line"><span class="javascript">				isHot:<span class="literal">true</span>,</span></span><br><span class="line">			&#125;,</span><br><span class="line">			computed:&#123;</span><br><span class="line"><span class="javascript">				<span class="function"><span class="title">info</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">					<span class="keyword">return</span> <span class="built_in">this</span>.isHot ? <span class="string">&#x27;炎热&#x27;</span> : <span class="string">&#x27;凉爽&#x27;</span></span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;,</span><br><span class="line">			methods: &#123;</span><br><span class="line"><span class="javascript">				<span class="function"><span class="title">changeWeather</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">					<span class="built_in">this</span>.isHot = !<span class="built_in">this</span>.isHot</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;,</span><br><span class="line">			watch:&#123;</span><br><span class="line"><span class="javascript">				<span class="comment">//正常写法</span></span></span><br><span class="line">				/* isHot:&#123;</span><br><span class="line"><span class="javascript">					<span class="comment">// immediate:true, //初始化时让handler调用一下</span></span></span><br><span class="line"><span class="javascript">					<span class="comment">// deep:true,//深度监视</span></span></span><br><span class="line"><span class="javascript">					<span class="function"><span class="title">handler</span>(<span class="params">newValue,oldValue</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">						<span class="built_in">console</span>.log(<span class="string">&#x27;isHot被修改了&#x27;</span>,newValue,oldValue)</span></span><br><span class="line">					&#125;</span><br><span class="line">				&#125;, */</span><br><span class="line"><span class="javascript">				<span class="comment">//简写</span></span></span><br><span class="line">				/* isHot(newValue,oldValue)&#123;</span><br><span class="line"><span class="javascript">					<span class="built_in">console</span>.log(<span class="string">&#x27;isHot被修改了&#x27;</span>,newValue,oldValue,<span class="built_in">this</span>)</span></span><br><span class="line">				&#125; */</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">		<span class="comment">//正常写法</span></span></span><br><span class="line">		/* vm.$watch(&#x27;isHot&#x27;,&#123;</span><br><span class="line"><span class="javascript">			immediate:<span class="literal">true</span>, <span class="comment">//初始化时让handler调用一下</span></span></span><br><span class="line"><span class="javascript">			deep:<span class="literal">true</span>,<span class="comment">//深度监视</span></span></span><br><span class="line"><span class="javascript">			<span class="function"><span class="title">handler</span>(<span class="params">newValue,oldValue</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">				<span class="built_in">console</span>.log(<span class="string">&#x27;isHot被修改了&#x27;</span>,newValue,oldValue)</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;) */</span><br><span class="line"></span><br><span class="line"><span class="javascript">		<span class="comment">//简写</span></span></span><br><span class="line">		/* vm.$watch(&#x27;isHot&#x27;,(newValue,oldValue)=&gt;&#123;</span><br><span class="line"><span class="javascript">			<span class="built_in">console</span>.log(<span class="string">&#x27;isHot被修改了&#x27;</span>,newValue,oldValue,<span class="built_in">this</span>)</span></span><br><span class="line">		&#125;) */</span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="9-5姓名案例-watch实现"><a href="#9-5姓名案例-watch实现" class="headerlink" title="9.5姓名案例_watch实现"></a>9.5姓名案例_watch实现</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>姓名案例_watch实现<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">				computed和watch之间的区别：</span></span><br><span class="line"><span class="comment">						1.computed能完成的功能，watch都可以完成。</span></span><br><span class="line"><span class="comment">						2.watch能完成的功能，computed不一定能完成，例如：watch可以进行异步操作。</span></span><br><span class="line"><span class="comment">				两个重要的小原则：</span></span><br><span class="line"><span class="comment">							1.所被Vue管理的函数，最好写成普通函数，这样this的指向才是vm 或 组件实例对象。</span></span><br><span class="line"><span class="comment">							2.所有不被Vue所管理的函数（定时器的回调函数、ajax的回调函数等、Promise的回调函数），最好写成箭头函数，</span></span><br><span class="line"><span class="comment">								这样this的指向才是vm 或 组件实例对象。</span></span><br><span class="line"><span class="comment">		--&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">			姓：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">			名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lastName&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">			全名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">		Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">		<span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">			el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">			data:&#123;</span><br><span class="line"><span class="javascript">				firstName:<span class="string">&#x27;张&#x27;</span>,</span></span><br><span class="line"><span class="javascript">				lastName:<span class="string">&#x27;三&#x27;</span>,</span></span><br><span class="line"><span class="javascript">				fullName:<span class="string">&#x27;张-三&#x27;</span></span></span><br><span class="line">			&#125;,</span><br><span class="line">			watch:&#123;</span><br><span class="line"><span class="javascript">				<span class="function"><span class="title">firstName</span>(<span class="params">val</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">					<span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">						<span class="built_in">console</span>.log(<span class="built_in">this</span>)</span></span><br><span class="line"><span class="javascript">						<span class="built_in">this</span>.fullName = val + <span class="string">&#x27;-&#x27;</span> + <span class="built_in">this</span>.lastName</span></span><br><span class="line">					&#125;,1000);</span><br><span class="line">				&#125;,</span><br><span class="line"><span class="javascript">				<span class="function"><span class="title">lastName</span>(<span class="params">val</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">					<span class="built_in">this</span>.fullName = <span class="built_in">this</span>.firstName + <span class="string">&#x27;-&#x27;</span> + val</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;)</span><br><span class="line">	<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="10-绑定样式"><a href="#10-绑定样式" class="headerlink" title="10.绑定样式"></a>10.绑定样式</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>绑定样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">			.basic&#123;</span><br><span class="line"><span class="css">				<span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			.happy&#123;</span><br><span class="line"><span class="css">				<span class="attribute">border</span>: <span class="number">4px</span> solid red;;</span></span><br><span class="line"><span class="css">				<span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>, <span class="number">0.644</span>);</span></span><br><span class="line"><span class="css">				<span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">30deg</span>,yellow,pink,orange,yellow);</span></span><br><span class="line">			&#125;</span><br><span class="line">			.sad&#123;</span><br><span class="line"><span class="css">				<span class="attribute">border</span>: <span class="number">4px</span> dashed <span class="built_in">rgb</span>(<span class="number">2</span>, <span class="number">197</span>, <span class="number">2</span>);</span></span><br><span class="line"><span class="css">				<span class="attribute">background-color</span>: gray;</span></span><br><span class="line">			&#125;</span><br><span class="line">			.normal&#123;</span><br><span class="line"><span class="css">				<span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			.atguigu1&#123;</span><br><span class="line"><span class="css">				<span class="attribute">background-color</span>: yellowgreen;</span></span><br><span class="line">			&#125;</span><br><span class="line">			.atguigu2&#123;</span><br><span class="line"><span class="css">				<span class="attribute">font-size</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="css">				<span class="attribute">text-shadow</span>:<span class="number">2px</span> <span class="number">2px</span> <span class="number">10px</span> red;</span></span><br><span class="line">			&#125;</span><br><span class="line">			.atguigu3&#123;</span><br><span class="line"><span class="css">				<span class="attribute">border-radius</span>: <span class="number">20px</span>;</span></span><br><span class="line">			&#125;</span><br><span class="line">		<span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">			绑定样式：</span></span><br><span class="line"><span class="comment">					1. class样式</span></span><br><span class="line"><span class="comment">								写法:class=&quot;xxx&quot; xxx可以是字符串、对象、数组。</span></span><br><span class="line"><span class="comment">										字符串写法适用于：类名不确定，要动态获取。</span></span><br><span class="line"><span class="comment">										对象写法适用于：要绑定多个样式，个数不确定，名字也不确定。</span></span><br><span class="line"><span class="comment">										数组写法适用于：要绑定多个样式，个数确定，名字也确定，但不确定用不用。</span></span><br><span class="line"><span class="comment">					2. style样式</span></span><br><span class="line"><span class="comment">								:style=&quot;&#123;fontSize: xxx&#125;&quot;其中xxx是动态值。</span></span><br><span class="line"><span class="comment">								:style=&quot;[a,b]&quot;其中a、b是样式对象。</span></span><br><span class="line"><span class="comment">		--&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 绑定class样式--字符串写法，适用于：样式的类名不确定，需要动态指定 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;mood&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;changeMood&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="comment">&lt;!-- 绑定class样式--数组写法，适用于：要绑定的样式个数不确定、名字也不确定 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;classArr&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="comment">&lt;!-- 绑定class样式--对象写法，适用于：要绑定的样式个数确定、名字也确定，但要动态决定用不用 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;classObj&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="comment">&lt;!-- 绑定style样式--对象写法 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;styleObj&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 绑定style样式--数组写法 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;styleArr&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">		Vue.config.productionTip = <span class="literal">false</span></span></span><br><span class="line">		</span><br><span class="line"><span class="javascript">		<span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">			el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">			data:&#123;</span><br><span class="line"><span class="javascript">				name:<span class="string">&#x27;尚硅谷&#x27;</span>,</span></span><br><span class="line"><span class="javascript">				mood:<span class="string">&#x27;normal&#x27;</span>,</span></span><br><span class="line"><span class="javascript">				classArr:[<span class="string">&#x27;atguigu1&#x27;</span>,<span class="string">&#x27;atguigu2&#x27;</span>,<span class="string">&#x27;atguigu3&#x27;</span>],</span></span><br><span class="line">				classObj:&#123;</span><br><span class="line"><span class="javascript">					atguigu1:<span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">					atguigu2:<span class="literal">false</span>,</span></span><br><span class="line">				&#125;,</span><br><span class="line">				styleObj:&#123;</span><br><span class="line"><span class="javascript">					fontSize: <span class="string">&#x27;40px&#x27;</span>,</span></span><br><span class="line"><span class="javascript">					color:<span class="string">&#x27;red&#x27;</span>,</span></span><br><span class="line">				&#125;,</span><br><span class="line">				styleObj2:&#123;</span><br><span class="line"><span class="javascript">					backgroundColor:<span class="string">&#x27;orange&#x27;</span></span></span><br><span class="line">				&#125;,</span><br><span class="line">				styleArr:[</span><br><span class="line">					&#123;</span><br><span class="line"><span class="javascript">						fontSize: <span class="string">&#x27;40px&#x27;</span>,</span></span><br><span class="line"><span class="javascript">						color:<span class="string">&#x27;blue&#x27;</span>,</span></span><br><span class="line">					&#125;,</span><br><span class="line">					&#123;</span><br><span class="line"><span class="javascript">						backgroundColor:<span class="string">&#x27;gray&#x27;</span></span></span><br><span class="line">					&#125;</span><br><span class="line">				]</span><br><span class="line">			&#125;,</span><br><span class="line">			methods: &#123;</span><br><span class="line"><span class="javascript">				<span class="function"><span class="title">changeMood</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">					<span class="keyword">const</span> arr = [<span class="string">&#x27;happy&#x27;</span>,<span class="string">&#x27;sad&#x27;</span>,<span class="string">&#x27;normal&#x27;</span>]</span></span><br><span class="line"><span class="javascript">					<span class="keyword">const</span> index = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">3</span>)</span></span><br><span class="line"><span class="javascript">					<span class="built_in">this</span>.mood = arr[index]</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;,</span><br><span class="line">		&#125;)</span><br><span class="line">	<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	</span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="11-条件渲染"><a href="#11-条件渲染" class="headerlink" title="11.条件渲染"></a>11.条件渲染</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>条件渲染<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">				条件渲染：</span></span><br><span class="line"><span class="comment">							1.v-if</span></span><br><span class="line"><span class="comment">										写法：</span></span><br><span class="line"><span class="comment">												(1).v-if=&quot;表达式&quot; </span></span><br><span class="line"><span class="comment">												(2).v-else-if=&quot;表达式&quot;</span></span><br><span class="line"><span class="comment">												(3).v-else=&quot;表达式&quot;</span></span><br><span class="line"><span class="comment">										适用于：切换频率较低的场景。</span></span><br><span class="line"><span class="comment">										特点：不展示的DOM元素直接被移除。</span></span><br><span class="line"><span class="comment">										注意：v-if可以和:v-else-if、v-else一起使用，但要求结构不能被“打断”。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">							2.v-show</span></span><br><span class="line"><span class="comment">										写法：v-show=&quot;表达式&quot;</span></span><br><span class="line"><span class="comment">										适用于：切换频率较高的场景。</span></span><br><span class="line"><span class="comment">										特点：不展示的DOM元素未被移除，仅仅是使用样式隐藏掉</span></span><br><span class="line"><span class="comment">								</span></span><br><span class="line"><span class="comment">							3.备注：使用v-if的时，元素可能无法获取到，而使用v-show一定可以获取到。</span></span><br><span class="line"><span class="comment">		 --&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h2</span>&gt;</span>当前的n值是:&#123;&#123;n&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 使用v-show做条件渲染 --&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- &lt;h2 v-show=&quot;false&quot;&gt;欢迎来到&#123;&#123;name&#125;&#125;&lt;/h2&gt; --&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- &lt;h2 v-show=&quot;1 === 1&quot;&gt;欢迎来到&#123;&#123;name&#125;&#125;&lt;/h2&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="comment">&lt;!-- 使用v-if做条件渲染 --&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- &lt;h2 v-if=&quot;false&quot;&gt;欢迎来到&#123;&#123;name&#125;&#125;&lt;/h2&gt; --&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- &lt;h2 v-if=&quot;1 === 1&quot;&gt;欢迎来到&#123;&#123;name&#125;&#125;&lt;/h2&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="comment">&lt;!-- v-else和v-else-if --&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- &lt;div v-if=&quot;n === 1&quot;&gt;Angular&lt;/div&gt;</span></span><br><span class="line"><span class="comment">			&lt;div v-else-if=&quot;n === 2&quot;&gt;React&lt;/div&gt;</span></span><br><span class="line"><span class="comment">			&lt;div v-else-if=&quot;n === 3&quot;&gt;Vue&lt;/div&gt;</span></span><br><span class="line"><span class="comment">			&lt;div v-else&gt;哈哈&lt;/div&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="comment">&lt;!-- v-if与template的配合使用 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">template</span> <span class="attr">v-if</span>=<span class="string">&quot;n === 1&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">h2</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">h2</span>&gt;</span>尚硅谷<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">h2</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">		Vue.config.productionTip = <span class="literal">false</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">		<span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">			el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">			data:&#123;</span><br><span class="line"><span class="javascript">				name:<span class="string">&#x27;尚硅谷&#x27;</span>,</span></span><br><span class="line">				n:0</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;)</span><br><span class="line">	<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="12-列表渲染"><a href="#12-列表渲染" class="headerlink" title="12.列表渲染"></a>12.列表渲染</h3><h4 id="12-1基本列表v-for"><a href="#12-1基本列表v-for" class="headerlink" title="12.1基本列表v-for"></a>12.1基本列表v-for</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>基本列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">				v-for指令:</span></span><br><span class="line"><span class="comment">						1.用于展示列表数据</span></span><br><span class="line"><span class="comment">						2.语法：v-for=&quot;(item, index) in xxx&quot; :key=&quot;yyy&quot;</span></span><br><span class="line"><span class="comment">						3.可遍历：数组、对象、字符串（用的很少）、指定次数（用的很少）</span></span><br><span class="line"><span class="comment">		--&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 遍历数组 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h2</span>&gt;</span>人员列表（遍历数组）<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(p,index) of persons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">					&#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;</span><br><span class="line">				<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="comment">&lt;!-- 遍历对象 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h2</span>&gt;</span>汽车信息（遍历对象）<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(value,k) of car&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;k&quot;</span>&gt;</span></span><br><span class="line">					&#123;&#123;k&#125;&#125;-&#123;&#123;value&#125;&#125;</span><br><span class="line">				<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="comment">&lt;!-- 遍历字符串 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h2</span>&gt;</span>测试遍历字符串（用得少）<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(char,index) of str&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">					&#123;&#123;char&#125;&#125;-&#123;&#123;index&#125;&#125;</span><br><span class="line">				<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">			</span><br><span class="line">			<span class="comment">&lt;!-- 遍历指定次数 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h2</span>&gt;</span>测试遍历指定次数（用得少）<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(number,index) of 5&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">					&#123;&#123;index&#125;&#125;-&#123;&#123;number&#125;&#125;</span><br><span class="line">				<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">			Vue.config.productionTip = <span class="literal">false</span></span></span><br><span class="line">			</span><br><span class="line"><span class="javascript">			<span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">				el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">				data:&#123;</span><br><span class="line">					persons:[</span><br><span class="line"><span class="javascript">						&#123;<span class="attr">id</span>:<span class="string">&#x27;001&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;张三&#x27;</span>,<span class="attr">age</span>:<span class="number">18</span>&#125;,</span></span><br><span class="line"><span class="javascript">						&#123;<span class="attr">id</span>:<span class="string">&#x27;002&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;李四&#x27;</span>,<span class="attr">age</span>:<span class="number">19</span>&#125;,</span></span><br><span class="line"><span class="javascript">						&#123;<span class="attr">id</span>:<span class="string">&#x27;003&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;王五&#x27;</span>,<span class="attr">age</span>:<span class="number">20</span>&#125;</span></span><br><span class="line">					],</span><br><span class="line">					car:&#123;</span><br><span class="line"><span class="javascript">						name:<span class="string">&#x27;奥迪A8&#x27;</span>,</span></span><br><span class="line"><span class="javascript">						price:<span class="string">&#x27;70万&#x27;</span>,</span></span><br><span class="line"><span class="javascript">						color:<span class="string">&#x27;黑色&#x27;</span></span></span><br><span class="line">					&#125;,</span><br><span class="line"><span class="javascript">					str:<span class="string">&#x27;hello&#x27;</span></span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;)</span><br><span class="line">		<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="12-2key的原理"><a href="#12-2key的原理" class="headerlink" title="12.2key的原理"></a>12.2key的原理</h4><p>shift() 方法用于把数组的第一个元素从其中删除，并返回第一个元素的值。</p>
<p>unshift() 方法可向数组的开头添加一个或更多元素，并返回新的长度。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>key的原理<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">				面试题：react、vue中的key有什么作用？（key的内部原理）</span></span><br><span class="line"><span class="comment">						</span></span><br><span class="line"><span class="comment">						1. 虚拟DOM中key的作用：</span></span><br><span class="line"><span class="comment">										key是虚拟DOM对象的标识，当数据发生变化时，Vue会根据【新数据】生成【新的虚拟DOM】, </span></span><br><span class="line"><span class="comment">										随后Vue进行【新虚拟DOM】与【旧虚拟DOM】的差异比较，比较规则如下：</span></span><br><span class="line"><span class="comment">										</span></span><br><span class="line"><span class="comment">						2.对比规则：</span></span><br><span class="line"><span class="comment">									(1).旧虚拟DOM中找到了与新虚拟DOM相同的key：</span></span><br><span class="line"><span class="comment">												①.若虚拟DOM中内容没变, 直接使用之前的真实DOM！</span></span><br><span class="line"><span class="comment">												②.若虚拟DOM中内容变了, 则生成新的真实DOM，随后替换掉页面中之前的真实DOM。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">									(2).旧虚拟DOM中未找到与新虚拟DOM相同的key</span></span><br><span class="line"><span class="comment">												创建新的真实DOM，随后渲染到到页面。</span></span><br><span class="line"><span class="comment">												</span></span><br><span class="line"><span class="comment">						3. 用index作为key可能会引发的问题：</span></span><br><span class="line"><span class="comment">											1. 若对数据进行：逆序添加、逆序删除等破坏顺序操作:</span></span><br><span class="line"><span class="comment">															会产生没有必要的真实DOM更新 ==&gt; 界面效果没问题, 但效率低。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">											2. 如果结构中还包含输入类的DOM：</span></span><br><span class="line"><span class="comment">															会产生错误DOM更新 ==&gt; 界面有问题。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">						4. 开发中如何选择key?:</span></span><br><span class="line"><span class="comment">											1.最好使用每条数据的唯一标识作为key, 比如id、手机号、身份证号、学号等唯一值。</span></span><br><span class="line"><span class="comment">											2.如果不存在对数据的逆序添加、逆序删除等破坏顺序操作，仅用于渲染列表用于展示，</span></span><br><span class="line"><span class="comment">												使用index作为key是没有问题的。</span></span><br><span class="line"><span class="comment">		--&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 遍历数组 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h2</span>&gt;</span>人员列表（遍历数组）<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.once</span>=<span class="string">&quot;add&quot;</span>&gt;</span>添加一个老刘<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(p,index) of persons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">					&#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;</span><br><span class="line">					<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">			Vue.config.productionTip = <span class="literal">false</span></span></span><br><span class="line">			</span><br><span class="line"><span class="javascript">			<span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">				el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">				data:&#123;</span><br><span class="line">					persons:[</span><br><span class="line"><span class="javascript">						&#123;<span class="attr">id</span>:<span class="string">&#x27;001&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;张三&#x27;</span>,<span class="attr">age</span>:<span class="number">18</span>&#125;,</span></span><br><span class="line"><span class="javascript">						&#123;<span class="attr">id</span>:<span class="string">&#x27;002&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;李四&#x27;</span>,<span class="attr">age</span>:<span class="number">19</span>&#125;,</span></span><br><span class="line"><span class="javascript">						&#123;<span class="attr">id</span>:<span class="string">&#x27;003&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;王五&#x27;</span>,<span class="attr">age</span>:<span class="number">20</span>&#125;</span></span><br><span class="line">					]</span><br><span class="line">				&#125;,</span><br><span class="line">				methods: &#123;</span><br><span class="line"><span class="javascript">					<span class="function"><span class="title">add</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">						<span class="keyword">const</span> p = &#123;<span class="attr">id</span>:<span class="string">&#x27;004&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;老刘&#x27;</span>,<span class="attr">age</span>:<span class="number">40</span>&#125;</span></span><br><span class="line"><span class="javascript">						<span class="built_in">this</span>.persons.unshift(p)</span></span><br><span class="line">					&#125;</span><br><span class="line">				&#125;,</span><br><span class="line">			&#125;)</span><br><span class="line">		<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="12-3列表过滤"><a href="#12-3列表过滤" class="headerlink" title="12.3列表过滤"></a>12.3列表过滤</h4><p>当computed和watch都可实现的时候优先使用computed</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>列表过滤<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h2</span>&gt;</span>人员列表<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入名字&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;keyWord&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(p,index) of filPerons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">					&#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;-&#123;&#123;p.sex&#125;&#125;</span><br><span class="line">				<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">			Vue.config.productionTip = <span class="literal">false</span></span></span><br><span class="line">			</span><br><span class="line"><span class="javascript">			<span class="comment">//用watch实现</span></span></span><br><span class="line"><span class="javascript">			<span class="comment">//#region </span></span></span><br><span class="line">			/* new Vue(&#123;</span><br><span class="line"><span class="javascript">				el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">				data:&#123;</span><br><span class="line"><span class="javascript">					keyWord:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line">					persons:[</span><br><span class="line"><span class="javascript">						&#123;<span class="attr">id</span>:<span class="string">&#x27;001&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;马冬梅&#x27;</span>,<span class="attr">age</span>:<span class="number">19</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">						&#123;<span class="attr">id</span>:<span class="string">&#x27;002&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周冬雨&#x27;</span>,<span class="attr">age</span>:<span class="number">20</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">						&#123;<span class="attr">id</span>:<span class="string">&#x27;003&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周杰伦&#x27;</span>,<span class="attr">age</span>:<span class="number">21</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">						&#123;<span class="attr">id</span>:<span class="string">&#x27;004&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;温兆伦&#x27;</span>,<span class="attr">age</span>:<span class="number">22</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;</span></span><br><span class="line">					],</span><br><span class="line">					filPerons:[]</span><br><span class="line">				&#125;,</span><br><span class="line">				watch:&#123;</span><br><span class="line">					keyWord:&#123;</span><br><span class="line"><span class="javascript">						immediate:<span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">						<span class="function"><span class="title">handler</span>(<span class="params">val</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">							<span class="built_in">this</span>.filPerons = <span class="built_in">this</span>.persons.filter(<span class="function">(<span class="params">p</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">								<span class="keyword">return</span> p.name.indexOf(val) !== -<span class="number">1</span></span></span><br><span class="line">							&#125;)</span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;) */</span><br><span class="line"><span class="javascript">			<span class="comment">//#endregion</span></span></span><br><span class="line">			</span><br><span class="line"><span class="javascript">			<span class="comment">//用computed实现</span></span></span><br><span class="line"><span class="javascript">			<span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">				el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">				data:&#123;</span><br><span class="line"><span class="javascript">					keyWord:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line">					persons:[</span><br><span class="line"><span class="javascript">						&#123;<span class="attr">id</span>:<span class="string">&#x27;001&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;马冬梅&#x27;</span>,<span class="attr">age</span>:<span class="number">19</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">						&#123;<span class="attr">id</span>:<span class="string">&#x27;002&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周冬雨&#x27;</span>,<span class="attr">age</span>:<span class="number">20</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">						&#123;<span class="attr">id</span>:<span class="string">&#x27;003&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周杰伦&#x27;</span>,<span class="attr">age</span>:<span class="number">21</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">						&#123;<span class="attr">id</span>:<span class="string">&#x27;004&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;温兆伦&#x27;</span>,<span class="attr">age</span>:<span class="number">22</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;</span></span><br><span class="line">					]</span><br><span class="line">				&#125;,</span><br><span class="line">				computed:&#123;</span><br><span class="line"><span class="javascript">					<span class="function"><span class="title">filPerons</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">						<span class="keyword">return</span> <span class="built_in">this</span>.persons.filter(<span class="function">(<span class="params">p</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">							<span class="keyword">return</span> p.name.indexOf(<span class="built_in">this</span>.keyWord) !== -<span class="number">1</span></span></span><br><span class="line">						&#125;)</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;) </span><br><span class="line">		<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="12-4列表排序"><a href="#12-4列表排序" class="headerlink" title="12.4列表排序"></a>12.4列表排序</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>列表排序<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h2</span>&gt;</span>人员列表<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入名字&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;keyWord&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sortType = 2&quot;</span>&gt;</span>年龄升序<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sortType = 1&quot;</span>&gt;</span>年龄降序<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sortType = 0&quot;</span>&gt;</span>原顺序<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(p,index) of filPerons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;p.id&quot;</span>&gt;</span></span><br><span class="line">					&#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;-&#123;&#123;p.sex&#125;&#125;</span><br><span class="line">					<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">			Vue.config.productionTip = <span class="literal">false</span></span></span><br><span class="line">			</span><br><span class="line"><span class="javascript">			<span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">				el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">				data:&#123;</span><br><span class="line"><span class="javascript">					keyWord:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">					sortType:<span class="number">0</span>, <span class="comment">//0原顺序 1降序 2升序</span></span></span><br><span class="line">					persons:[</span><br><span class="line"><span class="javascript">						&#123;<span class="attr">id</span>:<span class="string">&#x27;001&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;马冬梅&#x27;</span>,<span class="attr">age</span>:<span class="number">30</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">						&#123;<span class="attr">id</span>:<span class="string">&#x27;002&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周冬雨&#x27;</span>,<span class="attr">age</span>:<span class="number">31</span>,<span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">						&#123;<span class="attr">id</span>:<span class="string">&#x27;003&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;周杰伦&#x27;</span>,<span class="attr">age</span>:<span class="number">18</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">						&#123;<span class="attr">id</span>:<span class="string">&#x27;004&#x27;</span>,<span class="attr">name</span>:<span class="string">&#x27;温兆伦&#x27;</span>,<span class="attr">age</span>:<span class="number">19</span>,<span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>&#125;</span></span><br><span class="line">					]</span><br><span class="line">				&#125;,</span><br><span class="line">				computed:&#123;</span><br><span class="line"><span class="javascript">					<span class="function"><span class="title">filPerons</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">						<span class="keyword">const</span> arr = <span class="built_in">this</span>.persons.filter(<span class="function">(<span class="params">p</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">							<span class="keyword">return</span> p.name.indexOf(<span class="built_in">this</span>.keyWord) !== -<span class="number">1</span></span></span><br><span class="line">						&#125;)</span><br><span class="line"><span class="javascript">						<span class="comment">//判断一下是否需要排序 如果是0 则为false</span></span></span><br><span class="line"><span class="javascript">						<span class="keyword">if</span>(<span class="built_in">this</span>.sortType)&#123;</span></span><br><span class="line"><span class="javascript">							arr.sort(<span class="function">(<span class="params">p1,p2</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">								<span class="keyword">return</span> <span class="built_in">this</span>.sortType === <span class="number">1</span> ? p2.age-p1.age : p1.age-p2.age</span></span><br><span class="line">							&#125;)</span><br><span class="line">						&#125;</span><br><span class="line"><span class="javascript">						<span class="keyword">return</span> arr</span></span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;) </span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="12-5数据检测"><a href="#12-5数据检测" class="headerlink" title="12.5数据检测"></a>12.5数据检测</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>总结数据监视<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">			<span class="selector-tag">button</span>&#123;</span></span><br><span class="line"><span class="css">				<span class="attribute">margin-top</span>: <span class="number">10px</span>;</span></span><br><span class="line">			&#125;</span><br><span class="line">		<span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">			Vue监视数据的原理：</span></span><br><span class="line"><span class="comment">				1. vue会监视data中所有层次的数据。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">				2. 如何监测对象中的数据？</span></span><br><span class="line"><span class="comment">								通过setter实现监视，且要在new Vue时就传入要监测的数据。</span></span><br><span class="line"><span class="comment">									(1).对象中后追加的属性，Vue默认不做响应式处理</span></span><br><span class="line"><span class="comment">									(2).如需给后添加的属性做响应式，请使用如下API：</span></span><br><span class="line"><span class="comment">													Vue.set(target，propertyName/index，value) 或 </span></span><br><span class="line"><span class="comment">													vm.$set(target，propertyName/index，value)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">				3. 如何监测数组中的数据？</span></span><br><span class="line"><span class="comment">									通过包裹数组更新元素的方法实现，本质就是做了两件事：</span></span><br><span class="line"><span class="comment">										(1).调用原生对应的方法对数组进行更新。</span></span><br><span class="line"><span class="comment">										(2).重新解析模板，进而更新页面。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">				4.在Vue修改数组中的某个元素一定要用如下方法：</span></span><br><span class="line"><span class="comment">							1.使用这些API:push()、pop()、shift()、unshift()、splice()、sort()、reverse()</span></span><br><span class="line"><span class="comment">							2.Vue.set() 或 vm.$set()</span></span><br><span class="line"><span class="comment">				</span></span><br><span class="line"><span class="comment">				特别注意：Vue.set() 和 vm.$set() 不能给vm 或 vm的根数据对象 添加属性！！！</span></span><br><span class="line"><span class="comment">		--&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h1</span>&gt;</span>学生信息<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;student.age++&quot;</span>&gt;</span>年龄+1岁<span class="tag">&lt;/<span class="name">button</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addSex&quot;</span>&gt;</span>添加性别属性，默认值：男<span class="tag">&lt;/<span class="name">button</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;student.sex = &#x27;未知&#x27; &quot;</span>&gt;</span>修改性别<span class="tag">&lt;/<span class="name">button</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addFriend&quot;</span>&gt;</span>在列表首位添加一个朋友<span class="tag">&lt;/<span class="name">button</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;updateFirstFriendName&quot;</span>&gt;</span>修改第一个朋友的名字为：张三<span class="tag">&lt;/<span class="name">button</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addHobby&quot;</span>&gt;</span>添加一个爱好<span class="tag">&lt;/<span class="name">button</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;updateHobby&quot;</span>&gt;</span>修改第一个爱好为：开车<span class="tag">&lt;/<span class="name">button</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;removeSmoke&quot;</span>&gt;</span>过滤掉爱好中的抽烟<span class="tag">&lt;/<span class="name">button</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h3</span>&gt;</span>姓名：&#123;&#123;student.name&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h3</span>&gt;</span>年龄：&#123;&#123;student.age&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h3</span> <span class="attr">v-if</span>=<span class="string">&quot;student.sex&quot;</span>&gt;</span>性别：&#123;&#123;student.sex&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h3</span>&gt;</span>爱好：<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(h,index) in student.hobby&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">					&#123;&#123;h&#125;&#125;</span><br><span class="line">				<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h3</span>&gt;</span>朋友们：<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(f,index) in student.friends&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">					&#123;&#123;f.name&#125;&#125;--&#123;&#123;f.age&#125;&#125;</span><br><span class="line">				<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">		Vue.config.productionTip = <span class="literal">false</span> <span class="comment">//阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">		<span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">			el:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line">			data:&#123;</span><br><span class="line">				student:&#123;</span><br><span class="line"><span class="javascript">					name:<span class="string">&#x27;tom&#x27;</span>,</span></span><br><span class="line">					age:18,</span><br><span class="line"><span class="javascript">					hobby:[<span class="string">&#x27;抽烟&#x27;</span>,<span class="string">&#x27;喝酒&#x27;</span>,<span class="string">&#x27;烫头&#x27;</span>],</span></span><br><span class="line">					friends:[</span><br><span class="line"><span class="javascript">						&#123;<span class="attr">name</span>:<span class="string">&#x27;jerry&#x27;</span>,<span class="attr">age</span>:<span class="number">35</span>&#125;,</span></span><br><span class="line"><span class="javascript">						&#123;<span class="attr">name</span>:<span class="string">&#x27;tony&#x27;</span>,<span class="attr">age</span>:<span class="number">36</span>&#125;</span></span><br><span class="line">					]</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;,</span><br><span class="line">			methods: &#123;</span><br><span class="line"><span class="javascript">				<span class="function"><span class="title">addSex</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">					<span class="comment">// Vue.set(this.student,&#x27;sex&#x27;,&#x27;男&#x27;)</span></span></span><br><span class="line"><span class="javascript">					<span class="built_in">this</span>.$set(<span class="built_in">this</span>.student,<span class="string">&#x27;sex&#x27;</span>,<span class="string">&#x27;男&#x27;</span>)</span></span><br><span class="line">				&#125;,</span><br><span class="line"><span class="javascript">				<span class="function"><span class="title">addFriend</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">					<span class="built_in">this</span>.student.friends.unshift(&#123;<span class="attr">name</span>:<span class="string">&#x27;jack&#x27;</span>,<span class="attr">age</span>:<span class="number">70</span>&#125;)</span></span><br><span class="line">				&#125;,</span><br><span class="line"><span class="javascript">				<span class="function"><span class="title">updateFirstFriendName</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">					<span class="built_in">this</span>.student.friends[<span class="number">0</span>].name = <span class="string">&#x27;张三&#x27;</span></span></span><br><span class="line">				&#125;,</span><br><span class="line"><span class="javascript">				<span class="function"><span class="title">addHobby</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">					<span class="built_in">this</span>.student.hobby.push(<span class="string">&#x27;学习&#x27;</span>)</span></span><br><span class="line">				&#125;,</span><br><span class="line"><span class="javascript">				<span class="function"><span class="title">updateHobby</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">					<span class="comment">// this.student.hobby.splice(0,1,&#x27;开车&#x27;)</span></span></span><br><span class="line"><span class="javascript">					<span class="comment">// Vue.set(this.student.hobby,0,&#x27;开车&#x27;)</span></span></span><br><span class="line"><span class="javascript">					<span class="built_in">this</span>.$set(<span class="built_in">this</span>.student.hobby,<span class="number">0</span>,<span class="string">&#x27;开车&#x27;</span>)</span></span><br><span class="line">				&#125;,</span><br><span class="line"><span class="javascript">				<span class="function"><span class="title">removeSmoke</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">					<span class="built_in">this</span>.student.hobby = <span class="built_in">this</span>.student.hobby.filter(<span class="function">(<span class="params">h</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">						<span class="keyword">return</span> h !== <span class="string">&#x27;抽烟&#x27;</span></span></span><br><span class="line">					&#125;)</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;)</span><br><span class="line">	<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="13-收集表单·"><a href="#13-收集表单·" class="headerlink" title="13.收集表单·"></a>13.收集表单·</h3>]]></content>
      <categories>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>Git</title>
    <url>/2021/09/02/Git/</url>
    <content><![CDATA[<h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><ol>
<li>查看所有的分支</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git branch -a</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>查看当前状态 </li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>切换到本地dev分支</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout dev</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>切换到远程dev分支</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout --track origin&#x2F;dev</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>编程疑惑</title>
    <url>/2021/10/09/%E7%BC%96%E7%A8%8B%E7%96%91%E6%83%91/</url>
    <content><![CDATA[<h1 id="编程疑惑"><a href="#编程疑惑" class="headerlink" title="编程疑惑"></a>编程疑惑</h1><h2 id="1-mybatis中的-为什么能防止sql注入，-不能防止sql注入"><a href="#1-mybatis中的-为什么能防止sql注入，-不能防止sql注入" class="headerlink" title="1.mybatis中的#{} 为什么能防止sql注入，${}不能防止sql注入"></a>1.mybatis中的#{} 为什么能防止sql注入，${}不能防止sql注入</h2><h3 id="1-1sql注入"><a href="#1-1sql注入" class="headerlink" title="1.1sql注入"></a>1.1sql注入</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--正常登录语句</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">WHERE</span> userName <span class="operator">=</span> admin <span class="keyword">and</span> password <span class="operator">=</span> <span class="number">111</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--sql注入  #在sql语句中是注释导致无论密码错对都可以登录成功</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">WHERE</span> userName <span class="operator">=</span> admin <span class="keyword">or</span> <span class="number">1</span> <span class="operator">=</span> <span class="number">1</span> # <span class="keyword">and</span> password <span class="operator">=</span> <span class="number">111</span></span><br></pre></td></tr></table></figure>

<h3 id="1-2原因"><a href="#1-2原因" class="headerlink" title="1.2原因"></a>1.2原因</h3><p>#{}在mybatis中的底层是运用了PreparedStatement 预编译，传入的参数会以 ? 形式显示，因为sql的输入只有在sql编译的时候起作用，当sql预编译完后，传入的参数就仅仅是参数，不会参与sql语句的生成，而${}则没有使用预编译，传入的参数直接和sql进行拼接，由此会产生sql注入的漏洞</p>
<h2 id="2-mysql分组查询每组最新的一条数据"><a href="#2-mysql分组查询每组最新的一条数据" class="headerlink" title="2.mysql分组查询每组最新的一条数据"></a>2.mysql分组查询每组最新的一条数据</h2><p>mysql5.7以上版本sql_mode有</p>
<p>ONLY_FULL_GROUP_BY：对于GROUP BY聚合操作，如果在SELECT中的列，没有在GROUP BY中出现，那么这个SQL是不合法的，或者这个字段出现在聚合函数里面</p>
<p>group by：select 选取分组中的列+聚合函数 from 表名称 group by 分组的列</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#创建表语句</span><br><span class="line"><span class="comment">-- test.sys_user definition</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `sys_user` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;主键&#x27;</span>,</span><br><span class="line">  `user_code` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `user_name` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户名称&#x27;</span>,</span><br><span class="line">  `address` <span class="type">varchar</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;地址&#x27;</span>,</span><br><span class="line">  `create_time` <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">12</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 COMMENT<span class="operator">=</span><span class="string">&#x27;用户表&#x27;</span>;</span><br><span class="line"></span><br><span class="line">#插入数据</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test.sys_user</span><br><span class="line">(id, user_code, user_name, address, create_time)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">1</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;张三1&#x27;</span>, <span class="string">&#x27;北京&#x27;</span>, <span class="string">&#x27;2019-09-10 11:22:23&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test.sys_user</span><br><span class="line">(id, user_code, user_name, address, create_time)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">2</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;张三2&#x27;</span>, <span class="string">&#x27;北京&#x27;</span>, <span class="string">&#x27;2019-09-10 12:22:23&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test.sys_user</span><br><span class="line">(id, user_code, user_name, address, create_time)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">3</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;张三3&#x27;</span>, <span class="string">&#x27;北京&#x27;</span>, <span class="string">&#x27;2019-09-05 12:22:23&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test.sys_user</span><br><span class="line">(id, user_code, user_name, address, create_time)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">4</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;张三4&#x27;</span>, <span class="string">&#x27;北京&#x27;</span>, <span class="string">&#x27;2019-09-06 12:22:23&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test.sys_user</span><br><span class="line">(id, user_code, user_name, address, create_time)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">5</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;李四1&#x27;</span>, <span class="string">&#x27;上海&#x27;</span>, <span class="string">&#x27;2019-09-06 12:22:23&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test.sys_user</span><br><span class="line">(id, user_code, user_name, address, create_time)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">6</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;李四2&#x27;</span>, <span class="string">&#x27;上海&#x27;</span>, <span class="string">&#x27;2019-09-07 12:22:23&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test.sys_user</span><br><span class="line">(id, user_code, user_name, address, create_time)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">7</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;李四3&#x27;</span>, <span class="string">&#x27;上海&#x27;</span>, <span class="string">&#x27;2019-09-11 12:22:23&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test.sys_user</span><br><span class="line">(id, user_code, user_name, address, create_time)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">8</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;李四4&#x27;</span>, <span class="string">&#x27;上海&#x27;</span>, <span class="string">&#x27;2019-09-12 12:22:23&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test.sys_user</span><br><span class="line">(id, user_code, user_name, address, create_time)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">9</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;王二1&#x27;</span>, <span class="string">&#x27;广州&#x27;</span>, <span class="string">&#x27;2019-09-03 12:22:23&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test.sys_user</span><br><span class="line">(id, user_code, user_name, address, create_time)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">10</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;王二2&#x27;</span>, <span class="string">&#x27;广州&#x27;</span>, <span class="string">&#x27;2019-09-04 12:22:23&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> test.sys_user</span><br><span class="line">(id, user_code, user_name, address, create_time)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">11</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;王二3&#x27;</span>, <span class="string">&#x27;广州&#x27;</span>, <span class="string">&#x27;2019-09-05 12:22:23&#x27;</span>);</span><br><span class="line"></span><br><span class="line">#查询语句</span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">	e.id ,</span><br><span class="line">	e.user_name,</span><br><span class="line">	e.address</span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">	sys_user e,</span><br><span class="line">	(</span><br><span class="line">	<span class="keyword">select</span></span><br><span class="line">		user_code ,</span><br><span class="line">		<span class="built_in">max</span>(create_time) <span class="keyword">as</span> create_time</span><br><span class="line">	<span class="keyword">from</span></span><br><span class="line">		sys_user su</span><br><span class="line">	<span class="keyword">group</span> <span class="keyword">by</span></span><br><span class="line">		user_code,</span><br><span class="line">		address ) <span class="keyword">as</span> t</span><br><span class="line"><span class="keyword">where</span></span><br><span class="line">	e.user_code <span class="operator">=</span> t.user_code</span><br><span class="line">	<span class="keyword">and</span> e.create_time <span class="operator">=</span> t.create_time;</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/carrywl/image-hosting/raw/master/image-codeStudy/image-20211009123707911.png" alt="image-20211009123707911"></p>
<h2 id="3-mysql查询sql-mode"><a href="#3-mysql查询sql-mode" class="headerlink" title="3.mysql查询sql_mode"></a>3.mysql查询sql_mode</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> @<span class="variable">@global</span>.sql_mode;</span><br></pre></td></tr></table></figure>

<h2 id="4-left-join-左表合并去重技巧总结"><a href="#4-left-join-左表合并去重技巧总结" class="headerlink" title="4.left join 左表合并去重技巧总结"></a>4.left join 左表合并去重技巧总结</h2><blockquote>
<p>参考资料：</p>
<blockquote>
<ol>
<li><a class="link"   href="https://blog.csdn.net/weixin_42400621/article/details/113134111%E3%80%90%E6%9C%80%E6%96%B0%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2%E3%80%91" >https://blog.csdn.net/weixin_42400621/article/details/113134111【最新数据查询】<i class="fas fa-external-link-alt"></i></a></li>
<li><a class="link"   href="https://blog.csdn.net/ZYC88888/article/details/83002882%E3%80%90left" >https://blog.csdn.net/ZYC88888/article/details/83002882【left<i class="fas fa-external-link-alt"></i></a> join】</li>
</ol>
</blockquote>
</blockquote>
]]></content>
      <categories>
        <category>JAVA</category>
      </categories>
      <tags>
        <tag>mybatis</tag>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title>第一次出差-北京</title>
    <url>/2021/09/09/%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%87%BA%E5%B7%AE-%E5%8C%97%E4%BA%AC/</url>
    <content><![CDATA[<h1 id="第一次出差-北京"><a href="#第一次出差-北京" class="headerlink" title="第一次出差-北京"></a>第一次出差-北京</h1><h2 id="2021-09-08"><a href="#2021-09-08" class="headerlink" title="2021-09-08"></a>2021-09-08</h2><p>14:00刚刚到酒店还没收拾休息吃饭，就立马让去公司，原本骑车20分钟的路程，13分钟到了，出了一身汗，中途导航还出现了各种奇葩，开会时，因为没休息好，有点困，开完了，文哥也就是我这边的领导，就分配给我任务，让我设计类图，er图，流程图，可是我这个之前从来没弄过，要求第二天下班交上，这个项目是完全从0开始，以后还要写接口，很多，要求月底完成，唉，压力好大啊，和另一个小伙伴要了一份参考，但是感觉还是不会，只能硬着头皮上了，下午大部分时间是慌张的，不知道怎么办，但是因为我对象之前出差的经验，我也不敢早走，但是我都看他们不经常在工位，经常出去，就以为他们走了，很纠结，最后终于坚持到文哥回来，然后待了一会说，可以走了，我才开始准备走的，但是心里还是想着那三个任务，咋治啊。晚上回家先和家里报了平安，然后没有时间玩和休息，点了一份外卖，然后再熟悉需求，好累啊。</p>
<h2 id="2021-09-09"><a href="#2021-09-09" class="headerlink" title="2021-09-09"></a>2021-09-09</h2><p>早晨我很早就起来了，他们说9点到就行，但是他们大部分人都是10点到的，甚至还有十一点的，中午到了饭点，他们也不走，我也不敢走，不知道去那里吃饭，最后文哥说吃饭，跟着去了B1吃的，胃口大不如以前，中午睡了一小会，也睡不着了，心里不踏实，没干完，也不会，希望自己能撑住吧。刚才说下午还有别的需求，我彻底放弃了。画完之后，交给文哥看，一个都不对，要重新修改，并且又增加了三个任务，接口文档，需求不明确，项目排期，并且，第二天上午就要，呜呜，我算下来，加上我之前不合格需要重改的，四个文档，晚上又要加班了。晚上，我们三个开会，他们好像以为我什么都会，问我，我已经没法思考了，好累，想着只要你们其中一个说出解决的办法，我就按你们的走。</p>
<h2 id="2021-09-10"><a href="#2021-09-10" class="headerlink" title="2021-09-10"></a>2021-09-10</h2><p>还是早早的到了公司，但是丝毫提不起工作的兴趣，一方面想着破罐子破摔，另一方想着自己努力加油，专心工作，心里烦躁，不知道今天是怎样的一天。先开始再仔细梳理下需求吧。我们下午四点时候交上来那四个文档，然后文哥一直没回复，直到快下班，文哥说等会开会，看来是不满意了，的确，因为是赶工做出来的，我现在只是做的大体的东西，具体的部分说实话，我根本不了解，但是他今天一天没来，最后那个董走了，我看他走了，我也跟着跑了，他还给我解释自己早走，我想，我也是一个小白，大家都一样。然后文哥说6:30开会，但是我6:03已经从公司出来，我想赶紧骑车回家开会吧，疯狂骑车到家，开会，这一开就是8:30，要不是他有事，还可以继续，我就趁这个空闲，立马点了外卖吃了饭，果不其然，过了几分钟就说，再开，这一开就是10:30，但是也逐渐明确了流程。说周一，需要再和需求人员沟通，周末加班，弄清楚。</p>
<h2 id="2021-09-11-12"><a href="#2021-09-11-12" class="headerlink" title="2021-09-11-12"></a>2021-09-11-12</h2><p>这两天由于自己的懒惰，明明一天可以干好的事情，老是想着去玩，几乎是玩一小时，工作10分钟，拖了很久，周六晚上意识到后，熬夜到三点，大体过了一遍，本想周天白天再扣扣细节就可以弄完，结果自己的懒惰又犯了，好难受，又拖到晚上11:21，导致自己心情还是一直放不开，希望自己可以专心做一件事情，不要总想着玩，干完了再玩不更爽吗？一定要控制住自己啊，明天就上班了，今晚自我安慰梳理一遍，希望明天可以顺利。这时候我想把自己手机壁纸和电脑壁纸换成自律，希望可以警示自己。</p>
<h2 id="2021-09-13-15"><a href="#2021-09-13-15" class="headerlink" title="2021-09-13-15"></a>2021-09-13-15</h2><p>13号14号对接口，修改接口，字段确认，15号校验接口和流程图，反正就是还未开发，这几天没有干活的动力，我的小伙伴18号就要来了，到时就不会很孤独了，也和大同哥诉苦了一下，15号开始，看接口和流程图出现了很多错误，写日报了，慢慢接受了现在情况，但是还想回去，因为在日常生活方面，自己不能很方便，比如洗衣服等。还有zuo加油。</p>
<h2 id="2021-09-16"><a href="#2021-09-16" class="headerlink" title="2021-09-16"></a>2021-09-16</h2><p>今天把昨天说的错误流程图和接口需要修改的修改好了，要整理码表和类图。今天董来找我问我分发审核状态改变，现在没有角色，在到月底的时间，做到满足需求，很难，对了，今天可以抢票了。12点半就可以了。等会看看，我知道设计很重要，但是为什么不找个专业的呢，我真的感觉自己力不从心。之前没接触过这个框架。牛逼的代价就是加班付出快速成长。票还是没抢到，不给和飞哥说了，可以提前回去，还是挺开心的哈哈哈，飞哥明天要来开会，可能要过来看看，还是挺紧张</p>
<h2 id="2021-09-17-18"><a href="#2021-09-17-18" class="headerlink" title="2021-09-17-18"></a>2021-09-17-18</h2><p>17号是开发的第一天，对这个框架不熟悉，导致我开发缓慢，弄了一晚上才有一些思路，而且这个框架必须使用专业版IDEA才可以，使用社区版的无法启动，就离谱，18号飞哥来北京开会，我和他吐槽了很多，之后中午吃饭捎带着我和雷总还有孙老师一块吃了一个湘菜，说实话挺辣的，吃完之后，由于中午没睡觉，导致下午开发时候困，进度缓慢，幸亏文哥没来检查进度，不然又要被说了，晚上回家加班，刚想提交，发现冲突了出现shelf，百度没找到解决办法，只能重新写，然后重新提交。最后搞定。今天知道了贺维保不是实习生，而是三年工作经验，在试用期的正式员工，给我他之前是干化工的，说干化工的更辛苦，相比计算机来说，因为我没干过别的，所以无法知道自己其实算是好的。</p>
<h2 id="2021-09-19-2021-09-20"><a href="#2021-09-19-2021-09-20" class="headerlink" title="2021-09-19-2021-09-20"></a>2021-09-19-2021-09-20</h2><p>这两天一直下雨，浑浑噩噩的只开发了一个接口，修补了之前一个接口的问题，但是好在把思路整理了一下。21决定去长城。</p>
]]></content>
      <categories>
        <category>出差</category>
      </categories>
      <tags>
        <tag>出差</tag>
      </tags>
  </entry>
</search>
